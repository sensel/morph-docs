{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Sensel Documentation This site provides reference documentation for Sensel hardware and software. Use the \"hamburger\" menu or the left-side nav to access documentation for the different products. Products Morph Sensel API Git Hub This documentation source is hosted on our github site . If you spot an error or room for improvement, feel free to clone the repo, make your changes, and make a pull request or just simply log an issue","title":"Home"},{"location":"#welcome-to-sensel-documentation","text":"This site provides reference documentation for Sensel hardware and software. Use the \"hamburger\" menu or the left-side nav to access documentation for the different products.","title":"Welcome to Sensel Documentation"},{"location":"#products","text":"Morph Sensel API","title":"Products"},{"location":"#git-hub","text":"This documentation source is hosted on our github site . If you spot an error or room for improvement, feel free to clone the repo, make your changes, and make a pull request or just simply log an issue","title":"Git Hub"},{"location":"api/","text":"How the Sensor Works If you want to use the API to create your own programs that interact with a Sensel pressure sensor, it\u2019s important to have a basic understanding of how the sensor detects gestures, how it interprets the data, and how your computer gets information from the sensor. The sensels A Sensel device is made up of a grid of individual pressure sensors, or sensels . In the case of the Morph, the high resolution sensor is made of a grid of 185 columns x 105 rows of sensels. When a contact is made, several sensels are activated, with each having its own pressure reading, combined to generate touch events. The force image Similar to a monitor\u2019s pixels or a camera\u2019s CCD, the varying levels of pressure sensels form an image. This matrix of values is buffered on the device\u2019s microprocessor, waiting for retrieval from a computer. Contacts But wait, there\u2019s more! The microprocessor also analyzes the image using computer vision techniques to identify individual touches, the force of each individual touch, the size, and more. You don\u2019t need to process the raw data, you just need to fetch it from each frame using the API. Polling Every frame must be requested to get information about the contacts. This makes the API flexible for different uses and computers. About the API The Sensel API is used to get inside all the contact and pressure information from the sensor. Unlike the predefined functions of the overlays, using the API lets you define the interaction and innovate with the uniquely sensitive pressure technology underneath the unassuming black plastic. Installation The API files and examples are available at the Sensel github site . The sensel-install directory contains installers for Windows, Mac and Linux that places Sensel libraries and headers into the appropriate directory for each operating system. The README has terse details about the API, including installation details. This guide is designed to help you understand what the API provides, and how the sensor works to get pressure data to your computer. Details This guide also documents all the API calls and force-frame decompression API calls Examples The Sensel API repository has several basic examples to get you started and help you figure out the best way to get the data you need. The API has libraries suitable for development in C, C#, and Python. The examples are designed to print output to the console, to give you immediate feedback on what is happening. Each language\u2019s example also gives you a template for what to include in the headers and where to put any files that need to be imported into your main program. They also provide standard routines for fetching a frame, getting information about the frame, getting raw frame data if needed, and getting contact information within each frame. example_1_hello_sensel - Uses the getSensorInfo call to retrieve and print out some basic information about the sensor. No interaction required, just run the example. example_2_sensel_contacts - Shows how to retrieve data about contacts and the encompassing frame. This example fetches 500 frames before ending. Example_3_sensel_forces - A simple example of fetching the force image and doing something with it. Scans the force array of the frame and sums all forces on every sensel in the sensor and prints the result to the console. Teach A Coder To Fish These elementary examples may seem to lead to more questions than they answer. The truth is that they lead to more interesting and productive questions! For example, you might think of example 2 \u201cOk, I see the contact ID, but I need more information! Where is that ID? How hard is the press? What else can I know?\u201d It is more worthwhile to point you to the best place to find these answers: in the language\u2019s accompanying includes: C: sensel.h C#: Sensel.cs Python: sensel.py In the case of the C# and Python examples, these files are located in the same directory as the examples themselves. The C header file is in the repo\u2019s sensel-lib/src directory. Reading through these files, you\u2019ll quickly find what information is available. For example, in sensel.py, you\u2019ll find the Contact class that shows all the possible properties of a contact. Here\u2019s an excerpt: class SenselContact(Structure): _fields_ = [(\"content_bit_mask\", c_ubyte), (\"id\", c_ubyte), (\"state\", c_int), (\"x_pos\", c_float), (\"y_pos\", c_float), (\"total_force\", c_float), As you\u2019ll notice in example 2, the script gets the ID from frame.contacts[n].id . After looking at the Contacts class, It is logical to assume you can get the coordinates from frame.contacts[n].x_pos and frame.contacts[n].y_pos . The next section \u201cAPI Data Output Description\u201d describes all the possible outputs from a frame and contacts. You can also quickly get all the defined constants from the include files. In particular, the various MASK values are often referenced, and the include clearly defines those at the top of the include file. Finally, it is worth investigating the include files to learn about all the functions that could be used to build out the examples into something substantial and see how the contacts data is accessed. Force Frame Decompression There is a separate library that is used to decompress the Force Frame. This library is optional, and is used to access to the underlying force image. The library takes the compressed force and label arrays sent from the device and decompresses them into easy to access force and label images. API Data Output Description Now that you have the API and the libraries installed, and you\u2019ve run the examples and gotten some data, you probably have the question \u201cWhat does it all mean?\u201d ` There are two structures of data you will be concerned with from the sensor: frame and contact. Frame provides information about the entire surface at a given time, such as the array of contacts, number of contacts, the forces array, accelerometer data, lost frames, and more. Contact describes parameters associated with an individual touch on the surface within any frame: where, how much pressure, how big of a touch, the orientation, etc. Contact information is what most developers will be interested in. Researchers and programmers looking to extend Contact data will find the Frame Data useful. This guide describes all the possible output from polling the sensor with the API. Frame Data Frame data is reported every time a frame is requested, within the limits of the scanning rates. Each frame reports the Contact Data (described in the next section) and some additional data described below. Contact Array The contact array contains all the data about all the touches. Details about each touch are explained in the Contact Data section. Number of Contacts A single integer reporting the number of active contacts, or contacts with the state start . Accelerometer Value range: 0-1 Units: Gs If the device is equipped with an accelerometer, raw accelerometer data can tell you the orientation of the device. A three item list accel_data reports the force of gravity on each axis [x, y, and z]. The Morph is equipped with an accelerometer. Force Array Value range: 0-8192 Units: grams The force array reports a 2D array of all the force readings for every sensel (force sensor) on the device. The resolution of this array matches the row/column count reported by the device. In the case of the Morph, this is a 185x105 matrix. You can use the SenselApp Visualizer to get an idea of what the output \u201clooks\u201d like. This is the raw pressure image of all contacts, and would require additional image processing or machine learning algorithms to be useful. Labels Array Value range: 0-16 Units: n/a The labels array is a 2D array of row/column elements that describe contact blobs with the assigned IDs. The Labels can be used to associate contact tracking with the force array. The Labels array tells you the ID at every sensel on the device in any frame. An ID of 255 is the null ID. Lost Frame Count The Lost Frame count reports the difference between the frames scanned by the sensor and the frames retrieved by the API. This can be helpful in diagnosing problems and optimizing your program. Content Bitmask The Content Bitmask is used to enable or disable reporting of the five (5) parameters in Frame Data: Contacts, Force Array, Labels Array, Accelerometer Data, and Lost Frame Count. Set the byte value according to the parameters needed. For example, a value of \u201c12\u201d (01100) would report Labels Array and Accelerometer Data. Contact Data A Sensel sensor can sense 1 to 16 fingers (or styli) and will report the following information for each \u201ctouch\u201d. By default, ID, Coordinates, State, Total Force, and Area are reported. The additional contact parameters Ellipse, Deltas, Bounding Box, and Peak Force can be reported according to the four bit value of the Set Contact Bitmask. Values (except state) are retrieved as individual floating point or integer numbers. For example, the ellipse is not reported as an array from fetching the ellipse property resulting in [area, orientation, major axis, minor axis] , but as individual contact properties for each parameter. ID Value range: 0 - 15 ID is assigned per contact, unique for the duration of the contact. For example if you put your index finger down, the contact will be assigned ID 0. Adding a thumb gives that contact ID 1. The API does not assign IDs based on finger or persistence beyond the duration of a contact. For example, the index finger is not always assigned ID 0. IDs are assigned sequentially and recycled when contacts are released. Coordinates Value range: 0 - 240, 0 - 139 Units: millimeters Coordinates are retrieved from separate nodes x_pos and y_pos for horizontal and vertical coordinates. The origin is the top left of the device. Y is positive down, X is positive to the right. State Values: start , move , end When contact is made, the state is reported as start . If the contact coordinates change, state changes to move. When the contact is broken, it is reported as end. Every contact is guaranteed a start and end state. The move state is not guaranteed, as contacts may happen too rapidly for the scanning rate to reliably report a move. Total Force Value range: 0 - 8192 Units: grams Force is measured in grams, and is a calibrated value for consistency among units. However, it is not suitable for commerce! Area Value range: 0 - 33360 Units: square mm Area reports the size of the contact, as measured by the activity on each sensel of the sensor. Ellipse Value Range: 0 - 360 Units: degrees, mm Three values are reported to describe the approximate ellipse of the contact. The angle of orientation, major axis length, and minor axis length. The angle range can report values outside the 360 degree range to prevent discontinuities; if a contact is rotated past a full turn, the value will increase past 360 degrees allowing for detection of rotation past a full turn (this is somewhat of an edge case). Deltas Value Range: 0 - 240, 0 - 139, 0-8192, 0 - 33360 Units: mm, grams, square mm Deltas reports changes of coordinates, force, and area between frames. These are reported as values \u2206x, \u2206y, \u2206-force, \u2206-area. The deltas could be calculated from other incoming data, but this is a convenient way to access this information. Bounding Box Value range: Units: mm The rectangle that contains the contact area is can be retrieved from four properties, using the top-left and bottom-right corner coordinates of the bounding box. You\u2019ll find the properties min_x , min_y , max_x , max_y in contacts. Peak Force Value range: 0 - 1000 Units: grams, mm The highest detected force value in the contact area has the property peak_force , along with the coordinates where that force occurred, peak_x and peak_y . Set Contact Bitmask This API call will allow the optional parameters to be reported. It\u2019s a single value represented by four (4) bits for each parameter: Ellipse, Deltas, Box, and Peak Force. For example, if you want to see just the Ellipse data reported with the standard data, you\u2019d set the bitmask value to \u201c8\u201d corresponding to the bit pattern [1000]. Ellipse and Deltas would have the value \u201c12\u201d (1100). All optional data would be \u201c0F\u201d (1111).","title":"API primer"},{"location":"api/#how-the-sensor-works","text":"If you want to use the API to create your own programs that interact with a Sensel pressure sensor, it\u2019s important to have a basic understanding of how the sensor detects gestures, how it interprets the data, and how your computer gets information from the sensor.","title":"How the Sensor Works"},{"location":"api/#the-sensels","text":"A Sensel device is made up of a grid of individual pressure sensors, or sensels . In the case of the Morph, the high resolution sensor is made of a grid of 185 columns x 105 rows of sensels. When a contact is made, several sensels are activated, with each having its own pressure reading, combined to generate touch events.","title":"The sensels"},{"location":"api/#the-force-image","text":"Similar to a monitor\u2019s pixels or a camera\u2019s CCD, the varying levels of pressure sensels form an image. This matrix of values is buffered on the device\u2019s microprocessor, waiting for retrieval from a computer.","title":"The force image"},{"location":"api/#contacts","text":"But wait, there\u2019s more! The microprocessor also analyzes the image using computer vision techniques to identify individual touches, the force of each individual touch, the size, and more. You don\u2019t need to process the raw data, you just need to fetch it from each frame using the API.","title":"Contacts"},{"location":"api/#polling","text":"Every frame must be requested to get information about the contacts. This makes the API flexible for different uses and computers.","title":"Polling"},{"location":"api/#about-the-api","text":"The Sensel API is used to get inside all the contact and pressure information from the sensor. Unlike the predefined functions of the overlays, using the API lets you define the interaction and innovate with the uniquely sensitive pressure technology underneath the unassuming black plastic.","title":"About the API"},{"location":"api/#installation","text":"The API files and examples are available at the Sensel github site . The sensel-install directory contains installers for Windows, Mac and Linux that places Sensel libraries and headers into the appropriate directory for each operating system. The README has terse details about the API, including installation details. This guide is designed to help you understand what the API provides, and how the sensor works to get pressure data to your computer.","title":"Installation"},{"location":"api/#details","text":"This guide also documents all the API calls and force-frame decompression API calls","title":"Details"},{"location":"api/#examples","text":"The Sensel API repository has several basic examples to get you started and help you figure out the best way to get the data you need. The API has libraries suitable for development in C, C#, and Python. The examples are designed to print output to the console, to give you immediate feedback on what is happening. Each language\u2019s example also gives you a template for what to include in the headers and where to put any files that need to be imported into your main program. They also provide standard routines for fetching a frame, getting information about the frame, getting raw frame data if needed, and getting contact information within each frame. example_1_hello_sensel - Uses the getSensorInfo call to retrieve and print out some basic information about the sensor. No interaction required, just run the example. example_2_sensel_contacts - Shows how to retrieve data about contacts and the encompassing frame. This example fetches 500 frames before ending. Example_3_sensel_forces - A simple example of fetching the force image and doing something with it. Scans the force array of the frame and sums all forces on every sensel in the sensor and prints the result to the console.","title":"Examples"},{"location":"api/#teach-a-coder-to-fish","text":"These elementary examples may seem to lead to more questions than they answer. The truth is that they lead to more interesting and productive questions! For example, you might think of example 2 \u201cOk, I see the contact ID, but I need more information! Where is that ID? How hard is the press? What else can I know?\u201d It is more worthwhile to point you to the best place to find these answers: in the language\u2019s accompanying includes: C: sensel.h C#: Sensel.cs Python: sensel.py In the case of the C# and Python examples, these files are located in the same directory as the examples themselves. The C header file is in the repo\u2019s sensel-lib/src directory. Reading through these files, you\u2019ll quickly find what information is available. For example, in sensel.py, you\u2019ll find the Contact class that shows all the possible properties of a contact. Here\u2019s an excerpt: class SenselContact(Structure): _fields_ = [(\"content_bit_mask\", c_ubyte), (\"id\", c_ubyte), (\"state\", c_int), (\"x_pos\", c_float), (\"y_pos\", c_float), (\"total_force\", c_float), As you\u2019ll notice in example 2, the script gets the ID from frame.contacts[n].id . After looking at the Contacts class, It is logical to assume you can get the coordinates from frame.contacts[n].x_pos and frame.contacts[n].y_pos . The next section \u201cAPI Data Output Description\u201d describes all the possible outputs from a frame and contacts. You can also quickly get all the defined constants from the include files. In particular, the various MASK values are often referenced, and the include clearly defines those at the top of the include file. Finally, it is worth investigating the include files to learn about all the functions that could be used to build out the examples into something substantial and see how the contacts data is accessed.","title":"Teach A Coder To Fish"},{"location":"api/#force-frame-decompression","text":"There is a separate library that is used to decompress the Force Frame. This library is optional, and is used to access to the underlying force image. The library takes the compressed force and label arrays sent from the device and decompresses them into easy to access force and label images.","title":"Force Frame Decompression"},{"location":"api/#api-data-output-description","text":"Now that you have the API and the libraries installed, and you\u2019ve run the examples and gotten some data, you probably have the question \u201cWhat does it all mean?\u201d ` There are two structures of data you will be concerned with from the sensor: frame and contact. Frame provides information about the entire surface at a given time, such as the array of contacts, number of contacts, the forces array, accelerometer data, lost frames, and more. Contact describes parameters associated with an individual touch on the surface within any frame: where, how much pressure, how big of a touch, the orientation, etc. Contact information is what most developers will be interested in. Researchers and programmers looking to extend Contact data will find the Frame Data useful. This guide describes all the possible output from polling the sensor with the API.","title":"API Data Output Description"},{"location":"api/#frame-data","text":"Frame data is reported every time a frame is requested, within the limits of the scanning rates. Each frame reports the Contact Data (described in the next section) and some additional data described below.","title":"Frame Data"},{"location":"api/#contact-array","text":"The contact array contains all the data about all the touches. Details about each touch are explained in the Contact Data section.","title":"Contact Array"},{"location":"api/#number-of-contacts","text":"A single integer reporting the number of active contacts, or contacts with the state start .","title":"Number of Contacts"},{"location":"api/#accelerometer","text":"Value range: 0-1 Units: Gs If the device is equipped with an accelerometer, raw accelerometer data can tell you the orientation of the device. A three item list accel_data reports the force of gravity on each axis [x, y, and z]. The Morph is equipped with an accelerometer.","title":"Accelerometer"},{"location":"api/#force-array","text":"Value range: 0-8192 Units: grams The force array reports a 2D array of all the force readings for every sensel (force sensor) on the device. The resolution of this array matches the row/column count reported by the device. In the case of the Morph, this is a 185x105 matrix. You can use the SenselApp Visualizer to get an idea of what the output \u201clooks\u201d like. This is the raw pressure image of all contacts, and would require additional image processing or machine learning algorithms to be useful.","title":"Force Array"},{"location":"api/#labels-array","text":"Value range: 0-16 Units: n/a The labels array is a 2D array of row/column elements that describe contact blobs with the assigned IDs. The Labels can be used to associate contact tracking with the force array. The Labels array tells you the ID at every sensel on the device in any frame. An ID of 255 is the null ID.","title":"Labels Array"},{"location":"api/#lost-frame-count","text":"The Lost Frame count reports the difference between the frames scanned by the sensor and the frames retrieved by the API. This can be helpful in diagnosing problems and optimizing your program.","title":"Lost Frame Count"},{"location":"api/#content-bitmask","text":"The Content Bitmask is used to enable or disable reporting of the five (5) parameters in Frame Data: Contacts, Force Array, Labels Array, Accelerometer Data, and Lost Frame Count. Set the byte value according to the parameters needed. For example, a value of \u201c12\u201d (01100) would report Labels Array and Accelerometer Data.","title":"Content Bitmask"},{"location":"api/#contact-data","text":"A Sensel sensor can sense 1 to 16 fingers (or styli) and will report the following information for each \u201ctouch\u201d. By default, ID, Coordinates, State, Total Force, and Area are reported. The additional contact parameters Ellipse, Deltas, Bounding Box, and Peak Force can be reported according to the four bit value of the Set Contact Bitmask. Values (except state) are retrieved as individual floating point or integer numbers. For example, the ellipse is not reported as an array from fetching the ellipse property resulting in [area, orientation, major axis, minor axis] , but as individual contact properties for each parameter.","title":"Contact Data"},{"location":"api/#id","text":"Value range: 0 - 15 ID is assigned per contact, unique for the duration of the contact. For example if you put your index finger down, the contact will be assigned ID 0. Adding a thumb gives that contact ID 1. The API does not assign IDs based on finger or persistence beyond the duration of a contact. For example, the index finger is not always assigned ID 0. IDs are assigned sequentially and recycled when contacts are released.","title":"ID"},{"location":"api/#coordinates","text":"Value range: 0 - 240, 0 - 139 Units: millimeters Coordinates are retrieved from separate nodes x_pos and y_pos for horizontal and vertical coordinates. The origin is the top left of the device. Y is positive down, X is positive to the right.","title":"Coordinates"},{"location":"api/#state","text":"Values: start , move , end When contact is made, the state is reported as start . If the contact coordinates change, state changes to move. When the contact is broken, it is reported as end. Every contact is guaranteed a start and end state. The move state is not guaranteed, as contacts may happen too rapidly for the scanning rate to reliably report a move.","title":"State"},{"location":"api/#total-force","text":"Value range: 0 - 8192 Units: grams Force is measured in grams, and is a calibrated value for consistency among units. However, it is not suitable for commerce!","title":"Total Force"},{"location":"api/#area","text":"Value range: 0 - 33360 Units: square mm Area reports the size of the contact, as measured by the activity on each sensel of the sensor.","title":"Area"},{"location":"api/#ellipse","text":"Value Range: 0 - 360 Units: degrees, mm Three values are reported to describe the approximate ellipse of the contact. The angle of orientation, major axis length, and minor axis length. The angle range can report values outside the 360 degree range to prevent discontinuities; if a contact is rotated past a full turn, the value will increase past 360 degrees allowing for detection of rotation past a full turn (this is somewhat of an edge case).","title":"Ellipse"},{"location":"api/#deltas","text":"Value Range: 0 - 240, 0 - 139, 0-8192, 0 - 33360 Units: mm, grams, square mm Deltas reports changes of coordinates, force, and area between frames. These are reported as values \u2206x, \u2206y, \u2206-force, \u2206-area. The deltas could be calculated from other incoming data, but this is a convenient way to access this information.","title":"Deltas"},{"location":"api/#bounding-box","text":"Value range: Units: mm The rectangle that contains the contact area is can be retrieved from four properties, using the top-left and bottom-right corner coordinates of the bounding box. You\u2019ll find the properties min_x , min_y , max_x , max_y in contacts.","title":"Bounding Box"},{"location":"api/#peak-force","text":"Value range: 0 - 1000 Units: grams, mm The highest detected force value in the contact area has the property peak_force , along with the coordinates where that force occurred, peak_x and peak_y .","title":"Peak Force"},{"location":"api/#set-contact-bitmask","text":"This API call will allow the optional parameters to be reported. It\u2019s a single value represented by four (4) bits for each parameter: Ellipse, Deltas, Box, and Peak Force. For example, if you want to see just the Ellipse data reported with the standard data, you\u2019d set the bitmask value to \u201c8\u201d corresponding to the bit pattern [1000]. Ellipse and Deltas would have the value \u201c12\u201d (1100). All optional data would be \u201c0F\u201d (1111).","title":"Set Contact Bitmask"},{"location":"api_adv/","text":"API Advanced Topics For programmers who need to configure the sensor with custom values, and get all the details from the device, we've extended the API documentation with these Advanced topics. Baud Rate For the Sensel Morph Hacker Cable, the communication baud rate is set to 115200. The baud rate value cannot be modified. Scan Detail Scan Detail determines the spatial resolution and speed of scanning of the Sensel device. There are three supported modes: High Detail (0), Medium Detail (1), Low Detail (2). Medium Detail is the default mode. High Detail gives you finer spatial resolution, but lower speed. The Low Detail mode gives you a faster frame rate but lower spatial resolution. The scan detail can be set using senselSetScanDetail. Frame Rate By default, the sensor scans at 125 frames per second. You can change the maximum frame rate by using senselSetMaxFrameRate. This can be useful if your application is reading from the sensor significantly slower than the sensor is scanning (i.e. Arduino). The maximum allowable frame rate value is 2000 (value is in Hz). For higher frame rates, however, the actual frame rate is dependent on the Scan Detail. For instance, when the Sensel Morph Scan Detail is set to Medium Detail, the sensor can be scanned up to 250 frames per second, while in Low Detail, the sensor can be scanned up to 1000 frames per second. This detail scanning limit will override the maximum frame rate. Dynamic Baseline Dynamic Baselining removes unintended forces over time in order to prevent spurious contacts and is on by default. Dynamic Baselining can be enabled and disabled using senselSetDynamicBaselineEnabled. Blob Merging As part of our contact detection algorithm, we first detect regions of force that could be contacts, called Blobs. During this contact detection, one or more Blobs can be merged into a single Contact. Larger contacts, like thumbs or wrists, are often made up of two or more Blobs. Blob Merging is on by default. It can be disabled by using senselSetContactsEnableBlobMerge. Contacts Min Force The Contacts Min Force is the minimum force needed to have a contact reported. The value can be changed using senselSetContactsMinForce. The value being sent should be multiplied by the unit scale for force (by default 8 on the Sensel Morph). The default value of the Contacts Min Force is 160 (20g). LED Control On Sensel devices with LEDs, like the Sensel Morph, it is possible to discover the number of LEDs, determine the brightness levels available, get the current state of each LED, and set each LED. This is possible through the API using senselGetNumAvailableLEDs, senselGetMaxLEDBrightness, senselSetLEDBrightness, and senselGetLEDBrightness respectively. On the Sensel Morph, there are 24 LEDs, each with 256 levels of brightness. Power Button Pressed On Sensel devices with a Power Button, the API can be used to detect whether the button is being pressed using senselGetPowerButtonPressed. The value will be 1 if the button is pressed and 0 otherwise. Buffer Control If frames are not read quickly off a Sensel device, it is possible that a frame of data could be missed. As a result, it is possible to set a buffer on the Sensel device to accumulate frames until the Sensel device is read using senselSetBufferControl. By default, the buffer is disabled. On a Sensel Morph it is possible to set this buffer up to 50 frames.","title":"API advanced"},{"location":"api_adv/#api-advanced-topics","text":"For programmers who need to configure the sensor with custom values, and get all the details from the device, we've extended the API documentation with these Advanced topics.","title":"API Advanced Topics"},{"location":"api_adv/#baud-rate","text":"For the Sensel Morph Hacker Cable, the communication baud rate is set to 115200. The baud rate value cannot be modified.","title":"Baud Rate"},{"location":"api_adv/#scan-detail","text":"Scan Detail determines the spatial resolution and speed of scanning of the Sensel device. There are three supported modes: High Detail (0), Medium Detail (1), Low Detail (2). Medium Detail is the default mode. High Detail gives you finer spatial resolution, but lower speed. The Low Detail mode gives you a faster frame rate but lower spatial resolution. The scan detail can be set using senselSetScanDetail.","title":"Scan Detail"},{"location":"api_adv/#frame-rate","text":"By default, the sensor scans at 125 frames per second. You can change the maximum frame rate by using senselSetMaxFrameRate. This can be useful if your application is reading from the sensor significantly slower than the sensor is scanning (i.e. Arduino). The maximum allowable frame rate value is 2000 (value is in Hz). For higher frame rates, however, the actual frame rate is dependent on the Scan Detail. For instance, when the Sensel Morph Scan Detail is set to Medium Detail, the sensor can be scanned up to 250 frames per second, while in Low Detail, the sensor can be scanned up to 1000 frames per second. This detail scanning limit will override the maximum frame rate.","title":"Frame Rate"},{"location":"api_adv/#dynamic-baseline","text":"Dynamic Baselining removes unintended forces over time in order to prevent spurious contacts and is on by default. Dynamic Baselining can be enabled and disabled using senselSetDynamicBaselineEnabled.","title":"Dynamic Baseline"},{"location":"api_adv/#blob-merging","text":"As part of our contact detection algorithm, we first detect regions of force that could be contacts, called Blobs. During this contact detection, one or more Blobs can be merged into a single Contact. Larger contacts, like thumbs or wrists, are often made up of two or more Blobs. Blob Merging is on by default. It can be disabled by using senselSetContactsEnableBlobMerge.","title":"Blob Merging"},{"location":"api_adv/#contacts-min-force","text":"The Contacts Min Force is the minimum force needed to have a contact reported. The value can be changed using senselSetContactsMinForce. The value being sent should be multiplied by the unit scale for force (by default 8 on the Sensel Morph). The default value of the Contacts Min Force is 160 (20g).","title":"Contacts Min Force"},{"location":"api_adv/#led-control","text":"On Sensel devices with LEDs, like the Sensel Morph, it is possible to discover the number of LEDs, determine the brightness levels available, get the current state of each LED, and set each LED. This is possible through the API using senselGetNumAvailableLEDs, senselGetMaxLEDBrightness, senselSetLEDBrightness, and senselGetLEDBrightness respectively. On the Sensel Morph, there are 24 LEDs, each with 256 levels of brightness.","title":"LED Control"},{"location":"api_adv/#power-button-pressed","text":"On Sensel devices with a Power Button, the API can be used to detect whether the button is being pressed using senselGetPowerButtonPressed. The value will be 1 if the button is pressed and 0 otherwise.","title":"Power Button Pressed"},{"location":"api_adv/#buffer-control","text":"If frames are not read quickly off a Sensel device, it is possible that a frame of data could be missed. As a result, it is possible to set a buffer on the Sensel device to accumulate frames until the Sensel device is read using senselSetBufferControl. By default, the buffer is disabled. On a Sensel Morph it is possible to set this buffer up to 50 frames.","title":"Buffer Control"},{"location":"api_arduino/","text":"Using the Morph Developer's Cable and Arduino The Morph Developer's Cable is a simple accessory that connects the Morph's micro USB to the serial UART pins of an Arduino MEGA microcontroller. This simple connection allows developers to develop prototypes of products that do not depend on a fully featured computer, but instead run on a simple microcontroller and basic power supply. Getting Started You'll need at least a few things on hand to start experimenting with the Arduino API. Hardware: Morph Morph Developer's Cable Arduino MEGA or DUE USB Printer (A/B) Cable Power Supply optional Hardware Connections It is VERY IMPORTANT TO CHECK YOUR CONNECTIONS . If you make a mistake and connect Ardunio power to the Morph's Serial connections, YOU MAY DAMAGE YOUR MORPH beyond repair. Your basic connections for developing with the Arduino IDE and the Sensel Morph are as follows: USB Printer Cable connects your computer to the Arduino's USB B port Developer Cable USB micro to Morph On Developer Cable: Black, Red, White, Yellow: Black - GND Red - RX White - TX Yellow - 5V_IN On Arduino: Black, Red, White, Yellow: Black - GND Red - TX1 White - RX1 Yellow - 5V If you want to run the Arduino without a computer, you'll need a power supply connected to the barrel jack on the Arduino. Here are detailed images showing all the connections: Connections to Developer's Cable micro USB side Connections from Developer's Cable to \"Serial1\" on Arduino MEGA board (pins 18 and 19). Connections from Developer's Cable to Arduino MEGA power supply. Software: Sensel Arduino API Arduino IDE for your OS Software Setup These instructions assume your hardware connections are all correct. Download and install the Arduino IDE on your computer, following the installer's instructions. Download the Sensel Arduino API and move the expanded folder (usually expands to the folder name sensel-api-arduino-master ) to your Documents/Arduino/libraries folder. This will vary among operating systems, but it is found in the User/Documents folder, unless you have configured the IDE otherwise. Open the Arduino IDE application. Select the serial port that the Arduino is connected to. The name of this port varies among operating systems, here is an example image for macOS: Select your Arduino MEGA or DUE from the board list: Open the serial monitor window and set the baud rate to 115200 : Find the file sensel-api-arduino.ino in the sensel-api-arduino-master/senselpapi-arduino folder. Double click to open it. You'll notice the sensel.ino tab is also visible - that happens automatically because the file is included in the sensel-api-arduino.ino sketch. Use the right-facing arrow button to upload the sketch to the Arduino: If there are no errors, you should see a stream of data printed in the Serial Monitor window: When you touch the Morph, you'll see all the contact information printed in the Monitor: Congratulations, everything is working! Why MEGA or DUE? The MEGA and DUE boards have dedicated hardware serial support. We found that the Arduino SoftwareSerial , which is needed to support a broader range of Arduino boards, was not up to the task of high baudrate, high bandwidth data coming from the Morph. Errors Here are some common errors that may be reported in the sketch window. This indicates that your serial connection to the Arduino is incorrect. You likely have the Red and White wires connected to pins 0 and 1 instead of the dedicated serial pins 18 and 19: Sketch uses 5108 bytes (2%) of program storage space. Maximum is 253952 bytes. Global variables use 1461 bytes (17%) of dynamic memory, leaving 6731 bytes for local variables. Maximum is 8192 bytes. avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_getsync(): timeout communicating with programmer An error occurred while uploading the sketch Errors such as these indicate that you are trying to use an UNO board. You need to use a MEGA or DUE: In file included from /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel-api-arduino.ino:25:0: /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselOpen()': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:37:3: note: in expansion of macro 'SenselSerial' SenselSerial.begin(115200); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselReadAvailable()': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:67:13: note: in expansion of macro 'SenselSerial' int len = SenselSerial.available(); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselWriteReg(byte, byte, byte)': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:77:3: note: in expansion of macro 'SenselSerial' SenselSerial.write(0x01); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselReadReg(byte, byte, byte*)': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:94:3: note: in expansion of macro 'SenselSerial' SenselSerial.write(0x81); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void _senselFlush()': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:131:9: note: in expansion of macro 'SenselSerial' while(SenselSerial.available() > 0) { ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:135:3: note: in expansion of macro 'SenselSerial' SenselSerial.flush(); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselGetFrame(SenselFrame*)': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:142:3: note: in expansion of macro 'SenselSerial' SenselSerial.write(0x81); ^ Using library sensel-api-arduino-master in folder: /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master (legacy) exit status 1 Error compiling for board Arduino/Genuino Uno. This indicates that your Red and White wires are not properly connected:","title":"API with Arduino"},{"location":"api_arduino/#using-the-morph-developers-cable-and-arduino","text":"The Morph Developer's Cable is a simple accessory that connects the Morph's micro USB to the serial UART pins of an Arduino MEGA microcontroller. This simple connection allows developers to develop prototypes of products that do not depend on a fully featured computer, but instead run on a simple microcontroller and basic power supply.","title":"Using the Morph Developer's Cable and Arduino"},{"location":"api_arduino/#getting-started","text":"You'll need at least a few things on hand to start experimenting with the Arduino API.","title":"Getting Started"},{"location":"api_arduino/#hardware","text":"Morph Morph Developer's Cable Arduino MEGA or DUE USB Printer (A/B) Cable Power Supply optional","title":"Hardware:"},{"location":"api_arduino/#hardware-connections","text":"It is VERY IMPORTANT TO CHECK YOUR CONNECTIONS . If you make a mistake and connect Ardunio power to the Morph's Serial connections, YOU MAY DAMAGE YOUR MORPH beyond repair. Your basic connections for developing with the Arduino IDE and the Sensel Morph are as follows: USB Printer Cable connects your computer to the Arduino's USB B port Developer Cable USB micro to Morph On Developer Cable: Black, Red, White, Yellow: Black - GND Red - RX White - TX Yellow - 5V_IN On Arduino: Black, Red, White, Yellow: Black - GND Red - TX1 White - RX1 Yellow - 5V If you want to run the Arduino without a computer, you'll need a power supply connected to the barrel jack on the Arduino. Here are detailed images showing all the connections: Connections to Developer's Cable micro USB side Connections from Developer's Cable to \"Serial1\" on Arduino MEGA board (pins 18 and 19). Connections from Developer's Cable to Arduino MEGA power supply.","title":"Hardware Connections"},{"location":"api_arduino/#software","text":"Sensel Arduino API Arduino IDE for your OS","title":"Software:"},{"location":"api_arduino/#software-setup","text":"These instructions assume your hardware connections are all correct. Download and install the Arduino IDE on your computer, following the installer's instructions. Download the Sensel Arduino API and move the expanded folder (usually expands to the folder name sensel-api-arduino-master ) to your Documents/Arduino/libraries folder. This will vary among operating systems, but it is found in the User/Documents folder, unless you have configured the IDE otherwise. Open the Arduino IDE application. Select the serial port that the Arduino is connected to. The name of this port varies among operating systems, here is an example image for macOS: Select your Arduino MEGA or DUE from the board list: Open the serial monitor window and set the baud rate to 115200 : Find the file sensel-api-arduino.ino in the sensel-api-arduino-master/senselpapi-arduino folder. Double click to open it. You'll notice the sensel.ino tab is also visible - that happens automatically because the file is included in the sensel-api-arduino.ino sketch. Use the right-facing arrow button to upload the sketch to the Arduino: If there are no errors, you should see a stream of data printed in the Serial Monitor window: When you touch the Morph, you'll see all the contact information printed in the Monitor: Congratulations, everything is working!","title":"Software Setup"},{"location":"api_arduino/#why-mega-or-due","text":"The MEGA and DUE boards have dedicated hardware serial support. We found that the Arduino SoftwareSerial , which is needed to support a broader range of Arduino boards, was not up to the task of high baudrate, high bandwidth data coming from the Morph.","title":"Why MEGA or DUE?"},{"location":"api_arduino/#errors","text":"Here are some common errors that may be reported in the sketch window. This indicates that your serial connection to the Arduino is incorrect. You likely have the Red and White wires connected to pins 0 and 1 instead of the dedicated serial pins 18 and 19: Sketch uses 5108 bytes (2%) of program storage space. Maximum is 253952 bytes. Global variables use 1461 bytes (17%) of dynamic memory, leaving 6731 bytes for local variables. Maximum is 8192 bytes. avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_ReceiveMessage(): timeout avrdude: stk500v2_getsync(): timeout communicating with programmer An error occurred while uploading the sketch Errors such as these indicate that you are trying to use an UNO board. You need to use a MEGA or DUE: In file included from /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel-api-arduino.ino:25:0: /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselOpen()': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:37:3: note: in expansion of macro 'SenselSerial' SenselSerial.begin(115200); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselReadAvailable()': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:67:13: note: in expansion of macro 'SenselSerial' int len = SenselSerial.available(); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselWriteReg(byte, byte, byte)': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:77:3: note: in expansion of macro 'SenselSerial' SenselSerial.write(0x01); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselReadReg(byte, byte, byte*)': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:94:3: note: in expansion of macro 'SenselSerial' SenselSerial.write(0x81); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void _senselFlush()': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:131:9: note: in expansion of macro 'SenselSerial' while(SenselSerial.available() > 0) { ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:135:3: note: in expansion of macro 'SenselSerial' SenselSerial.flush(); ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino: In function 'void senselGetFrame(SenselFrame*)': /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel.h:29:22: error: 'Serial1' was not declared in this scope #define SenselSerial Serial1 ^ /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master/sensel-api-arduino/sensel.ino:142:3: note: in expansion of macro 'SenselSerial' SenselSerial.write(0x81); ^ Using library sensel-api-arduino-master in folder: /Users/nbor/Documents/Arduino/libraries/sensel-api-arduino-master (legacy) exit status 1 Error compiling for board Arduino/Genuino Uno. This indicates that your Red and White wires are not properly connected:","title":"Errors"},{"location":"app/","text":"SenselApp Software The SenselApp is your entry point for maintaining and modifying your Sensel Morph. It can be used for simple tasks such as updating firmware or visualizing the contacts and pressure, modifying existing overlays to better match your workflow, or radically transforming your overlays from their intended purpose into completely custom controllers. In short, the SenselApp can be used to execute all the possibilities of the Morph. Download You can download the SenselApp using these links: Windows Windows 32-bit MacOS SenselApp Overview When an overlay is selected in the SenselApp, your screen will appear as below. Morphs - A list of all the Morphs attached via USB to your computer. Click on one in the list to get information about the Morph, such as serial number, firmware version, and battery level. You can also set the \u201cNo Overlay\u201d Mode here. Update Firmware - A red \u201cUpdate Firmware\u201d indicates that Sensel has a new version of the firmware available for your morph. It is best to always update when possible. Click on the Morph's name in the Morphs panel to show the Update Firmware button. Overlays - This area shows all overlays and their associated maps that you have added to the Sensel App for the selected Morph. Only one map for each overlay type can be loaded on the Morph. Map Name - Click the Map Name to bring up the Overlay Mapper and edit its values. You must press Send Map to Morph to make these changes present on the Morph. Functions: Add Overlay - Click this button to add a new overlay and modify the controls for any given overlay. Visualizer - Click to turn on the visualizer to view all contacts and their pressure levels. Feedback - Provide feedback on the SenselApp or Sensel Morph. Overlay Mapper - Click on a Map Shows the selected overlay and its controls for editing and re-assigning. Click on any control to fill the Inspector with current values. Send Map Button - Click to send to the Morph any changes made to the Map with the SenselApp. Inspector - Used to edit the output and behavior of any control, such as changing its type, key value, or MIDI message output. Top Menu - Contains functions for copying, editing, and sharing map files for the different overlays. Hide Left Panel - Click the X in the top left to hide the left panel. Current SenselApp Version - shows the version number of the Sensel App. You'll also notice that a dot appears next to one of the Map names for each overlay. This indicates the Map is what is currently programmed to the Morph. When you plug in your Morph, it reads what maps have been flashed to the Morph and then compares it to the list of maps in your app. If the same map exists, then a dot is placed next to the map. SenselApp Preferences The Preferences for settings and all your map files are stored in: Mac: ~/Library/Application Support/unity.Sensel.SenselApp/ Windows: %appdata%/../LocalLow/Sensel/SenselApp/ Key Commands There are several keyboard combinations that can make working with the SenselApp easier. Hold CMD (macOS) or CTL (Windows/Linux) and: click - select or deselect many items A - select all C - copy attributes for currently selected items V - paste. If you copy multiple items, you will need to select the same number of items to paste. Z - undo Q - quit the app Video guides We have several tutorials about the SenselApp on our YouTube channel. (Complete overview)[https://www.youtube.com/watch?v=9aaatA149sQ] (Copy and Paste)[https://youtu.be/tjBBfh2fVk0] (Selecting, Deselecting, and Building a Grid)[https://youtu.be/hGf8-VMEbSc] Morph-XXXX (Morph Settings) When a Morph is selected in the SenselApp, your screen will look similar to below. Selected Morph - Select a Morph from the list of USB-connected Morphs to display the Morph Info screen. Morph Info - Shows Morph name, serial number, firmware version, and battery level. Update Firmware - click to download firmware files from Sensel servers and update the firmware on the device. Clear Morph Maps - Clear all Map files that have been uploaded to the Morph. Morph Settings - Use this menu to change the default behavior of the Morph. Keyboard Modifiers - Switch the Keyboard Modifiers in the Sensel App to show up as Windows (Alt/Win) or macOS (Opt/Cmd). OS Keyboard Layout - Set the OS Keyboard Layout for your Morph to either QWERTY, AZERTY or Dvorak. This does not change the output of the Morph, only how keyboard events are shown in the SenselApp. MPE Channel Start - The first channel for MPE. MPE Channel End - Then last channel for MPE. MPE Pitch Round - Choose from several pitch rounding algorithms. None, Jump (smoothly jumps to note when moving to a new note pad), Smooth (rounds along a sinusoid periodic oscillation), or Gravity (as you move from note to note, the pitch moves towards the closest note over time). MIDI Pitch Bend Range - The full range of the Pitch Bend, in millimeters (mm). This only effects MIDI, not MPE control areas. We use millimeters because the bend is reliant on spatial gestures and size of the control or \"note producing pad,\" which varies from overlay to overlay. The easy way to think about this is that 29mm will produce the most bend with a gesture, and 460mm will produce the least. Pressure/Velocity On - Whether pressure and velocity are on by default for MIDI and MPE. X/Y/Pitch Bend On - Whether X, Y, and Pitch Bend are on by default for MIDI and MPE. Slide Out of Areas- Whether you can slide out of control areas for MIDI and MPE. This allows for notes to only be created when you press down and end when you lift up. Entering and leaving control areas is now ignored. Slow Charge (iOS USB) - enable this to connect your Morph to an iPhone or iOS via USB. This lets you connect via USB without needing a powered USB hub. This is incredibly handy for simple connections. The downside to this is that your Morph will charge VERY slowly when connected to a computer. Of course anytime you make changes in this panel, you'll need to click the top right \"Send Settings to Morph\" button. To quit the app, you can use Alt+F4, Cmd+Q (Mac), Control+Q (Win), or click the close button on the title menu if it is available. Visualizer Before we get too busy, let's have a little bit of fun. Click on the Visualizer button and attach a Morph. Press on the sensor with your fingers, and see the corresponding pressure image on your computer screen. Use the Visualizer to view the raw pressure information coming from the Morph's sensor. The visualizer is more than entertaining, it's a look behind the scenes of what happens when you are using the Morph. You can see the effects of using different materials between a stylus (or some other actuator, like a finger) and pressure surface. You can even see that very sharp styli won't generate much of a pressure reading, and benefit greatly from a material or overlay. The curious and creative user will find great satisfaction in the Visualizer! SenselApp: First Use The first time you use the Sensel App, it will appear with the Help hints visible, which you can read over and turn off using the Tutorial button. You may need to update the firmware - just click on the Morph name and then click the Update Firmware button in the Morph Info window. To get started editing controls on your overlays, click \"Add Overlay\" and select the type of overlay you want to add: Notice there are multiple labels under some Overlays. These are alternate mappings that make it easy to set up an overlay. If you select an MPE or Mac variant, you'll need to \"Send Map to Morph\" for those settings to work on your Morph. If you place an overlay on the Morph before you open the App, the SenselApp will open in the Overlay Mapper view, showing the Overlay you placed on the Morph. Editing an Overlay Editing an Overlay's output and behavior is fairly straightforward, though the large array of options can make it seem complicated. Simply put, modifying a single control takes 4 steps. Select an overlay Click on a control Change values in the inspector Send Map to Morph You can repeat steps 2 & 3 several times, making all your edits, then send the map to the Morph when you are ready to try your changes. An edit can be very simple. For example, on the video editing overlay, you may want to adjust the controls for Apple Final Cut Pro. The Selection button outputs the letter v for Adobe Premier, but Final Cut Pro X uses the letter a for the shortcut. Making this change is as simple as selecting A (4) from the Key menu: You can, of course, make very different changes. You can add modifiers for other macro commands in a video editing software, or even go into left field and make it send a MIDI message to control music software. All the different types of controls and the values you can change in the Inspectors are documented below. Sharing Maps Any setup you create for an overlay can be easily exported and shared with other people. Once you have created a setup use the top left menu to select \"Export Map\": You'll get a dialog to save the map to a folder on your computer and give the map a name. The \".senselmap\" extension is automatically added to the file: Once you have exported your map file, you can share it on our forum When you want to import a map that you have downloaded or moved to another computer, you can select \"Import Map\" from the menu: and use the dialog to navigate to map file on your computer: If you have several maps you want to share, you may find it easier to grab the existing maps in your preferences folder. The SenselApp saves the map files at: Mac: ~/Library/Application Support/unity.Sensel.SenselApp/ Windows: %appdata%/../LocalLow/Sensel/SenselApp/ Top Menu The top right menu has several functions for managing individual map files. Tutorial - toggles hints for a quick reminder of what each section is for Rename Map - renames the currently selected map Delete Map - deletes the currently selected map Duplicate Map - creates a copy of the map currently selected in the left pane Revert to Saved - reverts all settings to the Overlay's saved map Set Save State - creates a memory of all the settings for the current Overlay, used for \"Revert To Saved\" Import Map - opens a file selection dialog to select a map file to import into the App Export Map - save the currently selected map to a file you can share It is worth notig that the SenselApp saves all changes made to Overlay maps as they are made. So if you have the habit of saving files, use the \"Set Save State\" function. Control Types With the Morph, everything is anything. That is to say, any individual control can be assigned to behave like any control found on any overlay. Want 16 mice on your Music Production overlay? Want to turn your QWERTY keyboard into a MIDI controller? Want to turn the Video Editor into a DJ controller? All this is very very possible. Here's the rundown on all the possible types of controls you can create. Keyboard When pressed, the control sends messages that you would find on a regular computer keyboard used for typing or data entry. Key - Keyboard scan code (or letter) to output on press Function Key - Keyboard scan code (or letter) to output on press when the fn key is held down. Of course, you'll need to assign a different control to act as the fn key, which is done by assigning a key with scan code 255 (FN) . Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. MIDI Note When pressed, a combination of MIDI messages are sent, with the first message sent being of the Note type, similar to a regular piano keyboard. Channel - MIDI Channel the messages from this control are sent on. Note - MIDI note to send on press. The note-on velocity corresponds to the initial pressure of the contact. Can be left off so the control only sends a message on pressure. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Pitch Bend - Whether this control area sends pitch bend events when pitch bend is active. MIDI CC When pressed, a combination of MIDI messages are sent, with the first message sent being of the Continuous Controller type. When the control is pressed, a CC value of 127 is sent. When the control is released, a CC value of 0 is sent. This is useful for controlling buttons in different music softwares. Button Type - CC button is Momentary (sends 127 on press and 0 on release) or Toggle (switches between 127 and 0 for each press) Channel - MIDI Channel the messages from this control are sent on. CC - CC number to send values of 127 (down) and 0 (up). After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Media Media refers to the control keys for displays and sound commonly found on computer keyboards. This allows any control to act as a system-level control for your computer's audio and video apps. Media - type of control, such as Volume, Display Brightness, Next/Previous track, Play/Pause, Home, App Switch, or Search. FN Key - a secondary key code value that will be sent when a fn key is held down. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Gamepad When pressed, a Gamepad control sends out a USB Gamepad control code. Type - determines how motions are interpreted. Square button, Circle button, and Joystick react differently to touch inputs, providing either button-like or continuous control. Button - value sent on press. Joystick with button sends joystick commands an a button on press. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. MMC (MIDI Machine Control) MMC System Exclusive (sysex) messages are used to control the transport of software and hardware recorders and sequencers. MMC Message - Message sent on press. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Morph MIDI Modifier The MIDI Modifier type modifies the MIDI values sent out the Morph. For many of these, no messages are sent, rather, these simply modify the messages the Morph will send. Custom MIDI - type of modifer, such as Octave Up/Dn (+/- 12 notes), Scene Up/Down (+/- 16 notes, for Ableton and Bitwig drum racks), MIDI Program change, and others. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. MPE MIDI Polyphonic Expression (MPE) allows electronic instruments to be played with much more control and dimension than simply turning a note on or off. A single control can send the note, velocity, pitch bend on side-to-side motions, expression on vertical slides on the control, and afterpressure. MPE-compliant synths can react to all of this played data for exceptional expression. The Morph takes it a step further and allows you to use all the data in different ways. Note - Note value to send on press. Press - Message type to send on Pressure. MPE standard is to send Channel Aftertouch for pressure. X - Message type to send on X, or side-to-side, motions on the control. MPE standard is to send Pitch Bend messages for X. Y - Message type ot send on Y, or up-down motions on the control. MPE standard is to send CC 74 messages for Y. Pitch Bend - Pitch bend range for any pitch bend events. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. 14-bit - Check on to send 14-bit resolution messages for Pressure and Y dimensions. This adds an additional Continuous Controller to the data output to create two 7-bit messages. Absolute X Position - If on, then the physical center of the control is the center point for X. If off, then the point of initial contact is the center point for X values. Absolute Y Position - If on, then the physical center of the control is the center point for Y values. If off, then the point of initial contact is the center point for Y values. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Touchpad The Touchpad control type creates a mouse or digitizer pointer that can be found on laptops and tablets. This functionality can be found on the Art Overlay by default and can be brought over to other Overlays. While the Trackpad should work well on most Overlays, we do not recommend using the Paintbrush or Stylus Area on other Overlays since they have not been calibrated for this purpose. We have also included the buttons to switch Touchpad Area Types, just like on the Art Overlay. Touchpad Type - Mouse and digitizer control areas and buttons to switch all control areas to this type. Switch to Stylus - Switch all Touchpad control areas to being a Stylus Area. The settings used in this switch will be mapped onto the control area. Switch to Paintbrush - Switch all Touchpad control areas to being a Paintbrush Area. The settings used in this switch will be mapped onto the control area. Switch to Trackpad - Switch all Touchpad control areas to being a Trackpad Area. The settings used in this switch will be mapped onto the control area. Stylus Area - A digitizer that includes palm detection and stylus detection so that only a stylus is recognized. Please only use with the Art Overlay. Paintbrush Area - A digitizer that draws the first contact applied to the control area. Please only use with the Art Overlay. Trackpad Area - A mouse cursor trackpad, like you would find on a laptop. Can be used on all Overlays. Use higher thresholds and click activations when the overlay control area is thicker. Windows 10 Trackpad - A mouse cursor trackpad, like you would find on a laptop. Can only be found on the No Overlay. Click Activation - A threshold that will determine if you are clicking on the trackpad. Threshold - pressure threshold. Lower values make the control require less pressure to register a cursor movement. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Setting The Setting control type provides buttons and toggles that change the behavior of the entire Overlay. Setting - Various settings available to control the Overlay. Set Threshold - Toggle to set all the control areas to have the same threshold. Reset - Reset all the toggles for the Overlay. Used on MIDI Overlays to reset Pitch Bend, Velocity and Octave. Value - value to be set when the setting is a toggle. Threshold - Pressure threshold. Lower values make the control require less pressure to register a press LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Keyboard Slider A keyboard slider type sends repeated keystrokes depending on the direction you are stroking the slider. You can find these types of controls on the Video Editing Overlay's defaults for Zoom, Audio, and Video sliders. Slider Type - Switch the slider type between Vertical Slider, Horizontal Slider or Knob. Right/Up - depending on the orientation of the control, you'll see Right or Up . Assign a key value to send repeatedly. Left/Down - depending on the orientation of the control, you'll see Left or Down . Assign a key value to send repeatedly. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. MIDI CC Slider A MIDI CC Slider is used to send continuous values, depending on the position of the touch. Useful for filter sweeps, volume envelopes, and other effects. Slider Type - Switch the slider type between Vertical Slider, Horizontal Slider or Knob Channel - MIDI Channel the messages from this control are sent on. CC - CC message to send with continuous value. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Knob Modifier The Knob Modifier overrides the Knob values when pressed. Used on Video Editing Overlay by default to override the Knob settings. CW - Assign a key value to send repeatedly when moving clockwise. CCW - Assign a key value to send repeatedly when moving counter-clockwise. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Pressure Button Unique to the Morph, the Pressure button control sends repeated keystrokes with the repetition speed varying by pressure. Down - assign a key code to send repeatedly when pressing down on the button. Up - assign a key code to send once when the button is released. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. XYZ MIDI Pad Set MIDI X, Y and Z for a control area on a MIDI channel. Note - Note value to send on press. Press - Message type to send on Pressure. X - Message type to send on X, or side-to-side, motions on the control. Y - Message type ot send on Y, or up-down motions on the control. Channel - MIDI Channel the messages from this control are sent on. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. 14-bit - Check on to send 14-bit resolution messages for Pressure and Y dimensions. This adds an additional Continuous Controller to the data output to create two 7-bit messages. Absolute X Position - If on, then the physical center of the control is the center point for X. If off, then the point of initial contact is the center point for X values. Absolute Y Position - If on, then the physical center of the control is the center point for Y values. If off, then the point of initial contact is the center point for Y values. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Innovator's Only available on No Overlay. The Sensel Morph will behave like the Innovator's Overlay is on the Morph. Allows for testing of the Overlay Designer when you do not own an Innovator's Overlay. Overlay Mapper Music Overlays The Music Production, Drum, and Piano Overlays can be completely modified from their default settings to work however you\u2019d like them to. When you select a music Overlay from the Sensel App, you'll open a screen where you can click on the different buttons or regions to modify the MIDI notes sent from the pads. Use the inspector's menu to select a different note value for each pad you want to change. You can save the settings to a map preset. When finished editing, be sure to click \"Send Map to Morph\" to modify the settings. Buchla Thunder Presets Use the SenselApp to edit the presets for the Thunder Overlay. Select a preset to edit from the top Preset Selectors. Then, edit the controls on the Thunder by clicking on them, and changing values in the Inspector. If you want to copy and paste a preset to another, simply select all ( CMD or CTL-A ) then copy ( CMD or CTL-C ), then select a Preset at the top. Select all again, then paste ( CMD or CTL-V ). This copies all the settings to the preset. QWERTY (+ AZERTY and DVORAK) Overlay In a way, the mapper for the QWERTY Overlay is very similar to the music editors. However, instead of modifying MIDI notes, you are modifying the key event codes from each stroke. A list of keyboard codes can be found at this link. Set Keyboard Layout The Morph will detect the Overlay attached to the device, but you will need to change the desired layout for each computer or smartphone. If you want to do this automatically, simply load the keyboard overlay map in the Sensel App, select Revert to Original in the top menu, and then Send Map to Morph . This will adjust for Windows and Mac automatically. If you want to do it yourself, here are some external links to guides (and opinions) on changing your keyboard layout for different operating systems: Windows 10 macOS Ubuntu Android iOS Gamepad Overlay Some games support HID gamepad events without any emulation, but do not let you customize the button values in the game. As a result, the controller might work, but the buttons all do the wrong thing! The Sensel App lets you change the HID gamepad value for each button of the Gamepad Overlay so the controls can match the gameplay.","title":"SenselApp"},{"location":"app/#senselapp-software","text":"The SenselApp is your entry point for maintaining and modifying your Sensel Morph. It can be used for simple tasks such as updating firmware or visualizing the contacts and pressure, modifying existing overlays to better match your workflow, or radically transforming your overlays from their intended purpose into completely custom controllers. In short, the SenselApp can be used to execute all the possibilities of the Morph.","title":"SenselApp Software"},{"location":"app/#download","text":"You can download the SenselApp using these links: Windows Windows 32-bit MacOS","title":"Download"},{"location":"app/#senselapp-overview","text":"When an overlay is selected in the SenselApp, your screen will appear as below. Morphs - A list of all the Morphs attached via USB to your computer. Click on one in the list to get information about the Morph, such as serial number, firmware version, and battery level. You can also set the \u201cNo Overlay\u201d Mode here. Update Firmware - A red \u201cUpdate Firmware\u201d indicates that Sensel has a new version of the firmware available for your morph. It is best to always update when possible. Click on the Morph's name in the Morphs panel to show the Update Firmware button. Overlays - This area shows all overlays and their associated maps that you have added to the Sensel App for the selected Morph. Only one map for each overlay type can be loaded on the Morph. Map Name - Click the Map Name to bring up the Overlay Mapper and edit its values. You must press Send Map to Morph to make these changes present on the Morph. Functions: Add Overlay - Click this button to add a new overlay and modify the controls for any given overlay. Visualizer - Click to turn on the visualizer to view all contacts and their pressure levels. Feedback - Provide feedback on the SenselApp or Sensel Morph. Overlay Mapper - Click on a Map Shows the selected overlay and its controls for editing and re-assigning. Click on any control to fill the Inspector with current values. Send Map Button - Click to send to the Morph any changes made to the Map with the SenselApp. Inspector - Used to edit the output and behavior of any control, such as changing its type, key value, or MIDI message output. Top Menu - Contains functions for copying, editing, and sharing map files for the different overlays. Hide Left Panel - Click the X in the top left to hide the left panel. Current SenselApp Version - shows the version number of the Sensel App. You'll also notice that a dot appears next to one of the Map names for each overlay. This indicates the Map is what is currently programmed to the Morph. When you plug in your Morph, it reads what maps have been flashed to the Morph and then compares it to the list of maps in your app. If the same map exists, then a dot is placed next to the map.","title":"SenselApp Overview"},{"location":"app/#senselapp-preferences","text":"The Preferences for settings and all your map files are stored in: Mac: ~/Library/Application Support/unity.Sensel.SenselApp/ Windows: %appdata%/../LocalLow/Sensel/SenselApp/","title":"SenselApp Preferences"},{"location":"app/#key-commands","text":"There are several keyboard combinations that can make working with the SenselApp easier. Hold CMD (macOS) or CTL (Windows/Linux) and: click - select or deselect many items A - select all C - copy attributes for currently selected items V - paste. If you copy multiple items, you will need to select the same number of items to paste. Z - undo Q - quit the app","title":"Key Commands"},{"location":"app/#video-guides","text":"We have several tutorials about the SenselApp on our YouTube channel. (Complete overview)[https://www.youtube.com/watch?v=9aaatA149sQ] (Copy and Paste)[https://youtu.be/tjBBfh2fVk0] (Selecting, Deselecting, and Building a Grid)[https://youtu.be/hGf8-VMEbSc]","title":"Video guides"},{"location":"app/#morph-xxxx-morph-settings","text":"When a Morph is selected in the SenselApp, your screen will look similar to below. Selected Morph - Select a Morph from the list of USB-connected Morphs to display the Morph Info screen. Morph Info - Shows Morph name, serial number, firmware version, and battery level. Update Firmware - click to download firmware files from Sensel servers and update the firmware on the device. Clear Morph Maps - Clear all Map files that have been uploaded to the Morph. Morph Settings - Use this menu to change the default behavior of the Morph. Keyboard Modifiers - Switch the Keyboard Modifiers in the Sensel App to show up as Windows (Alt/Win) or macOS (Opt/Cmd). OS Keyboard Layout - Set the OS Keyboard Layout for your Morph to either QWERTY, AZERTY or Dvorak. This does not change the output of the Morph, only how keyboard events are shown in the SenselApp. MPE Channel Start - The first channel for MPE. MPE Channel End - Then last channel for MPE. MPE Pitch Round - Choose from several pitch rounding algorithms. None, Jump (smoothly jumps to note when moving to a new note pad), Smooth (rounds along a sinusoid periodic oscillation), or Gravity (as you move from note to note, the pitch moves towards the closest note over time). MIDI Pitch Bend Range - The full range of the Pitch Bend, in millimeters (mm). This only effects MIDI, not MPE control areas. We use millimeters because the bend is reliant on spatial gestures and size of the control or \"note producing pad,\" which varies from overlay to overlay. The easy way to think about this is that 29mm will produce the most bend with a gesture, and 460mm will produce the least. Pressure/Velocity On - Whether pressure and velocity are on by default for MIDI and MPE. X/Y/Pitch Bend On - Whether X, Y, and Pitch Bend are on by default for MIDI and MPE. Slide Out of Areas- Whether you can slide out of control areas for MIDI and MPE. This allows for notes to only be created when you press down and end when you lift up. Entering and leaving control areas is now ignored. Slow Charge (iOS USB) - enable this to connect your Morph to an iPhone or iOS via USB. This lets you connect via USB without needing a powered USB hub. This is incredibly handy for simple connections. The downside to this is that your Morph will charge VERY slowly when connected to a computer. Of course anytime you make changes in this panel, you'll need to click the top right \"Send Settings to Morph\" button. To quit the app, you can use Alt+F4, Cmd+Q (Mac), Control+Q (Win), or click the close button on the title menu if it is available.","title":"Morph-XXXX (Morph Settings)"},{"location":"app/#visualizer","text":"Before we get too busy, let's have a little bit of fun. Click on the Visualizer button and attach a Morph. Press on the sensor with your fingers, and see the corresponding pressure image on your computer screen. Use the Visualizer to view the raw pressure information coming from the Morph's sensor. The visualizer is more than entertaining, it's a look behind the scenes of what happens when you are using the Morph. You can see the effects of using different materials between a stylus (or some other actuator, like a finger) and pressure surface. You can even see that very sharp styli won't generate much of a pressure reading, and benefit greatly from a material or overlay. The curious and creative user will find great satisfaction in the Visualizer!","title":"Visualizer"},{"location":"app/#senselapp-first-use","text":"The first time you use the Sensel App, it will appear with the Help hints visible, which you can read over and turn off using the Tutorial button. You may need to update the firmware - just click on the Morph name and then click the Update Firmware button in the Morph Info window. To get started editing controls on your overlays, click \"Add Overlay\" and select the type of overlay you want to add: Notice there are multiple labels under some Overlays. These are alternate mappings that make it easy to set up an overlay. If you select an MPE or Mac variant, you'll need to \"Send Map to Morph\" for those settings to work on your Morph. If you place an overlay on the Morph before you open the App, the SenselApp will open in the Overlay Mapper view, showing the Overlay you placed on the Morph.","title":"SenselApp: First Use"},{"location":"app/#editing-an-overlay","text":"Editing an Overlay's output and behavior is fairly straightforward, though the large array of options can make it seem complicated. Simply put, modifying a single control takes 4 steps. Select an overlay Click on a control Change values in the inspector Send Map to Morph You can repeat steps 2 & 3 several times, making all your edits, then send the map to the Morph when you are ready to try your changes. An edit can be very simple. For example, on the video editing overlay, you may want to adjust the controls for Apple Final Cut Pro. The Selection button outputs the letter v for Adobe Premier, but Final Cut Pro X uses the letter a for the shortcut. Making this change is as simple as selecting A (4) from the Key menu: You can, of course, make very different changes. You can add modifiers for other macro commands in a video editing software, or even go into left field and make it send a MIDI message to control music software. All the different types of controls and the values you can change in the Inspectors are documented below.","title":"Editing an Overlay"},{"location":"app/#sharing-maps","text":"Any setup you create for an overlay can be easily exported and shared with other people. Once you have created a setup use the top left menu to select \"Export Map\": You'll get a dialog to save the map to a folder on your computer and give the map a name. The \".senselmap\" extension is automatically added to the file: Once you have exported your map file, you can share it on our forum When you want to import a map that you have downloaded or moved to another computer, you can select \"Import Map\" from the menu: and use the dialog to navigate to map file on your computer: If you have several maps you want to share, you may find it easier to grab the existing maps in your preferences folder. The SenselApp saves the map files at: Mac: ~/Library/Application Support/unity.Sensel.SenselApp/ Windows: %appdata%/../LocalLow/Sensel/SenselApp/","title":"Sharing Maps"},{"location":"app/#top-menu","text":"The top right menu has several functions for managing individual map files. Tutorial - toggles hints for a quick reminder of what each section is for Rename Map - renames the currently selected map Delete Map - deletes the currently selected map Duplicate Map - creates a copy of the map currently selected in the left pane Revert to Saved - reverts all settings to the Overlay's saved map Set Save State - creates a memory of all the settings for the current Overlay, used for \"Revert To Saved\" Import Map - opens a file selection dialog to select a map file to import into the App Export Map - save the currently selected map to a file you can share It is worth notig that the SenselApp saves all changes made to Overlay maps as they are made. So if you have the habit of saving files, use the \"Set Save State\" function.","title":"Top Menu"},{"location":"app/#control-types","text":"With the Morph, everything is anything. That is to say, any individual control can be assigned to behave like any control found on any overlay. Want 16 mice on your Music Production overlay? Want to turn your QWERTY keyboard into a MIDI controller? Want to turn the Video Editor into a DJ controller? All this is very very possible. Here's the rundown on all the possible types of controls you can create.","title":"Control Types"},{"location":"app/#keyboard","text":"When pressed, the control sends messages that you would find on a regular computer keyboard used for typing or data entry. Key - Keyboard scan code (or letter) to output on press Function Key - Keyboard scan code (or letter) to output on press when the fn key is held down. Of course, you'll need to assign a different control to act as the fn key, which is done by assigning a key with scan code 255 (FN) . Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Keyboard"},{"location":"app/#midi-note","text":"When pressed, a combination of MIDI messages are sent, with the first message sent being of the Note type, similar to a regular piano keyboard. Channel - MIDI Channel the messages from this control are sent on. Note - MIDI note to send on press. The note-on velocity corresponds to the initial pressure of the contact. Can be left off so the control only sends a message on pressure. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed. Pitch Bend - Whether this control area sends pitch bend events when pitch bend is active.","title":"MIDI Note"},{"location":"app/#midi-cc","text":"When pressed, a combination of MIDI messages are sent, with the first message sent being of the Continuous Controller type. When the control is pressed, a CC value of 127 is sent. When the control is released, a CC value of 0 is sent. This is useful for controlling buttons in different music softwares. Button Type - CC button is Momentary (sends 127 on press and 0 on release) or Toggle (switches between 127 and 0 for each press) Channel - MIDI Channel the messages from this control are sent on. CC - CC number to send values of 127 (down) and 0 (up). After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"MIDI CC"},{"location":"app/#media","text":"Media refers to the control keys for displays and sound commonly found on computer keyboards. This allows any control to act as a system-level control for your computer's audio and video apps. Media - type of control, such as Volume, Display Brightness, Next/Previous track, Play/Pause, Home, App Switch, or Search. FN Key - a secondary key code value that will be sent when a fn key is held down. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Media"},{"location":"app/#gamepad","text":"When pressed, a Gamepad control sends out a USB Gamepad control code. Type - determines how motions are interpreted. Square button, Circle button, and Joystick react differently to touch inputs, providing either button-like or continuous control. Button - value sent on press. Joystick with button sends joystick commands an a button on press. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Gamepad"},{"location":"app/#mmc-midi-machine-control","text":"MMC System Exclusive (sysex) messages are used to control the transport of software and hardware recorders and sequencers. MMC Message - Message sent on press. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"MMC (MIDI Machine Control)"},{"location":"app/#morph-midi-modifier","text":"The MIDI Modifier type modifies the MIDI values sent out the Morph. For many of these, no messages are sent, rather, these simply modify the messages the Morph will send. Custom MIDI - type of modifer, such as Octave Up/Dn (+/- 12 notes), Scene Up/Down (+/- 16 notes, for Ableton and Bitwig drum racks), MIDI Program change, and others. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Morph MIDI Modifier"},{"location":"app/#mpe","text":"MIDI Polyphonic Expression (MPE) allows electronic instruments to be played with much more control and dimension than simply turning a note on or off. A single control can send the note, velocity, pitch bend on side-to-side motions, expression on vertical slides on the control, and afterpressure. MPE-compliant synths can react to all of this played data for exceptional expression. The Morph takes it a step further and allows you to use all the data in different ways. Note - Note value to send on press. Press - Message type to send on Pressure. MPE standard is to send Channel Aftertouch for pressure. X - Message type to send on X, or side-to-side, motions on the control. MPE standard is to send Pitch Bend messages for X. Y - Message type ot send on Y, or up-down motions on the control. MPE standard is to send CC 74 messages for Y. Pitch Bend - Pitch bend range for any pitch bend events. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. 14-bit - Check on to send 14-bit resolution messages for Pressure and Y dimensions. This adds an additional Continuous Controller to the data output to create two 7-bit messages. Absolute X Position - If on, then the physical center of the control is the center point for X. If off, then the point of initial contact is the center point for X values. Absolute Y Position - If on, then the physical center of the control is the center point for Y values. If off, then the point of initial contact is the center point for Y values. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"MPE"},{"location":"app/#touchpad","text":"The Touchpad control type creates a mouse or digitizer pointer that can be found on laptops and tablets. This functionality can be found on the Art Overlay by default and can be brought over to other Overlays. While the Trackpad should work well on most Overlays, we do not recommend using the Paintbrush or Stylus Area on other Overlays since they have not been calibrated for this purpose. We have also included the buttons to switch Touchpad Area Types, just like on the Art Overlay. Touchpad Type - Mouse and digitizer control areas and buttons to switch all control areas to this type. Switch to Stylus - Switch all Touchpad control areas to being a Stylus Area. The settings used in this switch will be mapped onto the control area. Switch to Paintbrush - Switch all Touchpad control areas to being a Paintbrush Area. The settings used in this switch will be mapped onto the control area. Switch to Trackpad - Switch all Touchpad control areas to being a Trackpad Area. The settings used in this switch will be mapped onto the control area. Stylus Area - A digitizer that includes palm detection and stylus detection so that only a stylus is recognized. Please only use with the Art Overlay. Paintbrush Area - A digitizer that draws the first contact applied to the control area. Please only use with the Art Overlay. Trackpad Area - A mouse cursor trackpad, like you would find on a laptop. Can be used on all Overlays. Use higher thresholds and click activations when the overlay control area is thicker. Windows 10 Trackpad - A mouse cursor trackpad, like you would find on a laptop. Can only be found on the No Overlay. Click Activation - A threshold that will determine if you are clicking on the trackpad. Threshold - pressure threshold. Lower values make the control require less pressure to register a cursor movement. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Touchpad"},{"location":"app/#setting","text":"The Setting control type provides buttons and toggles that change the behavior of the entire Overlay. Setting - Various settings available to control the Overlay. Set Threshold - Toggle to set all the control areas to have the same threshold. Reset - Reset all the toggles for the Overlay. Used on MIDI Overlays to reset Pitch Bend, Velocity and Octave. Value - value to be set when the setting is a toggle. Threshold - Pressure threshold. Lower values make the control require less pressure to register a press LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Setting"},{"location":"app/#keyboard-slider","text":"A keyboard slider type sends repeated keystrokes depending on the direction you are stroking the slider. You can find these types of controls on the Video Editing Overlay's defaults for Zoom, Audio, and Video sliders. Slider Type - Switch the slider type between Vertical Slider, Horizontal Slider or Knob. Right/Up - depending on the orientation of the control, you'll see Right or Up . Assign a key value to send repeatedly. Left/Down - depending on the orientation of the control, you'll see Left or Down . Assign a key value to send repeatedly. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Keyboard Slider"},{"location":"app/#midi-cc-slider","text":"A MIDI CC Slider is used to send continuous values, depending on the position of the touch. Useful for filter sweeps, volume envelopes, and other effects. Slider Type - Switch the slider type between Vertical Slider, Horizontal Slider or Knob Channel - MIDI Channel the messages from this control are sent on. CC - CC message to send with continuous value. After-Pressure - MIDI Message to send to report pressure values while the control is held down. These can be MIDI Continuous Controller messages, Pitchbend, Polyphonic Aftertouch, or Channel Aftertouch type. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"MIDI CC Slider"},{"location":"app/#knob-modifier","text":"The Knob Modifier overrides the Knob values when pressed. Used on Video Editing Overlay by default to override the Knob settings. CW - Assign a key value to send repeatedly when moving clockwise. CCW - Assign a key value to send repeatedly when moving counter-clockwise. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Knob Modifier"},{"location":"app/#pressure-button","text":"Unique to the Morph, the Pressure button control sends repeated keystrokes with the repetition speed varying by pressure. Down - assign a key code to send repeatedly when pressing down on the button. Up - assign a key code to send once when the button is released. Modifier - Ctl, Opt, Shift, CMD modifier to combine with a press on this control. Used for creating macros, such as Ctl-S to save a file in a Windows application. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"Pressure Button"},{"location":"app/#xyz-midi-pad","text":"Set MIDI X, Y and Z for a control area on a MIDI channel. Note - Note value to send on press. Press - Message type to send on Pressure. X - Message type to send on X, or side-to-side, motions on the control. Y - Message type ot send on Y, or up-down motions on the control. Channel - MIDI Channel the messages from this control are sent on. Threshold - pressure threshold. Lower values make the control require less pressure to register a press. 14-bit - Check on to send 14-bit resolution messages for Pressure and Y dimensions. This adds an additional Continuous Controller to the data output to create two 7-bit messages. Absolute X Position - If on, then the physical center of the control is the center point for X. If off, then the point of initial contact is the center point for X values. Absolute Y Position - If on, then the physical center of the control is the center point for Y values. If off, then the point of initial contact is the center point for Y values. LED - blink (checked) or don't blink (unchecked) the nearest LED on the LED strip when the control is pressed.","title":"XYZ MIDI Pad"},{"location":"app/#innovators","text":"Only available on No Overlay. The Sensel Morph will behave like the Innovator's Overlay is on the Morph. Allows for testing of the Overlay Designer when you do not own an Innovator's Overlay.","title":"Innovator's"},{"location":"app/#overlay-mapper","text":"","title":"Overlay Mapper"},{"location":"app/#music-overlays","text":"The Music Production, Drum, and Piano Overlays can be completely modified from their default settings to work however you\u2019d like them to. When you select a music Overlay from the Sensel App, you'll open a screen where you can click on the different buttons or regions to modify the MIDI notes sent from the pads. Use the inspector's menu to select a different note value for each pad you want to change. You can save the settings to a map preset. When finished editing, be sure to click \"Send Map to Morph\" to modify the settings.","title":"Music Overlays"},{"location":"app/#buchla-thunder-presets","text":"Use the SenselApp to edit the presets for the Thunder Overlay. Select a preset to edit from the top Preset Selectors. Then, edit the controls on the Thunder by clicking on them, and changing values in the Inspector. If you want to copy and paste a preset to another, simply select all ( CMD or CTL-A ) then copy ( CMD or CTL-C ), then select a Preset at the top. Select all again, then paste ( CMD or CTL-V ). This copies all the settings to the preset.","title":"Buchla Thunder Presets"},{"location":"app/#qwerty-azerty-and-dvorak-overlay","text":"In a way, the mapper for the QWERTY Overlay is very similar to the music editors. However, instead of modifying MIDI notes, you are modifying the key event codes from each stroke. A list of keyboard codes can be found at this link.","title":"QWERTY (+ AZERTY and DVORAK) Overlay"},{"location":"app/#set-keyboard-layout","text":"The Morph will detect the Overlay attached to the device, but you will need to change the desired layout for each computer or smartphone. If you want to do this automatically, simply load the keyboard overlay map in the Sensel App, select Revert to Original in the top menu, and then Send Map to Morph . This will adjust for Windows and Mac automatically. If you want to do it yourself, here are some external links to guides (and opinions) on changing your keyboard layout for different operating systems: Windows 10 macOS Ubuntu Android iOS","title":"Set Keyboard Layout"},{"location":"app/#gamepad-overlay","text":"Some games support HID gamepad events without any emulation, but do not let you customize the button values in the game. As a result, the controller might work, but the buttons all do the wrong thing! The Sensel App lets you change the HID gamepad value for each button of the Gamepad Overlay so the controls can match the gameplay.","title":"Gamepad Overlay"},{"location":"coming_soon/","text":"Other Programs These programs are worth investigating, since they are popular. TKTK Ardour (linux) Hydrogen (linux) Reaper ProTools Kontakt Massive Maschine Although Maschine comes with its own hardware for sequencing and playing drums, you may want to use the highly-sensitive and playable surface of the Morph to play the extensive soundbanks and effects in the Maschine software. Standalone VST Traktor You can use the reliable Morph to trigger samples and control effects in Tracktor, but you'll need to design your own Control Surface Setup to make it do what you want to do. This is not a complete tutorial on creating a setup in Traktor, but is designed to get you started with mapping the Morph to Traktor. (hint: use the Sensel Mapper software to mimic the MIDI output from another similar controller, then use that Setup.) Drawing and Painting Media Editing Gaming QWERTY Inventing","title":"Coming soon"},{"location":"coming_soon/#other-programs","text":"These programs are worth investigating, since they are popular. TKTK","title":"Other Programs"},{"location":"coming_soon/#ardour-linux","text":"","title":"Ardour (linux)"},{"location":"coming_soon/#hydrogen-linux","text":"","title":"Hydrogen (linux)"},{"location":"coming_soon/#reaper","text":"","title":"Reaper"},{"location":"coming_soon/#protools","text":"","title":"ProTools"},{"location":"coming_soon/#kontakt","text":"","title":"Kontakt"},{"location":"coming_soon/#massive","text":"","title":"Massive"},{"location":"coming_soon/#maschine","text":"Although Maschine comes with its own hardware for sequencing and playing drums, you may want to use the highly-sensitive and playable surface of the Morph to play the extensive soundbanks and effects in the Maschine software.","title":"Maschine"},{"location":"coming_soon/#standalone","text":"","title":"Standalone"},{"location":"coming_soon/#vst","text":"","title":"VST"},{"location":"coming_soon/#traktor","text":"You can use the reliable Morph to trigger samples and control effects in Tracktor, but you'll need to design your own Control Surface Setup to make it do what you want to do. This is not a complete tutorial on creating a setup in Traktor, but is designed to get you started with mapping the Morph to Traktor. (hint: use the Sensel Mapper software to mimic the MIDI output from another similar controller, then use that Setup.)","title":"Traktor"},{"location":"coming_soon/#drawing-and-painting","text":"","title":"Drawing and Painting"},{"location":"coming_soon/#media-editing","text":"","title":"Media Editing"},{"location":"coming_soon/#gaming","text":"","title":"Gaming"},{"location":"coming_soon/#qwerty","text":"","title":"QWERTY"},{"location":"coming_soon/#inventing","text":"","title":"Inventing"},{"location":"designer/","text":"s# Overlay Designer The SenselApp Overlay Designer lets you design custom Overlays. You can combine different control shapes and command outputs - keyboard macros, MIDI commands, mouse pads, and more - to make up your own Overlay. Each design has a control area layout and a control area mapping . The layout can be printed to paper to mark your controller. The mapping is sent to the Morph so it can interpret your touches and send out the right commands. The mapping is loaded with the Innovator\u2019s Overlay on the Morph. The following sections document how to design an Overlay in the SenselApp and some guidance for creating your custom Overlay. Designing an Overlay The first step is to decide what problem you want to solve and what controls you need to touch. This is done in the SenselApp using the Innovator's Overlay. Innovator's Overlay The Innovator\u2019s Overlay is a transparent Overlay with an indented \"tray\" that can contain your custom design. The Innovator\u2019s Overlay allows for 2D printed layouts to be put under the Overlay and 3D Overlays to be placed in the middle region. We detail how to print 2D and 3D print Overlays in the Creating an Overlay section. No Overlay If you do not own an Innovator\u2019s Overlay, you can use the bare sensor to act as the Innovator\u2019s Overlay by creating a No Overlay map. Here's how: go to Add Overlay choose No Overlay change the control area type to Innovator\u2019s click Send Map to Morph . Now your Morph will behave as if an Innovator\u2019s Overlay is on the device when no overlay is placed on the Morph. You can also purchase the Innovator\u2019s Overlay from our store . Create a Design To start creating a design, click Add Overlay in the Sensel App. This will bring up a list of all existing Overlay choices. Click the Innovator\u2019s Overlay icon to begin. The Overlay Designer will look very similar to a standard SenselApp map, but will include a toggle at the top of the SenselApp that allows you to switch between Layout and Map. The custom design will start in Layout. Layout Layout allows you to add, remove, reposition and customize control areas. Layout can only be found in the Innovator\u2019s Overlay for the Overlay Designer. Add Area - Adds a new control area to the design. Remove Area - Removes a control area from the design. To Front - Brings the control area to the front of the design. To Back - Sends the control area to the back of the design. Duplicate - Duplicates the dimensions and map of the control area. Grid - Snaps control areas to specific grid spacing in mm X Position - Horizontal position of the control area in mm. Y Position - Vertical position of the control area in mm. Width - Width of the control area in mm. Height - Height of the control area in mm. Shape - The visual shape of the control area. Currently, all widgets respond as a rectangle but this will be resolved in a future firmware update. Hex Color - The color of the control area. You can search for a color at color-hex.com or type in a common name for a color into the text box (i.e. blue, green, black). Import Background - Under the overflow menu at the top right, you can find the Import Background option, which allows you to open a .jpg or .png image and show a semi-transparent version of the image over the Overlay to use as a template. The image should be the full size of the Innovator\u2019s Overlay (240mm by 140mm) as the image will be scaled to fit that size. I'm Not Used To Millimeters For those not accustomed to millimeters, here's a couple handy approximations: 10 mm is 0.4 inches 1 inch is 25 mm The Morph's sensor area is 230 mm x 130 mm. If you wanted to make an 8x4 grid of squares evenly distributed over the Morph, here's the dimensions you would use: Map Map Mode offers the same behavior as a standard SenselApp overlay map. To assign controls to an area, click on an area to populate the inspector. You can now assign types and parameters to program the control. Learn more about the control types here . As always, the map must be sent to the Morph using the \"Send To Morph\" button. Once that is done, the Morph will use your custom controls anytime you place the Innovator's Overlay on it. Creating an Overlay Once you have designed an overlay, there are several methods to test and make your own custom Overlay. Export for Printing To export a Layout, go to the design you want to export, click the overflow menu at the top right, and click \u201cExport 2D/3D File\u201d. This opens a file browser window titled \u201cExport a Sensel Layout\u201d. First, navigate to the directory you want to export the design to. Then, select the file format you wish to create and add a name: SVG A vector image that works best for printing or as a stencil. The outline of the overlay is 240mm by 140mm. PNG An image file that works best for printing. The image is sized to fit under the Innovator\u2019s Overlay (240mm by 140mm). STL A 3D model of the Overlay Design. This is designed to sit inside of the Innovator\u2019s Overlay and can be a starting place for creating your own Innovator\u2019s Overlay. (231.6mm by 113.8mm) 2D Print To print an Overlay Design, export the Layout as either a SVG or PNG. Each image is sized to fit under the Innovator\u2019s Overlay. Before printing, if you want to add any text or additional details to the design, you can bring the image into your favorite art program to make the changes. Make sure not to modify the size or resolution in order to maintain the proper size under the Innovator\u2019s Overlay (240mm by 140mm). When ready, print out the image onto paper or other very thin material. Then, follow the instructions on the image in order to cut it out. Finally place, the image under the Innovator\u2019s Overlay. This should provide a visual guide for your custom design. 3D Print An Overlay design can either be 3D printed as an insert or a full Innovator\u2019s Overlay. Insert With an insert, the design sits inside of the Innovator\u2019s Overlay. This allows for rapid prototyping and does not require you to create a full Innovator\u2019s Overlay. The Sensel App will export an STL file that can be 3D printed and fit inside the Innovator\u2019s Overlay. We generally recommend printing inserts and not printing the entire Innovator\u2019s Overlay, since this can significantly lower the cost of the 3D print. Full Innovator's Overlay To create a Innovator\u2019s Overlay with your own custom design, you should start with this Innovator\u2019s Overlay design model and document . Then, you will need to merge the design created by the Overlay Designer with the Innovator\u2019s Overlay model to create your own custom Innovator\u2019s Overlay. At this moment, we do not export a combined insert and Innovator\u2019s Overlay from the Sensel App. In addition to your Custom Innovator\u2019s Overlay, you will need magnets and two strips to hold the magnet in place. We will be providing more information about magnets in the near future. Materials We are currently evaluating available 3D printed materials in order to determine which materials offer an the optimal experience at a reasonable cost. If constructed of a base and buttons, like the STL created in the SenselApp, then the material needs to be thin and flexible to transmit the force to the Morph. Here are a few materials we are currently evaluating: Rubber-like Polyjet : This material with a low Shore Hardness, like 27A TangoBlack Plus, offers high flexibility and high resolution force transmission. The material may come out somewhat sticky, but fits nicely into the Innovator's Overlay. Shapeways Elasto Plastic : A flexible 3D printed material but may have some bends in the material so it will not sit flat against the Morph. Not optimal for high resolution force transmission. Ninjaflex : A flexible 3D printed material that comes in a wide array of colors. Ninjaflex is not as flexible as polyjet, so it does not transmit the force as well. As a result, we do not recommend Ninjaflex for custom overlays that require high positional accuracy. We will be adding more recommendations as we test available materials. Other Materials and Handmade Overlays In addition to 2D and 3D printing, there are many other ways to create a visual representation of a custom Overlay. You could cut shapes out of silicon/felt/construction paper, paint/draw on the shapes onto a flexible sheet, create a latex mold, etc. With all of these options, we recommend using flexible materials so that force can be transmitted accurately. NOTE: We do not recommend using adhesives, paints, markers, or any other unverified material on the Sensel Morph or Innovator\u2019s Overlay. We will not replace a product if either is visually or physically damaged from creating or using a custom Overlay.","title":"Overlay Designer"},{"location":"designer/#designing-an-overlay","text":"The first step is to decide what problem you want to solve and what controls you need to touch. This is done in the SenselApp using the Innovator's Overlay.","title":"Designing an Overlay"},{"location":"designer/#innovators-overlay","text":"The Innovator\u2019s Overlay is a transparent Overlay with an indented \"tray\" that can contain your custom design. The Innovator\u2019s Overlay allows for 2D printed layouts to be put under the Overlay and 3D Overlays to be placed in the middle region. We detail how to print 2D and 3D print Overlays in the Creating an Overlay section.","title":"Innovator's Overlay"},{"location":"designer/#no-overlay","text":"If you do not own an Innovator\u2019s Overlay, you can use the bare sensor to act as the Innovator\u2019s Overlay by creating a No Overlay map. Here's how: go to Add Overlay choose No Overlay change the control area type to Innovator\u2019s click Send Map to Morph . Now your Morph will behave as if an Innovator\u2019s Overlay is on the device when no overlay is placed on the Morph. You can also purchase the Innovator\u2019s Overlay from our store .","title":"No Overlay"},{"location":"designer/#create-a-design","text":"To start creating a design, click Add Overlay in the Sensel App. This will bring up a list of all existing Overlay choices. Click the Innovator\u2019s Overlay icon to begin. The Overlay Designer will look very similar to a standard SenselApp map, but will include a toggle at the top of the SenselApp that allows you to switch between Layout and Map. The custom design will start in Layout.","title":"Create a Design"},{"location":"designer/#layout","text":"Layout allows you to add, remove, reposition and customize control areas. Layout can only be found in the Innovator\u2019s Overlay for the Overlay Designer. Add Area - Adds a new control area to the design. Remove Area - Removes a control area from the design. To Front - Brings the control area to the front of the design. To Back - Sends the control area to the back of the design. Duplicate - Duplicates the dimensions and map of the control area. Grid - Snaps control areas to specific grid spacing in mm X Position - Horizontal position of the control area in mm. Y Position - Vertical position of the control area in mm. Width - Width of the control area in mm. Height - Height of the control area in mm. Shape - The visual shape of the control area. Currently, all widgets respond as a rectangle but this will be resolved in a future firmware update. Hex Color - The color of the control area. You can search for a color at color-hex.com or type in a common name for a color into the text box (i.e. blue, green, black). Import Background - Under the overflow menu at the top right, you can find the Import Background option, which allows you to open a .jpg or .png image and show a semi-transparent version of the image over the Overlay to use as a template. The image should be the full size of the Innovator\u2019s Overlay (240mm by 140mm) as the image will be scaled to fit that size.","title":"Layout"},{"location":"designer/#im-not-used-to-millimeters","text":"For those not accustomed to millimeters, here's a couple handy approximations: 10 mm is 0.4 inches 1 inch is 25 mm The Morph's sensor area is 230 mm x 130 mm. If you wanted to make an 8x4 grid of squares evenly distributed over the Morph, here's the dimensions you would use:","title":"I'm Not Used To Millimeters"},{"location":"designer/#map","text":"Map Mode offers the same behavior as a standard SenselApp overlay map. To assign controls to an area, click on an area to populate the inspector. You can now assign types and parameters to program the control. Learn more about the control types here . As always, the map must be sent to the Morph using the \"Send To Morph\" button. Once that is done, the Morph will use your custom controls anytime you place the Innovator's Overlay on it.","title":"Map"},{"location":"designer/#creating-an-overlay","text":"Once you have designed an overlay, there are several methods to test and make your own custom Overlay.","title":"Creating an Overlay"},{"location":"designer/#export-for-printing","text":"To export a Layout, go to the design you want to export, click the overflow menu at the top right, and click \u201cExport 2D/3D File\u201d. This opens a file browser window titled \u201cExport a Sensel Layout\u201d. First, navigate to the directory you want to export the design to. Then, select the file format you wish to create and add a name: SVG A vector image that works best for printing or as a stencil. The outline of the overlay is 240mm by 140mm. PNG An image file that works best for printing. The image is sized to fit under the Innovator\u2019s Overlay (240mm by 140mm). STL A 3D model of the Overlay Design. This is designed to sit inside of the Innovator\u2019s Overlay and can be a starting place for creating your own Innovator\u2019s Overlay. (231.6mm by 113.8mm)","title":"Export for Printing"},{"location":"designer/#2d-print","text":"To print an Overlay Design, export the Layout as either a SVG or PNG. Each image is sized to fit under the Innovator\u2019s Overlay. Before printing, if you want to add any text or additional details to the design, you can bring the image into your favorite art program to make the changes. Make sure not to modify the size or resolution in order to maintain the proper size under the Innovator\u2019s Overlay (240mm by 140mm). When ready, print out the image onto paper or other very thin material. Then, follow the instructions on the image in order to cut it out. Finally place, the image under the Innovator\u2019s Overlay. This should provide a visual guide for your custom design.","title":"2D Print"},{"location":"designer/#3d-print","text":"An Overlay design can either be 3D printed as an insert or a full Innovator\u2019s Overlay.","title":"3D Print"},{"location":"designer/#insert","text":"With an insert, the design sits inside of the Innovator\u2019s Overlay. This allows for rapid prototyping and does not require you to create a full Innovator\u2019s Overlay. The Sensel App will export an STL file that can be 3D printed and fit inside the Innovator\u2019s Overlay. We generally recommend printing inserts and not printing the entire Innovator\u2019s Overlay, since this can significantly lower the cost of the 3D print.","title":"Insert"},{"location":"designer/#full-innovators-overlay","text":"To create a Innovator\u2019s Overlay with your own custom design, you should start with this Innovator\u2019s Overlay design model and document . Then, you will need to merge the design created by the Overlay Designer with the Innovator\u2019s Overlay model to create your own custom Innovator\u2019s Overlay. At this moment, we do not export a combined insert and Innovator\u2019s Overlay from the Sensel App. In addition to your Custom Innovator\u2019s Overlay, you will need magnets and two strips to hold the magnet in place. We will be providing more information about magnets in the near future.","title":"Full Innovator's Overlay"},{"location":"designer/#materials","text":"We are currently evaluating available 3D printed materials in order to determine which materials offer an the optimal experience at a reasonable cost. If constructed of a base and buttons, like the STL created in the SenselApp, then the material needs to be thin and flexible to transmit the force to the Morph. Here are a few materials we are currently evaluating: Rubber-like Polyjet : This material with a low Shore Hardness, like 27A TangoBlack Plus, offers high flexibility and high resolution force transmission. The material may come out somewhat sticky, but fits nicely into the Innovator's Overlay. Shapeways Elasto Plastic : A flexible 3D printed material but may have some bends in the material so it will not sit flat against the Morph. Not optimal for high resolution force transmission. Ninjaflex : A flexible 3D printed material that comes in a wide array of colors. Ninjaflex is not as flexible as polyjet, so it does not transmit the force as well. As a result, we do not recommend Ninjaflex for custom overlays that require high positional accuracy. We will be adding more recommendations as we test available materials.","title":"Materials"},{"location":"designer/#other-materials-and-handmade-overlays","text":"In addition to 2D and 3D printing, there are many other ways to create a visual representation of a custom Overlay. You could cut shapes out of silicon/felt/construction paper, paint/draw on the shapes onto a flexible sheet, create a latex mold, etc. With all of these options, we recommend using flexible materials so that force can be transmitted accurately. NOTE: We do not recommend using adhesives, paints, markers, or any other unverified material on the Sensel Morph or Innovator\u2019s Overlay. We will not replace a product if either is visually or physically damaged from creating or using a custom Overlay.","title":"Other Materials and Handmade Overlays"},{"location":"morph/","text":"Welcome This User Guide explains the Sensel Morph hardware, features, software and, most importantly, how to use it. This User Guide is maintained in its own github repository . If you have suggestions, corrections, or improvements, you can log an issue or even fix it yourself and make a pull request . Overview - What is Morph? The Sensel Morph is a multi-touch, pressure sensitive, and reconfigurable control surface for artists, musicians, coders, and other creative people. There are several different Overlays for the Morph - each provides a different interactive interface for different creative softwares. Simply remove the current overlay and put down a new one - the Morph reconfigures and adapts to the new task at hand - playing music, editing video, drawing, playing games, or programming your own interface with the Sensel API . The Morph can be connected with USB or wirelessly via Bluetooth 4.0LE. Features Highly Sensitive : 185 x 105 sensor elements (\"sensels\") at a 1.25mm pitch (approx. 20,000 pressure sensors) 5g - 5kg sensing range per touch Each contact can sense approximately 30,000 levels Extremely Fast : Full Resolution Mode: 125 Hz (8 ms latency) High Speed Mode: 500 Hz (2 ms latency) Precise Tracking : 6502 dpi Versatile Connectivity Bluetooth LE, USB, Serial (enabled with Innovator's Kit) On-the-Go Power USB, Rechargeable Lithium Ion Polymer Battery 1 - Overlays received in your box depend on Overlays ordered. Supported Operating systems Operating system USB MIDI Bluetooth LE MIDI SenselApp Mac OS X/macOS 10.10 + Yes Yes Yes Windows 7 and 8 Yes No Yes Windows 10 Anniversary Edition Yes Yes Yes Ubuntu/Debian-based Linux 1 Yes Yes 3 No Android Yes Yes 2 No iOS Yes Yes No 1 - Many linux distributions will support USB MIDI. Only distributions that use the bluez stack will support BLE MIDI. 2 - Supported in Android Marshmallow and up 3 - Guide is specific to Ubuntu 16.04 Quick Start This guide will help you get your Morph out of the box and working with your computer or mobile device. 1 Download Software Download the SenselApp mapping and configuration application from the Sensel website. This is a great tool for getting the most out of your Morph, and essential for updating its firmware. 2 USB connection Remove the Morph and the supplied USB Micro cable from the box. Connect the Morph to your Windows or MacOS computer with the USB cable. The Morph will power up and automatically connect to your operating system. 3 Update Firmware Make sure you have a reliable internet connection and launch the SenselApp on your computer with the Morph connected. The application will query our servers and find out if there is a firmware update available. If there is an update available, update your firmware by pressing the red button. You'll be alerted of progress and completion. It's best to update firmware with a direct connection to a USB port to your computer, rather than through a hub. 4 Launch the Visualizer The Visualizer is the easiest way to see activity on your Morph and confirm that the hardware is communicating with your computer. Turning On, Turning Off Turn the Morph off by holding the button down for a few seconds. When the red LED light goes off, release the button. If you release the button before the light goes off, the Morph will still be drawing power. The Morph will automatically turn on when connected to a USB host. If off, hold the button down for a second or so to turn on. Release when the LED light turns white (USB) or turns blue (wireless). If the Morph is plugged into USB, disconnecting from USB will turn power off. Hardware At first glance, the Sensel Morph appears a fairly simple piece of hardware. It consists of a flat rectangular area of force-sensing circuitry, a slightly raised area that contains additional processing circuitry, LEDs, a button, and micro USB connector. This sleek hardware is actually quite powerful, as you\u2019ll find out. Features LEDS There are two locations for LEDs on the Morph. The single LED on the top right corner of the device can show a variety of colors, and the LED strip which will always be white. Status RGB This LED changes colors to indicate different statuses. The different color and blink patterns are as follows: White : Communication is happening to the device over USB Blue stable : The device is in bluetooth mode Blue pulsing : The device is in bluetooth pairing mode Yellow : The device is in update mode (this means you should open the Sensel App and update the firmware on your device) Purple : The device is communicating through the Developer's Cable (you won't see this unless you're using the Developer's Cable from the Innovator\u2019s Kit) Red : Indicates a low battery or powering off device. To turn off the Morph, press and hold the power button for 5 seconds. After 2 seconds the red LED will turn on. Wait until the LED turns off before releasing the power button. Strip There is a strip of 24 white LEDs. These light up when areas are pressed on the Overlays and can be controlled with the API. Button Use to power the device on/off and put in Bluetooth pairing mode. Press to turn on Hold for a few seconds to put in pairing mode (blue pulsing LED) Hold for a few seconds to turn off (wait for red LED to flash and then go off ) Click to see battery level (indicated by the fullness of the LED strip) Double click to disconnect from current device and put Morph in pairing mode USB Connector The Morph has a single USB micro connector for charging the battery and providing a serial connection. The Morph is a composite HID device, so it is always a MIDI, Keyboard, Gamepad, Digitizer, Mouse and serial communication device so we can send events to the appropriate output based on the overlay layout and mapping. Bluetooth Transmitter The Morph can seamlessly switch between Bluetooth and wired operation. Read on for details on connecting to your device with Bluetooth. Force Sensor Surface Without an Overlay, the force sensing surface can be used with the Visualizer in the Sensel App to view pressure levels and contact regions. It is no more or less durable than the rest of the case. Battery Life The Morph has a built-in rechargeable 3.7 volt Lithium Ion Polymer battery rated at 420 mAh. Care and Feeding The Overlays are made of silicone rubber with a silicone top-coating for a smooth feel. You can clean them with warm water and soap. While we have tested a variety of substances to ensure quality, it is known that some sunscreens and lotions can be contaminants to plastics. So, to ensure longest life for your Overlays, try not to use Overlays when your hands have excess lotion or sunscreen on them. Additionally, silicone is susceptible to tears. Once torn, it's difficult to stop. Use the handy case we provide to keep your Overlays away from loose change, hairpins, keys, or other sharp items! The LiPo battery's charge is handled by the Morph's internal electronics. However, a general rule-of-thumb for LiPo batteries is that they should not be stored at full charge. If you will not be using the Morph for a while, turn it on and let the battery charge down. The black surface of the pressure sensor is made of durable PET (Polyethylene Terephthalate) plastic. Chemical Testing The Overlays have been tested with a variety of food and chemicals. * Ketchup * Coca Cola * Banana Boat Sport Sunscreen * 91% isopropyl alcohol * 95% denatured alcohol We tested an overlay for approximately 25 hours contact in room temperature of about 62 deg F (~17 deg C). All materials were wiped off with paper towels The overlay was washed with liquid dish detergent and lukewarm water and dried No visual change was observed in any of the exposure areas We concluded that coated and uncoated overlays have similarly good resistance to the tested chemicals, with the exception of ketchup, which causes a lingering and noticeable vinegar smell. Dimensions Thickness measurements are with the rubber feet. Subtract 0.75 mm for thickness measurements without the rubber feet. Overlays The Overlays are the modular interfaces that are placed on the Morph and change how the hardware responds to inputs. There are eight (8) magenets on each overlay that hold the overlay in place and identify the overlay to the microcontroller firmware. Visit the Sensel video page to watch videos that explain many of the overlays in depth. There are scripts for Bitwig Studio and Ableton Live that provide deep integration and context sensitive mapping. Documentation for the scripts for Bitwig Studio and Ableton Live are in the Software Setups portion of this guide. QWERTY The QWERTY Overlay works like a regular QWERTY keyboard. It's great for using the Morph as a keyboard for iPads and other tablets. You will need to configure it for your Operating System using the Sensel App. The AZERTY and DVORAK Overlays provide access to more internationally-used keyboard layouts. Piano The Piano Overlay sends MIDI data on Channel 1 from the Morph to your device so you can play software synths and samplers. By default, the Piano Overlay sends notes on MIDI channel 1 and the default octave starts at note 60 (C3 1 ). You can transpose up and down two octaves with the arrow keys. Additionally, you can create vibrato by moving your fingers side-to-side, bending the note. The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases. You may want to remap these to a MIDI CC or note, or use the Control Scripts for Bitwig or Ableton Live . Since there is no standard MMC message for \"loop,\" the loop button sends a MIDI note, allowing you to use software MIDI latch (or learn) to use it to control the Loop function in your software. 1 - MIDI notes conventionally start at note number 0, named C-2. This is not a standard, as this convention has been broken many times, but most music software today tends to call MIDI note 60 C3. Drums The Drum Overlay sends notes on MIDI Channel 10. The Default notes start at 36 (C3). The arrow keys transpose all notes up or down 16 semitones to better work with many software drum machines, which work in banks of 16 notes. The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases. You may want to remap these to a MIDI CC or note, or use the Control Scripts for Bitwig or Ableton Live . Music Production The 16 Pad grid sends on MIDI Channel 2, the controls send on MIDI Channel 2, the \"piano keys\" send on MIDI Channel 3. The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases. You may want to remap these to a MIDI CC or note, or use the Control Scripts for Bitwig or Ableton Live . Buchla Thunder The Buchla Thunder overlay is made in conjunction with synthesizer company Buchla U.S.A. Based on Don Buchla's Thunder MIDI controller, the Buchla Thunder Overlay provides an ergonomic interface for playing and controlling hardware and software synthesizers. It is an ideal interface for using MIDI Polyphonic Expression (MPE), as it is designed for slides, glides, and pressure. There are nine (9) presets of different settings. Hold the top \"programmer's bar\" in combination with the 1-9 keys to change presets. By default, presets 1-4 provide different scales using MPE, presets 6-9 use standard MIDI on channel 1, and preset 5 provides several MIDI CC messages to create sliders and momentary buttons. Use the SenselApp to program different controls for the different sets. The large, bottom hexagonal controls are used as XYZ MIDI controllers, sending MIDI CC commands from horizontal, vertical, and pressure actions. These are wonderful for sound design and exploration. MIDI Mapping XYZ Controls If you need to use a software MIDI learn function, it can often be difficult for the software to choose from the three messages send when you touch the controls. You can use the SenselApp to disable two of the dimensions when learning one. For example, set the CCs for X and Y to \"none\", then \"Send Map to Morph.\" Then press the control when your software is in MIDI learn mode: It is admittedly cumbersome, but worth it. We hope software will soon adapt their ease of use for such innovative controls! We have a step-by-step video of how to map XYZ controls on our YouTube Channel . Buchla Thunder Presets The Buchla Thunder Overlay can store nine different mappings for the layout. These can be any combination of MIDI notes, continuous controllers, keyboard commands, and other messages. By default, presets are different scales. Presets 1-4 use the MIDI Polyphonic Expression (MPE) standard. Presets 6-9 use standard MIDI on channel 1. Preset 5 is a collection of MIDI continuous controller (CC) messages useful for mapping to parameters in your software. The large hexagonal controls are setup to act as 3-way CC controls (vertical, horizontal, and gesture). Changing Presets Hold the top middle \"programmer\" bar, then select a preset with buttons labeled 1-9 to load a preset at any time. Editing Presets Use the SenselApp to edit the presets for the Thunder Overlay. Select a preset to edit from the top Preset Selectors. Then, edit the controls on the Thunder by clicking on them, and changing values in the Inspector. If you want to copy and paste a preset to another, simply select all ( CMD or CTL-A ) then copy ( CMD or CTL-C ), then select a Preset at the top. Select all again, then paste ( CMD or CTL-V ). This copies all the settings to the preset. Video Editing Overview The Video Editing Overlay is a control surface that sends keyboard and mouse events to enable professional video editing. Setup By default, the Sensel Morph works with Adobe Premiere on Windows. For Premiere on macOS, the macOS Sensel App contains the macOS mapping which can be sent to the Morph. Open the Video overlay in the Sensel App and click the \"Send Map to Morph\" button to send the Map. If you require a specific mapping for your program, you can use the Sensel App to create your own mappings for each program. If you are using Premiere CC, you may need to add a keyboard shortcut in Premiere to change focus to the timeline panel, which has been removed in some versions. By default, the Sensel Morph will send Shift+3 when you click the timeline button. No driver is required for the Video Editing Overlay. Controls Jog Wheel and Navigation Controls The central Jog Wheel and surrounding navigation controls serve as the primary means of moving along a video timeline. The Jog Wheel moves one frame for each of the eight detents around the knob. You can modify the speed of the jog wheel by pressing the modifier keys. The Shuttle Buttons are pressure sensitive buttons that repeatedly press a key at different pressure levels, allowing you to shuttle quickly along the timeline. When you release the Shuttle Button, a halt key is sent. In Premiere, J or L is sent as you push on the Shuttle Button and K is sent when you release the Shuttle Button. The Video, Audio, and Zoom sliders all send key events as you move along the slider. In Premiere, the sliders adjust the size of the video, audio, and zoom of the timeline elements. The Navigation Slider is a slider that sends scroll events for moving along the timeline. In Premiere, the timeline requires you to click on the timeline before you can scroll. The Navigation Slider is not remappable. The other buttons in the central navigation area all send key events that are used to move through the timeline. Jog Wheel Modifiers The Jog Wheel Modifiers change the function of the Jog Wheel while you hold down the buttons. By default, these modifiers are set to Slip, Slide, and Nudge in Premiere and can be customized using the Sensel App. Other Control Buttons The rest of the control buttons on the Video Editing Overlay send key commands that can be customized using the Sensel App. Gaming The Gaming Overlay converts the Morph into a game controller. Based on popular controllers, the Gaming Overlay has all the controls you need to play games. The Gamepad Overlay sends standard Human Interface Device (HID) gamepad events to your computer or smartphone. While most devices support this standard, not every game does. To bridge this gap, emulators can be used to change HID gamepad events to events that the game can understand, such as XBox controller, Playstation Dualshock, or keyboard events. Customizing If the buttons on the overlay don't perform the right action in the game, use the SenselApp to customize the event values. Emulating For other cases, you can use software to emulate controllers. Windows USB Game Controller - comes with Windows 10. Open the USB Game Controller in Windows, select \"Sensel Morph\" and click \"Properties\" to see the available buttons and joysticks. TocaEdit Xbox 360 Controller Emulator - software lets a controller emulate an Xbox 360 controller and customize gamepad events. Download our mapping file. Unzip and put this map and the x360ce.exe executable file in the same directory as the game executable. macOS The emulator Enjoyable maps HID events to joystick for game control compatibility. Browsers Some browsers support gamepad input using the Gamepad API. Gamepad support can be found on the Can I Use website Bluetooth Gamepad-over-Bluetooth will be supported in future releases. Art The Art overlay is more than just a new stylus. Offering several modes for drawing styles, tools, and methods, the Art overlay takes full advantage of the Morph\u2019s powerful pressure sensors to give the visual artist new and old ways of creating digital drawings. Not only can the Art overlay enable the use of an arbitrary stylus (pen, pencil, chopstick, fingernail), but it also allows use of the \u201cnatural\u201d artist tools: brushes, crayons, chalk, charcoal, and more. What's more, the Morph's 32,000 levels of pressure is vastly more sensitive than any other drawing tablet. With the proper setup, your drawing software will adapt to brush size and orientation of the tool, letting instinct and muscle memory translate into great digital art. Overview When the Art Overlay is placed on the Morph, it shows up as a USB HID Graphics Tablet. You can press the \u201chand\u201d button to immediately begin navigating your computer\u2019s desktop and file folders. Once you open a graphics application, you can use the other modes to start creating. Any graphics software that accepts input from a stylus will work with the Art Overlay. The top buttons stay out of the way of your drawing hand providing macros (the \u201cdot\u201d buttons) and mode selection. The side buttons and slider add navigation and macro control. These are arranged symmetrically to allow for left or right hand artists. Normally, you would disable the side buttons on the dominant-hand side (to avoid an accidental trigger with a knuckle), and use the off-hand on the slider and buttons. Compatibility USB only. Mac OS 10.11 and below Windows 10 Don\u2019t! Don\u2019t use a sharp object as a stylus. Silicon is prone to tearing and slicing, so you can easily damage the overlay with a sharp object. Retract your pens, and think twice about using a mechanical pencil directly on the overlay! Modes Pen Button - Pen Mode with Paper Pen mode lets you draw with real ball-point pens and graphite or colored pencils so you can use the medium and tools that feel most natural to you. Drawing on paper makes digital drawing easier to learn, since you can use the familiarity of paper to see where your strokes will be drawn, without the learning curve of most graphics tablets. For paper mode, it is wise to place two sheets of paper over the Art Overlay (a single thin sheet might let sharp pens poke through) and watch as your pen or pencil-strokes appear on the screen. The morph will act like a graphics tablet wherever it recognizes the pointy tip of a pen or pencil, so you can use it to draw in any standard drawing program. This mode features the Sensel Stylus Detection (a.k.a. \u201cpalm reject\u201d) algorithm so you can rest your hand on the Morph while you draw. Paper Mode may work with a variety of drawing implements, as long as they have a relatively small and hard drawing tip. Pen Button - Pen Mode without Paper This mode transforms the Morph into a drawing tablet. To enable paper-less drawing, check the \"Use without paper\" check-box in the Sensel App, and press the \"Send Map to Morph\" button. You can use any hard stylus-like objects such as the back of a pen or paintbrush, a retracted ball-point pen, or even a fingernail to draw using the Morph. A light touch with the stylus will show a drawing cursor, so you can see where your stroke will begin. A harder force will start drawing the stroke. You can adjust the drawing force using the slider in the Sensel App. Brush Button - Paint Mode Paint mode brings the richness of physical media such as artists' charcoal, or cont\u00e9 crayons, brushes, or finger-smudging to your drawing software. Paint mode lets you map the width, orientation, and pressure of your physical brush to properties of your digital brush. Since fingers and brushes can look much alike, this mode does not support palm rejection, so make sure not to rest your palm on the surface surface. Note that for soft brushes Paint Mode works better with no overlay on your Morph. You can set the default No Overlay mode to Paint Mode in the Sensel App. Hand Button - Touchpad mode Touchpad mode transforms the Morph into a giant touchpad, so you won't need to carry along a mouse to interact with your art software's GUI. You can also scroll around your project using two finger swipes, right-click with a two-finger tap, or click with a firm press of your finger. Buttons All buttons are re-mappable with the SenselApp. Default behaviors provide popular controls and pan-zoom navigation. Dots - can be customised to your most frequent commands. By default, these are mapped (in order form left to right) to Undo/Redo, Step Back, Step Forward (in Adobe products), Tab, Page Up, and Page Down. Top Slider - controls zoom level in Adobe products by default. You can use the SenselApp to re-map it to change brush size, transparency, or other continuous parameters. Function Buttons - are available for your most common functions. By default these three buttons are are mapped to Shift, Command, and Option in OS X and Shift, Ctrl, and Alt in Windows. Navigation Button - is mapped to the spacebar for easy navigation in Adobe products. Innovator Your turn to make an Overlay! The Innovator's Overlay works with the API . If you want to use the API with Arduino or other microcontrollers, the Developer's Cable turns the microUSB port on the Morph into a UART connection for microcontrollers. Much more detail about working with the API is in our API documentation . At a higher level than the API, the Overlay Designer works in the SenselApp to let you draw out and define control areas for keyboard, MIDI, game controls, mouse actions, and more. There is also an object for Cycling 74's Max , which provides much of the same data as the API, but in the Max programming environment. It is available through the Max package manager: Similarly, the Pure Data object for accessing raw touch information is available in Deken and the L2Ork Purr-Data version of the open source software. Music Overlay Default Note Assignments Below are guides showing the default note numbers/names assignments for the MIDI overlays: SenselApp Software The SenselApp is fully documented on a separate page Bluetooth connection The Sensel Morph is a Bluetooth 4.0 LE wireless device. This means it can function as a wireless controller for your music, drawing, or writing. While the latency can be higher than a USB connection (from the device, 5 ms average for USB, 20 ms average for Bluetooth), it is still very useful and very convenient. This section describes how to pair and un-pair your Morph to a bluetooth connection on a number of operating systems. Once the Morph is paired to your device, it will automatically connect when in range. Pairing In general, the process is as follows. Screen images for different operating systems are below. Unplug the Morph from any USB computer connection. Open the bluetooth control panel for your computer. Hold the button down for about one second. The Morph LEDs will flash and a blue LED will turn on after three seconds. Click the \"pair\" button in your computer's control panel. The Morph will be paired to your device. Unpairing Currently, the Morph can be paired with only one device. If you want to pair the Morph to a different device, you'll need to unpair the connected device and the Morph. Turn off the Morph Unpair or forget the Morph from the previously connected device. Unplug the Morph from any USB computer connection. Open the bluetooth control panel for the new computer. Hold the button down for about one second. The Morph LEDs will flash and a blue LED will turn on after three seconds. Switch Pairing Once you have un-paired the Morph from the computer, you will need to enter pairing mode again. While the Morph is on and the blue light is on, double click the power button. The Morph lights should flash again and the blue LED will turn on after three seconds. Click the \"pair\" button in your new computer's control panel. The Morph will be paired to your new device. OS Specific Pairing Guides Connection guides for macOS, Windows, and Linux follow. macOS Open System Preferences and click the Bluetooth icon. Put the Morph into pairing mode . The control panel will look like: Click the \"pair\" button on screen. Your Morph is now paired: Windows Open the Settings panel for Bluetooth. The easy to get there is to use the Windows search bar: Windows will find the Morph as ready to pair: Double click the Morph listing and it will connect: iOS Open Settings and select Bluetooth. Put the Morph into pairing mode . Select Morph in the available devices and pair. Once you have paired with the Morph, you will be able to use it with the different Overlays. Here are some sample screen captures of how it shows up in different apps: Android Put the Morph into pairing mode . In Android's Settings app, select Bluetooth, select \"Morph\" from the available devices and pair: Once paired, you can use the Morph. If you are using the QWERTY Overlay, you'll probably want to setup your keyboard so you can easily switch between on-screen and Morph. Use the keyboard icon on the bottom of your screen: Linux There are many flavors of Linux. We are documenting one of the most common, Ubuntu 16.04. Open the Settings panel and select the Bluetooth panel In the lower left of the \"Devices\" panel, click the \" + \" button to search and add the Morph. Most Linux relies on the bluez bluetooth stack. You can also use the command line tools to pair. Once you run the bluetoothctl devices command, you'll be in the bluetoothctl interactive shell: > bluetoothctl devices [NEW] Controller 00:15:83:3D:0A:57 sensoruser [default] [NEW] Device 71:11:32:B0:12:A0 Morph-0194 [bluetooth]# pair 71:11:32:B0:12:A0 [bluetooth]# pair 71:11:32:B0:12:A0 [bluetooth]# connect 71:11:32:B0:12:A0 [bluetooth]# trust 71:11:32:B0:12:A0 If you want to disconnect, you can bluetoothctl remove 71:11:32:B0:12:A0 Update bluez If you want to update to the latest bluez software, you can get the link from the bluez site . At the time of writing, the current version is 5.44. This has some support for Bluetooth MIDI: sudo apt-get update sudo apt-get install -y libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev cd ~/Downloads wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.44.tar.xz tar xvf bluez-5.44.tar.xz cd bluez-5.44 ./configure make sudo make install While we can't explicitly support all Linux, this should at least get you started. Bluetooth MIDI configuration If your operating system supports MIDI over Bluetooth, you can have a wireless MIDI controller. macOS Open the AudioMIDI application in macOS. Open the MIDI Studio window (cmd-2) and double-click the Bluetooth logo. If you have successfully paired the Morph with Bluetooth , you'll see your device listed here. Press \"connect\" and the Morph will be available to any MIDI applications as an input device. Windows Windows 10 Anniversary Edition and after support Bluetooth MIDI, so make sure you have the latest update. This support, however, is limited to applications that use the UWP MIDI API (or the Win32 wrapper for UWP MIDI) (read more details here ). As a result, for common use, you might need a couple additional pieces of software: MIDIberry loopMIDI The loopMIDI application creates virtual (or loopback ) MIDI ports. MIDI berry provides a connection between the Morph's Bluetooth MIDI ports and the virtual MIDI ports. In your music application, you connect to the virtual port created in loopMIDI. Screenshot examples below show loopMIDI with the virtual port, MIDIberry with the connection made, and a couple of applications using the vitrual port to get MIDI input from the Morph. virtual port \"MorphMIDI Port\" created in loopMIDI (type in the field, then click \"+\") connection between Morph bluetooth and \"MorphMIDI Port\" made in MIDIberry (just tap on an input port and an output port to connect them) virtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of Bitwig Studio virtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of FL Studio iOS iOS version 8 and above support Bluetooth MIDI. These devices have Bluetooth LE support: iPhone 4s + iPad3 + iPad Mini + Once the Morph is paired with the iOS device, it's available as a MIDI device to most iOS MIDI-capable apps. You'll need to go into an app's preferences or setup panel to enable and configure MIDI control. In some cases, you may need the midimittr app to create a connection with the Morph which will expose the Morph's MIDI input to other apps. Android Android version Marshmallow (6) and above support BLE MIDI. However, some devices support this connection type, and some don't. The best way to find out is to pair your device with the Morph via Bluetooth, then use the free MIDI BLE Connect app from the Google Play store. Open it after paring the Morph to your Android device. If there is a connection to be found, MIDI BLE Connect will scan and find it. Linux BLE MIDI has some support in the latest bluez stack. This site has a detailed explanation of setting up MIDI Bluetooth for Ubuntu 16.04. You are welcome to experiment! Instructions for updating to the most recently release of bluez are above . Use it! (Troubleshooting) As the name implies, there are a lot of different ways to use the high-resolution sensor that is the Morph. What follows in this section are the nuts and bolts on getting your morph working with your device and making use of the different Overlays in different softwares. Test it! Because the Morph is capable of so many different modes and protocols, you may need some reassurance and ways of testing. Here's some tools and suggestions for some of the different modes. MIDI If you are unsure that your Morph is properly connected and providing MIDI input to your computer, you can test with some simple programs. If you don't know what MIDI is, it's a simple serial protocol that electronic music hardware and software uses to interoperate. Learn more at wikipedia . macOS MIDI Monitor Windows MIDIberry Bluetooth MIDI is available on Windows 10 Anniversary Edition, so make sure your version of Windows 10 is recently updated. It is limited to apps that use the native Windows MIDI implementation, so it probably won't show up as a MIDI input in most software. MIDIberry provides native MIDI hooks to Windows 10, so it can connect to the USB MIDI and the Bluetooth MIDI ports created by the Morph. MIDIberry provides a monitor function that makes it easy to confirm MIDI data input from the Morph. iOS MIDI Wrench Android USB MIDI Monitor Linux amidi others If you want a GUI monitor, you can find something in the \"others\" link above. The easiest way to test on Linux is to use ALSA's amidi in a terminal. Plug in the Morph to your computer's USB port, then list the MIDI devices with: amidi -l You'll get something like Dir Device Name IO hw:1,0,0 Sensel Morph MIDI 1 Armed with the portname, you can now start dumping MIDI input to the terminal: amidi -d -p hw:1,0,0 QWERTY Open text editor or word processing program. Try typing. Use command and option keys. Everything work? If not, you'll need to either check your connection, or use the Sensel App to make sure your QWERTY Overlay is configured for your OS. Software Setup Documentation for setting up the Sensel Morph with several popular music and art software titles is on a separate page. API There's a software API for Python, Processing, and C/C++. Find out more at our github .","title":"Morph"},{"location":"morph/#welcome","text":"This User Guide explains the Sensel Morph hardware, features, software and, most importantly, how to use it. This User Guide is maintained in its own github repository . If you have suggestions, corrections, or improvements, you can log an issue or even fix it yourself and make a pull request .","title":"Welcome"},{"location":"morph/#overview-what-is-morph","text":"The Sensel Morph is a multi-touch, pressure sensitive, and reconfigurable control surface for artists, musicians, coders, and other creative people. There are several different Overlays for the Morph - each provides a different interactive interface for different creative softwares. Simply remove the current overlay and put down a new one - the Morph reconfigures and adapts to the new task at hand - playing music, editing video, drawing, playing games, or programming your own interface with the Sensel API . The Morph can be connected with USB or wirelessly via Bluetooth 4.0LE.","title":"Overview - What is Morph?"},{"location":"morph/#features","text":"Highly Sensitive : 185 x 105 sensor elements (\"sensels\") at a 1.25mm pitch (approx. 20,000 pressure sensors) 5g - 5kg sensing range per touch Each contact can sense approximately 30,000 levels Extremely Fast : Full Resolution Mode: 125 Hz (8 ms latency) High Speed Mode: 500 Hz (2 ms latency) Precise Tracking : 6502 dpi Versatile Connectivity Bluetooth LE, USB, Serial (enabled with Innovator's Kit) On-the-Go Power USB, Rechargeable Lithium Ion Polymer Battery 1 - Overlays received in your box depend on Overlays ordered.","title":"Features"},{"location":"morph/#supported-operating-systems","text":"Operating system USB MIDI Bluetooth LE MIDI SenselApp Mac OS X/macOS 10.10 + Yes Yes Yes Windows 7 and 8 Yes No Yes Windows 10 Anniversary Edition Yes Yes Yes Ubuntu/Debian-based Linux 1 Yes Yes 3 No Android Yes Yes 2 No iOS Yes Yes No 1 - Many linux distributions will support USB MIDI. Only distributions that use the bluez stack will support BLE MIDI. 2 - Supported in Android Marshmallow and up 3 - Guide is specific to Ubuntu 16.04","title":"Supported Operating systems"},{"location":"morph/#quick-start","text":"This guide will help you get your Morph out of the box and working with your computer or mobile device.","title":"Quick Start"},{"location":"morph/#1-download-software","text":"Download the SenselApp mapping and configuration application from the Sensel website. This is a great tool for getting the most out of your Morph, and essential for updating its firmware.","title":"1 Download Software"},{"location":"morph/#2-usb-connection","text":"Remove the Morph and the supplied USB Micro cable from the box. Connect the Morph to your Windows or MacOS computer with the USB cable. The Morph will power up and automatically connect to your operating system.","title":"2 USB connection"},{"location":"morph/#3-update-firmware","text":"Make sure you have a reliable internet connection and launch the SenselApp on your computer with the Morph connected. The application will query our servers and find out if there is a firmware update available. If there is an update available, update your firmware by pressing the red button. You'll be alerted of progress and completion. It's best to update firmware with a direct connection to a USB port to your computer, rather than through a hub.","title":"3 Update Firmware"},{"location":"morph/#4-launch-the-visualizer","text":"The Visualizer is the easiest way to see activity on your Morph and confirm that the hardware is communicating with your computer.","title":"4 Launch the Visualizer"},{"location":"morph/#turning-on-turning-off","text":"Turn the Morph off by holding the button down for a few seconds. When the red LED light goes off, release the button. If you release the button before the light goes off, the Morph will still be drawing power. The Morph will automatically turn on when connected to a USB host. If off, hold the button down for a second or so to turn on. Release when the LED light turns white (USB) or turns blue (wireless). If the Morph is plugged into USB, disconnecting from USB will turn power off.","title":"Turning On, Turning Off"},{"location":"morph/#hardware","text":"At first glance, the Sensel Morph appears a fairly simple piece of hardware. It consists of a flat rectangular area of force-sensing circuitry, a slightly raised area that contains additional processing circuitry, LEDs, a button, and micro USB connector. This sleek hardware is actually quite powerful, as you\u2019ll find out.","title":"Hardware"},{"location":"morph/#features_1","text":"","title":"Features"},{"location":"morph/#leds","text":"There are two locations for LEDs on the Morph. The single LED on the top right corner of the device can show a variety of colors, and the LED strip which will always be white.","title":"LEDS"},{"location":"morph/#status-rgb","text":"This LED changes colors to indicate different statuses. The different color and blink patterns are as follows: White : Communication is happening to the device over USB Blue stable : The device is in bluetooth mode Blue pulsing : The device is in bluetooth pairing mode Yellow : The device is in update mode (this means you should open the Sensel App and update the firmware on your device) Purple : The device is communicating through the Developer's Cable (you won't see this unless you're using the Developer's Cable from the Innovator\u2019s Kit) Red : Indicates a low battery or powering off device. To turn off the Morph, press and hold the power button for 5 seconds. After 2 seconds the red LED will turn on. Wait until the LED turns off before releasing the power button.","title":"Status RGB"},{"location":"morph/#strip","text":"There is a strip of 24 white LEDs. These light up when areas are pressed on the Overlays and can be controlled with the API.","title":"Strip"},{"location":"morph/#button","text":"Use to power the device on/off and put in Bluetooth pairing mode. Press to turn on Hold for a few seconds to put in pairing mode (blue pulsing LED) Hold for a few seconds to turn off (wait for red LED to flash and then go off ) Click to see battery level (indicated by the fullness of the LED strip) Double click to disconnect from current device and put Morph in pairing mode","title":"Button"},{"location":"morph/#usb-connector","text":"The Morph has a single USB micro connector for charging the battery and providing a serial connection. The Morph is a composite HID device, so it is always a MIDI, Keyboard, Gamepad, Digitizer, Mouse and serial communication device so we can send events to the appropriate output based on the overlay layout and mapping.","title":"USB Connector"},{"location":"morph/#bluetooth-transmitter","text":"The Morph can seamlessly switch between Bluetooth and wired operation. Read on for details on connecting to your device with Bluetooth.","title":"Bluetooth Transmitter"},{"location":"morph/#force-sensor-surface","text":"Without an Overlay, the force sensing surface can be used with the Visualizer in the Sensel App to view pressure levels and contact regions. It is no more or less durable than the rest of the case.","title":"Force Sensor Surface"},{"location":"morph/#battery-life","text":"The Morph has a built-in rechargeable 3.7 volt Lithium Ion Polymer battery rated at 420 mAh.","title":"Battery Life"},{"location":"morph/#care-and-feeding","text":"The Overlays are made of silicone rubber with a silicone top-coating for a smooth feel. You can clean them with warm water and soap. While we have tested a variety of substances to ensure quality, it is known that some sunscreens and lotions can be contaminants to plastics. So, to ensure longest life for your Overlays, try not to use Overlays when your hands have excess lotion or sunscreen on them. Additionally, silicone is susceptible to tears. Once torn, it's difficult to stop. Use the handy case we provide to keep your Overlays away from loose change, hairpins, keys, or other sharp items! The LiPo battery's charge is handled by the Morph's internal electronics. However, a general rule-of-thumb for LiPo batteries is that they should not be stored at full charge. If you will not be using the Morph for a while, turn it on and let the battery charge down. The black surface of the pressure sensor is made of durable PET (Polyethylene Terephthalate) plastic.","title":"Care and Feeding"},{"location":"morph/#chemical-testing","text":"The Overlays have been tested with a variety of food and chemicals. * Ketchup * Coca Cola * Banana Boat Sport Sunscreen * 91% isopropyl alcohol * 95% denatured alcohol We tested an overlay for approximately 25 hours contact in room temperature of about 62 deg F (~17 deg C). All materials were wiped off with paper towels The overlay was washed with liquid dish detergent and lukewarm water and dried No visual change was observed in any of the exposure areas We concluded that coated and uncoated overlays have similarly good resistance to the tested chemicals, with the exception of ketchup, which causes a lingering and noticeable vinegar smell.","title":"Chemical Testing"},{"location":"morph/#dimensions","text":"Thickness measurements are with the rubber feet. Subtract 0.75 mm for thickness measurements without the rubber feet.","title":"Dimensions"},{"location":"morph/#overlays","text":"The Overlays are the modular interfaces that are placed on the Morph and change how the hardware responds to inputs. There are eight (8) magenets on each overlay that hold the overlay in place and identify the overlay to the microcontroller firmware. Visit the Sensel video page to watch videos that explain many of the overlays in depth. There are scripts for Bitwig Studio and Ableton Live that provide deep integration and context sensitive mapping. Documentation for the scripts for Bitwig Studio and Ableton Live are in the Software Setups portion of this guide.","title":"Overlays"},{"location":"morph/#qwerty","text":"The QWERTY Overlay works like a regular QWERTY keyboard. It's great for using the Morph as a keyboard for iPads and other tablets. You will need to configure it for your Operating System using the Sensel App. The AZERTY and DVORAK Overlays provide access to more internationally-used keyboard layouts.","title":"QWERTY"},{"location":"morph/#piano","text":"The Piano Overlay sends MIDI data on Channel 1 from the Morph to your device so you can play software synths and samplers. By default, the Piano Overlay sends notes on MIDI channel 1 and the default octave starts at note 60 (C3 1 ). You can transpose up and down two octaves with the arrow keys. Additionally, you can create vibrato by moving your fingers side-to-side, bending the note. The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases. You may want to remap these to a MIDI CC or note, or use the Control Scripts for Bitwig or Ableton Live . Since there is no standard MMC message for \"loop,\" the loop button sends a MIDI note, allowing you to use software MIDI latch (or learn) to use it to control the Loop function in your software. 1 - MIDI notes conventionally start at note number 0, named C-2. This is not a standard, as this convention has been broken many times, but most music software today tends to call MIDI note 60 C3.","title":"Piano"},{"location":"morph/#drums","text":"The Drum Overlay sends notes on MIDI Channel 10. The Default notes start at 36 (C3). The arrow keys transpose all notes up or down 16 semitones to better work with many software drum machines, which work in banks of 16 notes. The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases. You may want to remap these to a MIDI CC or note, or use the Control Scripts for Bitwig or Ableton Live .","title":"Drums"},{"location":"morph/#music-production","text":"The 16 Pad grid sends on MIDI Channel 2, the controls send on MIDI Channel 2, the \"piano keys\" send on MIDI Channel 3. The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases. You may want to remap these to a MIDI CC or note, or use the Control Scripts for Bitwig or Ableton Live .","title":"Music Production"},{"location":"morph/#buchla-thunder","text":"The Buchla Thunder overlay is made in conjunction with synthesizer company Buchla U.S.A. Based on Don Buchla's Thunder MIDI controller, the Buchla Thunder Overlay provides an ergonomic interface for playing and controlling hardware and software synthesizers. It is an ideal interface for using MIDI Polyphonic Expression (MPE), as it is designed for slides, glides, and pressure. There are nine (9) presets of different settings. Hold the top \"programmer's bar\" in combination with the 1-9 keys to change presets. By default, presets 1-4 provide different scales using MPE, presets 6-9 use standard MIDI on channel 1, and preset 5 provides several MIDI CC messages to create sliders and momentary buttons. Use the SenselApp to program different controls for the different sets. The large, bottom hexagonal controls are used as XYZ MIDI controllers, sending MIDI CC commands from horizontal, vertical, and pressure actions. These are wonderful for sound design and exploration.","title":"Buchla Thunder"},{"location":"morph/#midi-mapping-xyz-controls","text":"If you need to use a software MIDI learn function, it can often be difficult for the software to choose from the three messages send when you touch the controls. You can use the SenselApp to disable two of the dimensions when learning one. For example, set the CCs for X and Y to \"none\", then \"Send Map to Morph.\" Then press the control when your software is in MIDI learn mode: It is admittedly cumbersome, but worth it. We hope software will soon adapt their ease of use for such innovative controls! We have a step-by-step video of how to map XYZ controls on our YouTube Channel .","title":"MIDI Mapping XYZ Controls"},{"location":"morph/#buchla-thunder-presets","text":"The Buchla Thunder Overlay can store nine different mappings for the layout. These can be any combination of MIDI notes, continuous controllers, keyboard commands, and other messages. By default, presets are different scales. Presets 1-4 use the MIDI Polyphonic Expression (MPE) standard. Presets 6-9 use standard MIDI on channel 1. Preset 5 is a collection of MIDI continuous controller (CC) messages useful for mapping to parameters in your software. The large hexagonal controls are setup to act as 3-way CC controls (vertical, horizontal, and gesture).","title":"Buchla Thunder Presets"},{"location":"morph/#changing-presets","text":"Hold the top middle \"programmer\" bar, then select a preset with buttons labeled 1-9 to load a preset at any time.","title":"Changing Presets"},{"location":"morph/#editing-presets","text":"Use the SenselApp to edit the presets for the Thunder Overlay. Select a preset to edit from the top Preset Selectors. Then, edit the controls on the Thunder by clicking on them, and changing values in the Inspector. If you want to copy and paste a preset to another, simply select all ( CMD or CTL-A ) then copy ( CMD or CTL-C ), then select a Preset at the top. Select all again, then paste ( CMD or CTL-V ). This copies all the settings to the preset.","title":"Editing Presets"},{"location":"morph/#video-editing","text":"","title":"Video Editing"},{"location":"morph/#overview","text":"The Video Editing Overlay is a control surface that sends keyboard and mouse events to enable professional video editing.","title":"Overview"},{"location":"morph/#setup","text":"By default, the Sensel Morph works with Adobe Premiere on Windows. For Premiere on macOS, the macOS Sensel App contains the macOS mapping which can be sent to the Morph. Open the Video overlay in the Sensel App and click the \"Send Map to Morph\" button to send the Map. If you require a specific mapping for your program, you can use the Sensel App to create your own mappings for each program. If you are using Premiere CC, you may need to add a keyboard shortcut in Premiere to change focus to the timeline panel, which has been removed in some versions. By default, the Sensel Morph will send Shift+3 when you click the timeline button. No driver is required for the Video Editing Overlay.","title":"Setup"},{"location":"morph/#controls","text":"","title":"Controls"},{"location":"morph/#jog-wheel-and-navigation-controls","text":"The central Jog Wheel and surrounding navigation controls serve as the primary means of moving along a video timeline. The Jog Wheel moves one frame for each of the eight detents around the knob. You can modify the speed of the jog wheel by pressing the modifier keys. The Shuttle Buttons are pressure sensitive buttons that repeatedly press a key at different pressure levels, allowing you to shuttle quickly along the timeline. When you release the Shuttle Button, a halt key is sent. In Premiere, J or L is sent as you push on the Shuttle Button and K is sent when you release the Shuttle Button. The Video, Audio, and Zoom sliders all send key events as you move along the slider. In Premiere, the sliders adjust the size of the video, audio, and zoom of the timeline elements. The Navigation Slider is a slider that sends scroll events for moving along the timeline. In Premiere, the timeline requires you to click on the timeline before you can scroll. The Navigation Slider is not remappable. The other buttons in the central navigation area all send key events that are used to move through the timeline.","title":"Jog Wheel and Navigation Controls"},{"location":"morph/#jog-wheel-modifiers","text":"The Jog Wheel Modifiers change the function of the Jog Wheel while you hold down the buttons. By default, these modifiers are set to Slip, Slide, and Nudge in Premiere and can be customized using the Sensel App.","title":"Jog Wheel Modifiers"},{"location":"morph/#other-control-buttons","text":"The rest of the control buttons on the Video Editing Overlay send key commands that can be customized using the Sensel App.","title":"Other Control Buttons"},{"location":"morph/#gaming","text":"The Gaming Overlay converts the Morph into a game controller. Based on popular controllers, the Gaming Overlay has all the controls you need to play games. The Gamepad Overlay sends standard Human Interface Device (HID) gamepad events to your computer or smartphone. While most devices support this standard, not every game does. To bridge this gap, emulators can be used to change HID gamepad events to events that the game can understand, such as XBox controller, Playstation Dualshock, or keyboard events.","title":"Gaming"},{"location":"morph/#customizing","text":"If the buttons on the overlay don't perform the right action in the game, use the SenselApp to customize the event values.","title":"Customizing"},{"location":"morph/#emulating","text":"For other cases, you can use software to emulate controllers.","title":"Emulating"},{"location":"morph/#windows","text":"USB Game Controller - comes with Windows 10. Open the USB Game Controller in Windows, select \"Sensel Morph\" and click \"Properties\" to see the available buttons and joysticks. TocaEdit Xbox 360 Controller Emulator - software lets a controller emulate an Xbox 360 controller and customize gamepad events. Download our mapping file. Unzip and put this map and the x360ce.exe executable file in the same directory as the game executable.","title":"Windows"},{"location":"morph/#macos","text":"The emulator Enjoyable maps HID events to joystick for game control compatibility.","title":"macOS"},{"location":"morph/#browsers","text":"Some browsers support gamepad input using the Gamepad API. Gamepad support can be found on the Can I Use website","title":"Browsers"},{"location":"morph/#bluetooth","text":"Gamepad-over-Bluetooth will be supported in future releases.","title":"Bluetooth"},{"location":"morph/#art","text":"The Art overlay is more than just a new stylus. Offering several modes for drawing styles, tools, and methods, the Art overlay takes full advantage of the Morph\u2019s powerful pressure sensors to give the visual artist new and old ways of creating digital drawings. Not only can the Art overlay enable the use of an arbitrary stylus (pen, pencil, chopstick, fingernail), but it also allows use of the \u201cnatural\u201d artist tools: brushes, crayons, chalk, charcoal, and more. What's more, the Morph's 32,000 levels of pressure is vastly more sensitive than any other drawing tablet. With the proper setup, your drawing software will adapt to brush size and orientation of the tool, letting instinct and muscle memory translate into great digital art.","title":"Art"},{"location":"morph/#overview_1","text":"When the Art Overlay is placed on the Morph, it shows up as a USB HID Graphics Tablet. You can press the \u201chand\u201d button to immediately begin navigating your computer\u2019s desktop and file folders. Once you open a graphics application, you can use the other modes to start creating. Any graphics software that accepts input from a stylus will work with the Art Overlay. The top buttons stay out of the way of your drawing hand providing macros (the \u201cdot\u201d buttons) and mode selection. The side buttons and slider add navigation and macro control. These are arranged symmetrically to allow for left or right hand artists. Normally, you would disable the side buttons on the dominant-hand side (to avoid an accidental trigger with a knuckle), and use the off-hand on the slider and buttons.","title":"Overview"},{"location":"morph/#compatibility","text":"USB only. Mac OS 10.11 and below Windows 10","title":"Compatibility"},{"location":"morph/#dont","text":"Don\u2019t use a sharp object as a stylus. Silicon is prone to tearing and slicing, so you can easily damage the overlay with a sharp object. Retract your pens, and think twice about using a mechanical pencil directly on the overlay!","title":"Don\u2019t!"},{"location":"morph/#modes","text":"","title":"Modes"},{"location":"morph/#pen-button-pen-mode-with-paper","text":"Pen mode lets you draw with real ball-point pens and graphite or colored pencils so you can use the medium and tools that feel most natural to you. Drawing on paper makes digital drawing easier to learn, since you can use the familiarity of paper to see where your strokes will be drawn, without the learning curve of most graphics tablets. For paper mode, it is wise to place two sheets of paper over the Art Overlay (a single thin sheet might let sharp pens poke through) and watch as your pen or pencil-strokes appear on the screen. The morph will act like a graphics tablet wherever it recognizes the pointy tip of a pen or pencil, so you can use it to draw in any standard drawing program. This mode features the Sensel Stylus Detection (a.k.a. \u201cpalm reject\u201d) algorithm so you can rest your hand on the Morph while you draw. Paper Mode may work with a variety of drawing implements, as long as they have a relatively small and hard drawing tip.","title":"Pen Button - Pen Mode with Paper"},{"location":"morph/#pen-button-pen-mode-without-paper","text":"This mode transforms the Morph into a drawing tablet. To enable paper-less drawing, check the \"Use without paper\" check-box in the Sensel App, and press the \"Send Map to Morph\" button. You can use any hard stylus-like objects such as the back of a pen or paintbrush, a retracted ball-point pen, or even a fingernail to draw using the Morph. A light touch with the stylus will show a drawing cursor, so you can see where your stroke will begin. A harder force will start drawing the stroke. You can adjust the drawing force using the slider in the Sensel App.","title":"Pen Button - Pen Mode without Paper"},{"location":"morph/#brush-button-paint-mode","text":"Paint mode brings the richness of physical media such as artists' charcoal, or cont\u00e9 crayons, brushes, or finger-smudging to your drawing software. Paint mode lets you map the width, orientation, and pressure of your physical brush to properties of your digital brush. Since fingers and brushes can look much alike, this mode does not support palm rejection, so make sure not to rest your palm on the surface surface. Note that for soft brushes Paint Mode works better with no overlay on your Morph. You can set the default No Overlay mode to Paint Mode in the Sensel App.","title":"Brush Button - Paint Mode"},{"location":"morph/#hand-button-touchpad-mode","text":"Touchpad mode transforms the Morph into a giant touchpad, so you won't need to carry along a mouse to interact with your art software's GUI. You can also scroll around your project using two finger swipes, right-click with a two-finger tap, or click with a firm press of your finger.","title":"Hand Button - Touchpad mode"},{"location":"morph/#buttons","text":"All buttons are re-mappable with the SenselApp. Default behaviors provide popular controls and pan-zoom navigation. Dots - can be customised to your most frequent commands. By default, these are mapped (in order form left to right) to Undo/Redo, Step Back, Step Forward (in Adobe products), Tab, Page Up, and Page Down. Top Slider - controls zoom level in Adobe products by default. You can use the SenselApp to re-map it to change brush size, transparency, or other continuous parameters. Function Buttons - are available for your most common functions. By default these three buttons are are mapped to Shift, Command, and Option in OS X and Shift, Ctrl, and Alt in Windows. Navigation Button - is mapped to the spacebar for easy navigation in Adobe products.","title":"Buttons"},{"location":"morph/#innovator","text":"Your turn to make an Overlay! The Innovator's Overlay works with the API . If you want to use the API with Arduino or other microcontrollers, the Developer's Cable turns the microUSB port on the Morph into a UART connection for microcontrollers. Much more detail about working with the API is in our API documentation . At a higher level than the API, the Overlay Designer works in the SenselApp to let you draw out and define control areas for keyboard, MIDI, game controls, mouse actions, and more. There is also an object for Cycling 74's Max , which provides much of the same data as the API, but in the Max programming environment. It is available through the Max package manager: Similarly, the Pure Data object for accessing raw touch information is available in Deken and the L2Ork Purr-Data version of the open source software.","title":"Innovator"},{"location":"morph/#music-overlay-default-note-assignments","text":"Below are guides showing the default note numbers/names assignments for the MIDI overlays:","title":"Music Overlay Default Note Assignments"},{"location":"morph/#senselapp-software","text":"The SenselApp is fully documented on a separate page","title":"SenselApp Software"},{"location":"morph/#bluetooth-connection","text":"The Sensel Morph is a Bluetooth 4.0 LE wireless device. This means it can function as a wireless controller for your music, drawing, or writing. While the latency can be higher than a USB connection (from the device, 5 ms average for USB, 20 ms average for Bluetooth), it is still very useful and very convenient. This section describes how to pair and un-pair your Morph to a bluetooth connection on a number of operating systems. Once the Morph is paired to your device, it will automatically connect when in range.","title":"Bluetooth connection"},{"location":"morph/#pairing","text":"In general, the process is as follows. Screen images for different operating systems are below. Unplug the Morph from any USB computer connection. Open the bluetooth control panel for your computer. Hold the button down for about one second. The Morph LEDs will flash and a blue LED will turn on after three seconds. Click the \"pair\" button in your computer's control panel. The Morph will be paired to your device.","title":"Pairing"},{"location":"morph/#unpairing","text":"Currently, the Morph can be paired with only one device. If you want to pair the Morph to a different device, you'll need to unpair the connected device and the Morph. Turn off the Morph Unpair or forget the Morph from the previously connected device. Unplug the Morph from any USB computer connection. Open the bluetooth control panel for the new computer. Hold the button down for about one second. The Morph LEDs will flash and a blue LED will turn on after three seconds.","title":"Unpairing"},{"location":"morph/#switch-pairing","text":"Once you have un-paired the Morph from the computer, you will need to enter pairing mode again. While the Morph is on and the blue light is on, double click the power button. The Morph lights should flash again and the blue LED will turn on after three seconds. Click the \"pair\" button in your new computer's control panel. The Morph will be paired to your new device.","title":"Switch Pairing"},{"location":"morph/#os-specific-pairing-guides","text":"Connection guides for macOS, Windows, and Linux follow.","title":"OS Specific Pairing Guides"},{"location":"morph/#macos_1","text":"Open System Preferences and click the Bluetooth icon. Put the Morph into pairing mode . The control panel will look like: Click the \"pair\" button on screen. Your Morph is now paired:","title":"macOS"},{"location":"morph/#windows_1","text":"Open the Settings panel for Bluetooth. The easy to get there is to use the Windows search bar: Windows will find the Morph as ready to pair: Double click the Morph listing and it will connect:","title":"Windows"},{"location":"morph/#ios","text":"Open Settings and select Bluetooth. Put the Morph into pairing mode . Select Morph in the available devices and pair. Once you have paired with the Morph, you will be able to use it with the different Overlays. Here are some sample screen captures of how it shows up in different apps:","title":"iOS"},{"location":"morph/#android","text":"Put the Morph into pairing mode . In Android's Settings app, select Bluetooth, select \"Morph\" from the available devices and pair: Once paired, you can use the Morph. If you are using the QWERTY Overlay, you'll probably want to setup your keyboard so you can easily switch between on-screen and Morph. Use the keyboard icon on the bottom of your screen:","title":"Android"},{"location":"morph/#linux","text":"There are many flavors of Linux. We are documenting one of the most common, Ubuntu 16.04. Open the Settings panel and select the Bluetooth panel In the lower left of the \"Devices\" panel, click the \" + \" button to search and add the Morph. Most Linux relies on the bluez bluetooth stack. You can also use the command line tools to pair. Once you run the bluetoothctl devices command, you'll be in the bluetoothctl interactive shell: > bluetoothctl devices [NEW] Controller 00:15:83:3D:0A:57 sensoruser [default] [NEW] Device 71:11:32:B0:12:A0 Morph-0194 [bluetooth]# pair 71:11:32:B0:12:A0 [bluetooth]# pair 71:11:32:B0:12:A0 [bluetooth]# connect 71:11:32:B0:12:A0 [bluetooth]# trust 71:11:32:B0:12:A0 If you want to disconnect, you can bluetoothctl remove 71:11:32:B0:12:A0","title":"Linux"},{"location":"morph/#update-bluez","text":"If you want to update to the latest bluez software, you can get the link from the bluez site . At the time of writing, the current version is 5.44. This has some support for Bluetooth MIDI: sudo apt-get update sudo apt-get install -y libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev cd ~/Downloads wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.44.tar.xz tar xvf bluez-5.44.tar.xz cd bluez-5.44 ./configure make sudo make install While we can't explicitly support all Linux, this should at least get you started.","title":"Update bluez"},{"location":"morph/#bluetooth-midi-configuration","text":"If your operating system supports MIDI over Bluetooth, you can have a wireless MIDI controller.","title":"Bluetooth MIDI configuration"},{"location":"morph/#macos_2","text":"Open the AudioMIDI application in macOS. Open the MIDI Studio window (cmd-2) and double-click the Bluetooth logo. If you have successfully paired the Morph with Bluetooth , you'll see your device listed here. Press \"connect\" and the Morph will be available to any MIDI applications as an input device.","title":"macOS"},{"location":"morph/#windows_2","text":"Windows 10 Anniversary Edition and after support Bluetooth MIDI, so make sure you have the latest update. This support, however, is limited to applications that use the UWP MIDI API (or the Win32 wrapper for UWP MIDI) (read more details here ). As a result, for common use, you might need a couple additional pieces of software: MIDIberry loopMIDI The loopMIDI application creates virtual (or loopback ) MIDI ports. MIDI berry provides a connection between the Morph's Bluetooth MIDI ports and the virtual MIDI ports. In your music application, you connect to the virtual port created in loopMIDI. Screenshot examples below show loopMIDI with the virtual port, MIDIberry with the connection made, and a couple of applications using the vitrual port to get MIDI input from the Morph. virtual port \"MorphMIDI Port\" created in loopMIDI (type in the field, then click \"+\") connection between Morph bluetooth and \"MorphMIDI Port\" made in MIDIberry (just tap on an input port and an output port to connect them) virtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of Bitwig Studio virtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of FL Studio","title":"Windows"},{"location":"morph/#ios_1","text":"iOS version 8 and above support Bluetooth MIDI. These devices have Bluetooth LE support: iPhone 4s + iPad3 + iPad Mini + Once the Morph is paired with the iOS device, it's available as a MIDI device to most iOS MIDI-capable apps. You'll need to go into an app's preferences or setup panel to enable and configure MIDI control. In some cases, you may need the midimittr app to create a connection with the Morph which will expose the Morph's MIDI input to other apps.","title":"iOS"},{"location":"morph/#android_1","text":"Android version Marshmallow (6) and above support BLE MIDI. However, some devices support this connection type, and some don't. The best way to find out is to pair your device with the Morph via Bluetooth, then use the free MIDI BLE Connect app from the Google Play store. Open it after paring the Morph to your Android device. If there is a connection to be found, MIDI BLE Connect will scan and find it.","title":"Android"},{"location":"morph/#linux_1","text":"BLE MIDI has some support in the latest bluez stack. This site has a detailed explanation of setting up MIDI Bluetooth for Ubuntu 16.04. You are welcome to experiment! Instructions for updating to the most recently release of bluez are above .","title":"Linux"},{"location":"morph/#use-it-troubleshooting","text":"As the name implies, there are a lot of different ways to use the high-resolution sensor that is the Morph. What follows in this section are the nuts and bolts on getting your morph working with your device and making use of the different Overlays in different softwares.","title":"Use it! (Troubleshooting)"},{"location":"morph/#test-it","text":"Because the Morph is capable of so many different modes and protocols, you may need some reassurance and ways of testing. Here's some tools and suggestions for some of the different modes.","title":"Test it!"},{"location":"morph/#midi","text":"If you are unsure that your Morph is properly connected and providing MIDI input to your computer, you can test with some simple programs. If you don't know what MIDI is, it's a simple serial protocol that electronic music hardware and software uses to interoperate. Learn more at wikipedia .","title":"MIDI"},{"location":"morph/#macos_3","text":"MIDI Monitor","title":"macOS"},{"location":"morph/#windows_3","text":"MIDIberry Bluetooth MIDI is available on Windows 10 Anniversary Edition, so make sure your version of Windows 10 is recently updated. It is limited to apps that use the native Windows MIDI implementation, so it probably won't show up as a MIDI input in most software. MIDIberry provides native MIDI hooks to Windows 10, so it can connect to the USB MIDI and the Bluetooth MIDI ports created by the Morph. MIDIberry provides a monitor function that makes it easy to confirm MIDI data input from the Morph.","title":"Windows"},{"location":"morph/#ios_2","text":"MIDI Wrench","title":"iOS"},{"location":"morph/#android_2","text":"USB MIDI Monitor","title":"Android"},{"location":"morph/#linux_2","text":"amidi others If you want a GUI monitor, you can find something in the \"others\" link above. The easiest way to test on Linux is to use ALSA's amidi in a terminal. Plug in the Morph to your computer's USB port, then list the MIDI devices with: amidi -l You'll get something like Dir Device Name IO hw:1,0,0 Sensel Morph MIDI 1 Armed with the portname, you can now start dumping MIDI input to the terminal: amidi -d -p hw:1,0,0","title":"Linux"},{"location":"morph/#qwerty_1","text":"Open text editor or word processing program. Try typing. Use command and option keys. Everything work? If not, you'll need to either check your connection, or use the Sensel App to make sure your QWERTY Overlay is configured for your OS.","title":"QWERTY"},{"location":"morph/#software-setup","text":"Documentation for setting up the Sensel Morph with several popular music and art software titles is on a separate page.","title":"Software Setup"},{"location":"morph/#api","text":"There's a software API for Python, Processing, and C/C++. Find out more at our github .","title":"API"},{"location":"morph_software/","text":"Music Software Guides For the most part, when the Morph is used as a MIDI device, it shows up like any other MIDI keyboard or controller. However, there are some details worth documenting, since, with default mappings, each Overlay sends on a different channel. Before you proceed make sure you have a wired or wireless connection between your device and the Morph. The below screenshots show the Morph used as a Bluetooth MIDI device, but the general instructions do not change for the wired case or for different operating systems. Ableton Live Open the Preferences window in Ableton Live and select the MIDI tab. If you just want to play the keyboard and drums, turn \"Track\" on for the input port. If you want to use controls and buttons for parameters and switches in Live, turn \"Remote\" on for the input port. At this time, there is no MIDI control of the Morph, so there is no need to activate \"Track\" or \"Remote\" for output. In Ableton Live, you can filter MIDI input on tracks according to Channel. You may want to do this to ensure different Overlays are dedicated to different tracks. Ableton Live 11 Control Surface MPE in Ableton Live 11 We set up a comprehensive site that shows how MPE works in Ableton Live at mpe.design Source Code If you need the source code, or want to install manually, our github repo has all the necessary files. If you are working with Ableton Live 11, you will need to install the scripts manually from the repository. Download, Install, & Setup The script will work with Ableton Live version 11 only. You can download it from the Sensel store : The advantage of downloading from the store is that you will be notified of any updates. If you need a direct download: Mac Windows Run the installer for Mac or Windows. This will install: Example Live set with sounds and instruments: Mac: ~/Documents/Sensel Morph/Ableton Live 11 Script Project/Sensel Live Remote Script Demo.alp Windows: \\Users[username]\\Documents\\Sensel Morph\\Ableton Live 11 Script Project\\Project\\Sensel Live Remote Script Demo.alp Overlay maps for SenselApp: Mac: ~/Documents/Sensel Morph/Ableton Live 11 Overlay Guides Windows: \\Users[username]\\Documents\\Sensel Morph\\Ableton Live 11 Overlay Guides Remote Scripts for Live: Mac: ~/Music/Ableton/User Library/Remote Scripts/Sensel_Morph_MPE Windows: \\Users[username]\\Documents\\Ableton\\User Library/Remote Scripts/Sensel_Morph_MPE The installer has to assume that the User Library is in these locations. If you have your User Library installed elsewhere, you will have to move the installed script folder \"Sensel_Morph_MPE/\" and its contents to your \"User Libarary/Remote Scripts\" folder. If you are unsure where your User Library is located you can right click on \"User Library\" in the Live Browser and it will take you to the folder in your Finder (Mac) or Explorer (Windows): Open the Preferences window in Ableton Live and select the MIDI tab. Select the \"Sensel Morph MPE\" as your Control Script. Select the Morph as the input and output device for the Control Surface. You will also want to enable the Morph for Track, Remote, and MPE input: Flash The Morph with Maps Use the guide below to program your Morph with the Overlay maps for Live 11. How to Use It We've re-mapped many of the top buttons on the Music Overlays to better match specific functions in Ableton Live. We've also added a \"Shift\" button - hold it down to access additional functions for the knobs, pads, and buttons. Top button functions: select (and auto-arm) track to left of current track select (and auto-arm) track to right of current track transpose piano keys down octave (piano overlay only) transpose piano keys up octave (piano overlay only) use pressure to control Send A dial on current track use pressure to control Send B dial on current track start playback stop playback enable overdub to record into MIDI clip shift - like \"shift\" on a typing keyboard - hold down to enable shift functions Top button shifted functions: move session view box left move session view box right -- -- release after pressing shift to set Send A value release after pressing shift to set Send B value -- stop clip on current track record track Additional shift functions launch clips transpose drum rack transpose small keys on music production overlay user-assign knobs and sliders on music production overlay Use the following illustrations as references for the functions in the script. The Innovator's overlay can be used, with the bonus feature that you can create controls that automatically map to macros and other features. It has many of the same capabilities of the Music Production Overlay, if you use the same MIDI assignments. See the graphic above for an example on how this works. The .senselmap file that you can load onto your Morph is included in the installer and in the github repo. Source code for this script is available on our GitHub site Using Different Overlays Unlike the Live 10 and Bitwig scripts, it is not yet possible to have individual overlays dedicated to a specific track or instrument in your Live set. MPE in Live 11 The Sensel Morph is setup to use MIDI Polyphonic Expression (MPE) for all the Music Overlays. This means you can use plugins designed for use with MPE, such as Audio Damage Quanta, Madrona Labs Aalto, Arturia Pigments, UVI Falcon, and many more. Ableton has some instruments that support MPE: Sampler, Simpler, and Wavetable. You can learn more at mpe.design . Ableton Live 10 Control Surface Using our control surface script, the Morph and the music Overlays can provide automatic effect mappings and remote control over features in Live 10 to extend your productivity. Not only can you play instruments, but you can control effects on different tracks, use pressure to add send effects, launch clips, overdub, and more. Video Tutorial A complete video tutorial that covers all the below is available on our YouTube channel . Source Code If you need the source code, or want to install manually, our github repo has all the necessary files. If you are working with Ableton Live 11, you will need to install the scripts manually from the repository. Download, Install, & Setup The script will work with Ableton Live version 10 only. Live 9 is not supported. This script will not work with Live 11. You can download it from the Sensel store : The advantage of downloading from the store is that you will be notified of any updates. If you need a direct download: Mac Windows Run the installer for Mac or Windows. This will install: Example Live set with sounds and instruments: Mac: ~/Documents/Sensel Morph/Ableton Live Script Project/Sensel Live Remote Script Demo.alp Windows: {userdocs}\\Sensel Morph\\Ableton Live Script Project\\Project\\Sensel Live Remote Script Demo.alp Overlay maps for SenselApp: Mac: ~/Documents/Sensel Morph/Overlay Maps/ Windows: {userdocs}\\Sensel Morph\\Overlay Maps Remote Scripts for Live: Windows: C:\\ProgramData\\Ableton\\Live 10\\Resources\\MIDI Remote Scripts Mac: Applications/Live 10/Contents/App-Resources/MIDI Remote Scripts Notes: * if you want to verify the install for Mac, you can right click on the Live 10 application icon and \"Show Package Contents\" and navigate to the \"MIDI Remote Scripts\" folder.) * On Windows, make sure Ableton is installed in C:\\ProgramData\\Ableton. If you have it installed in a non-default location such as C:\\Program Files\\Ableton, the installer will fail. Open the Preferences window in Ableton Live and select the MIDI tab. Select the Sensel Morph as your Control Script. Select the Morph as the input and output device for the Control Surface. You will also want to enable the Morph for Track and Remote input. Flash The Morph with Maps Use the guide below to program your Morph with the Overlay maps for Ableton Live 10. How to Use It We've re-mapped many of the top buttons on the Music Overlays to better match specific functions in Ableton Live. We've also added a \"Shift\" button - hold it down to access additional functions for the knobs, pads, and buttons. Top button functions: select (and auto-arm) track to left of current track select (and auto-arm) track to right of current track transpose piano keys down octave (piano overlay only) transpose piano keys up octave (piano overlay only) use pressure to control Send A dial on current track use pressure to control Send B dial on current track start playback stop playback enable overdub to record into MIDI clip shift - like \"shift\" on a typing keyboard - hold down to enable shift functions Top button shifted functions: move session view box left move session view box right -- -- release after pressing shift to set Send A value release after pressing shift to set Send B value -- stop clip on current track record track Additional shift functions launch clips transpose drum rack transpose small keys on music production overlay user-assign knobs and sliders on music production overlay Use the following illustrations as references for the functions in the script. Source code for this script is available on our GitHub site Using Different Overlays You can dedicate an Overlay to a particular track or tracks in Live by restricting the channel. Each overlay sends its MIDI data on a different MIDI channel, so you can simply select the appropriate channel for a track: Bitwig Studio Open the Preferences window in Bitwig Studio and select the Settings, then Controllers tabs. Select \"Generic\" (though the Morph is anything but generic!), then choose either \"MIDI Keyboard\" or \"Keyboard + 8 Device Knobs\". The MIDI Keyboard option makes it easy to play notes in any of the instruments. If you want to map the extra CC controls of the Music Production Overlay to different parameters in Bitwig, you can use Bitwig's MIDI learn feature in the Mappings Browser Panel. The Keyboard + 8 Device Knobs will make the Music Production Overlay nicer to work with. You can use the Sensel App to remap the knobs to CC values 20-27, and Bitwig will automatically map the eight knobs to the currently selected Device Macros. In this setup, both options have been added as Controllers, though only one is active. Note that it is not possible to filter MIDI Channels in Bitwig tracks. If you want to do more advanced filtering and controls, you can use Bitwig's Controller Scripting API and create a control script. Bitwig Studio Control Surface Using our control surface script, the Morph and the music Overlays can provide automatic effect mappings and remote control over features in Bitwig Studio to extend your productivity. Not only can you play instruments, but you can control effects on different tracks, use pressure to add send effects, launch clips, overdub, and more. This script is fully compatible with MIDI Polyphonic Expression (MPE) and regular MIDI, making it easy to integrate expressive play into your Bitwig compositions. Video Tutorial A complete video tutorial that covers all the below is available on our YouTube channel . Download, Install, & Setup The script will work with Bitwig Studio 2 and above, including Bitwig Studio 8-Track. The scripts are included in the Bitwig Studio distribution, and there is no need to install them. If there is an update, it can be found on the github site . You can get the maps and scripts from the Sensel web store . You'll need to checkout the digital download, which is available for free from the store: The advantage of downloading from the store is that you will be notified of any updates. If you need a direct download: Mac Windows \u201c Run the installer for Mac or Windows. This will install: Example Bitwig Studio set with sounds and instruments: Mac: ~/Documents/Sensel Morph/Bitwig Project/Sensel Bitwig Remote Script Demo.bw Windows: {userdocs}\\Sensel Morph\\Bitwig Project\\Project\\SSensel Bitwig Remote Script Demo.bw Overlay maps for SenselApp: Mac: ~/Documents/Sensel Morph/Overlay Maps/ Windows: {userdocs}\\Sensel Morph\\Overlay Maps Open the Preferences window in Bitwig Studio and select the Controllers panel. Select the Sensel Morph as your Control Script. The Morph will be automatically detected as the input and output device for the Control Surface. Flash The Morph with Maps Use the guide below to program your Morph with the Overlay maps for Bitwig. How to Use It We've re-mapped many of the top buttons on the Music Overlays to better match specific functions in Bitwig Studio. We've also added a \"Shift\" button - hold it down to access additional functions for the knobs, pads, and buttons. Top button functions: select (and auto-arm) track to left of current track select (and auto-arm) track to right of current track transpose piano keys down octave (piano overlay only) transpose piano keys up octave (piano overlay only) use pressure to control Send A dial on current track use pressure to control Send B dial on current track start playback stop playback enable overdub to record into MIDI clip shift - like \"shift\" on a typing keyboard - hold down to enable shift functions Top button shifted functions: move session view box left move session view box right -- -- release after pressing shift to set Send A value release after pressing shift to set Send B value -- stop clip on current track record track Additional shift functions launch clips transpose drum machine transpose small keys on music production overlay user-assign knobs and sliders on music production overlay Use the following illustrations as references for the functions in the script. Source code for this script is available on our GitHub site Using Different Overlays The Sensel Bitwig Studio controller script supports all the music overlays for the Morph: Piano, Drum Pad, Music Production, and the Buchla Thunder. It is possible to dedicate a particular overlay to a subset of the tracks in your project. This means you can swap overlays on the Morph, and have each overlay dedicated to a particular track or instrument. Of course, each track will need to be armed for recording. A complete guide is on our YouTube channel , or you can read below. First, you'll need to enable the exclusive port for the overlays you want to use for a dedicated track. This is done in the I/O panel , which is visible when you click the arrows in the bottom right of the Bitwig Studio window: Then, you can select the overlay from the track inputs to restrict that track to only listen to the selected overlay: IMPORTANT: If you do not have an exclusive port enabled for an overlay, and you assign a track that exclusive port, you will get no input from your Morph on that track. In other words, if you assign a track an overlay-specific port, make sure it is enabled in the Studio I/O panel! Pitch Bend Range Unfortunately, there is not a setting for Pitch Bend range for Bitwig's internal synths. If you want to adjust the bend range from the per-note bends on the Morph, you can use the I/O panel for the MPE Morph script. This is particularly important when using the \"Jump\" bend mode for MPE pitch rounding. For MPE plugins, you can often do this in the plugin itself. Control Surface Script: Flash The .senselmap Files The music Overlays will need to flashed with the Overlay maps provided by the installer. The mappings for Ableton Live 11 MPE and Bitwig Studio are the same, so if you use both programs, you can easily move between the programs without reprogramming your Morph. You can use the Ableton Live 11 senselmap files for the Ableton Live 10 script, however, you will not be able to separate the overlays by channel, since the MPE mappings use all MIDI channels on all the overlays. How to Open the SenselApp (available on our downloads page ) and import the maps from your Documents/Sensel Morph directory: For each Buchla Thunder, Drum Pad, Music Production, and Piano overlay map, select each map on the left hand panel of the SenselApp and press the top-right \"Send Map To Morph\" button. FL Studio FL Studio works with both Windows and Mac operating systems. Open the MIDI Settings window from the Options menu. Select the Morph in the input panel. Click \"enable\" below the Input panel. Select a controller type \"(generic controller)\" from the menu. This enables basic MIDI input for the Morph. You can get more info on using MIDI in FL Studio 12 from their documentation. Cycling 74 Max Max will use any active MIDI device as an input. How you program your patch will affect what happens. The above screenshot illustrates the MIDI input selection menu that appears from double clicking on the MIDI input objects (midiin, ctlin, notein, pgmin, etc.). [sensel] object in Max You can integrate most of the API using objects in Max. This gives you a full dictionary of information about every contact on the Morph including ID, location, pressure, size, and more. The jit.sensel object provides a bitmap force image that you can use in the Jitter matrix processors or as a video input. It's easily installed via the Max package manager. Go to the File menu and select \"Show Package Manager.\" Search the remote packages for \"sensel\" to find the Sensel installer. Click install and read the helpfile. Apple Logic Pro X, Garage Band, and Main Stage With Apple music applications, \"it just works\" is the general idea. If it shows up in AudioMIDI Setup, it will provide input to recording-armed tracks to play software synths, samplers, and drums. If you want to add more controls for effects and synths, you can use Logic's \"Learn Controls\" features. Logic Tutorial Video We have a live-stream style video that goes into detail about setting up the Morph to get the most of it in Logic. This covers the topics of mapping knobs to instrument parameters (like filters) setting up mulitple MIDI map modes setting up the music overlays for playing instruments in Logic setting up Logic to commit overlays to specific tracks get the most out of MPE. Watch this video on our YouTube Channel . The description has a linked table of contents so you can jump to the topics you are interested in. Transport Controls The default messages for the play, stop, and record buttons on the Morph overlays use MIDI Machine Control (MMC). Logic does not respond to this by default. To make it work open the preferences panel, and click on the MIDI tab: and click on \"MIDI Sync Project Settings\" in the lower right. In the new window, make sure the \"Listen to MIDI Machine Control\" is on. Now your Transport buttons on the Morph will function. Oddities Logic has some quirks that might be frustrating. Here's some workarounds. These are covered in the tutorial video mentioned above. MIDI type You may need to edit some values in the Expert View, since sometimes Logic will guess incorrectly about the format of incoming data. The procedure is similar for Main Stage. CC Data In some cases, you may want to exclude Control Change data from the after-pressure on the Music Production pads. For example, some synths may respond in undesirable ways to the CC data from the Pads. This is particularly noticible on some synths such as Ultrabeat and the Electric Pianos, which automatically respond to CC 43 (Expression). If you want Logic to ignore the CC data, go to the File->Project Settings->MIDI window and select the Input Filter tab. Here, you can select \"Control Changes\" to filter out any CC data from the Morph to Logic. This is a somewhat temporary fix, since this will keep the \"dials\" and sliders on the Music Production Overlay from working. Future firmware updates for the Morph will address this problem more elegantly. Garage Band offers no remote control of parameters from MIDI devices. You can only play instruments with note and pitchbend input. Steinberg Cubase Cubase works well with the Morph. You'll want to load the MIDI Polyphonic Expression (MPE) maps for your Overlays, since Cubase works well with MPE. Open your Studio Setup panel from the Studio menu. Make sure the Morph is selected in the MIDI settings area. If you are using a plugin instrument, you'll want to make sure it is set to listen to MPE. For example, Audio Damage Quanta has a toggle to turn this on: For another example, Madrona Labs Aalto has a menu to set this: In your track settings Inspector, you'll want to make sure you have \"Sensel Morph (note exp)\" set as the input, and select \"Any\" as the MIDI Channel: If you are using Steinberg's built in instruments such as Retrologue, you'll want to make sure the Note Expression data is passed to the Instrument. Make sure the Inspector is showing the Note Expression panel which will look like: In this panel, you can select the basic expressions for X, Y, and Z that will pass through to the instrument: In the instrument, you can use the Modulation Matrix to select a note expression (N7 for Y directions, N8 for pressure) and use it to modulate a parameter in the synthesizer Video Tutorial This is all detailed in a Live Stream tutorial we did. Cubase section starts here . Presonus StudioOne 2 Open the Presonus preferences panel and select the External Devices tab. Press the \"Add...\" button to add a new MIDI controller. In the resulting Edit Device panel, you can add \"Sensel\" to the Manufacturer field and \"Morph\" to \"Device Name\" field. Press the All button to receive MIDI on all channels. Select the Morph in the \"Receive From\" menu (there is no need to select the Morph in the Send To menu, since there is currently no MIDI control of the Morph). Engage \"Split Channels\" if you would like to create a separate Instrument Track input for each MIDI channel from the Keyboard. You will probably want to enable Split Channels as pictured, since each Overlay sends on a different MIDI channel. You can choose to use this Keyboard as your \"Default Instrument Input\" by checking the appropriate box. If you are using only one Keyboard with Studio One, you should check this box. Propellerheads Reason Reason has several ways of using a MIDI keyboard or controller. The most basic is to just add the Morph as a keyboard. Open Reason's Preferences panel, and select the Control Surfaces tab. Click the Add button, and select the \" \" from the Manufacturer menu and \"MIDI Control Keyboard\" from the Model menu. You can type \"Sensel Morph\" into the Name field. Finally, select the Morph from the MIDI Input menu. After you have set that up, you can make a more sophisticated setup to filter channels Select the \"Sync\" tab and add the Sensel Morph to at least one of the External Control Buses, as pictured above. Now you can use the Hardware device in the Reason Rack and click the ADVANCED MIDI button to expose the selectors. It is here that you can map MIDI channels (and thereby different Overlays) from the Morph to different devices in your rack. Art Software Setups The basic strategy behind setting up your software to work with the Morph is to understand what parameters come from the Morph and how to apply them to brush properties. In general, there are three dimensions that come from a USB stylus tablet: Pressure , Tilt , and Rotation (or Bearing). In Morph's unique Brush Mode, you want your software brush to adapt to the size of the brush or stylus you are applying to the Morph. This is reported on the \"Tilt\" channel, since traditional tablets use tilt to affect brush size. Pressure is best mapped to the brush opacity to emulate paint or ink density. Rotation is ideally mapped to brush angle when using software brushes that are non-round. Using the Stylus Mode, you can map Pressure and Rotation to your brushes, however, there is no Tilt reported from the Morph. The Sensel Morph currently supports Adobe Photoshop CC, Adobe Illustrator CC, Corel Painter 2017, recent versions of Autodesk Sketchbook, and other art programs if they support Windows Ink or the Sensel macOS Driver. Corel Painter Corel Painter offers a vast array of options for brushes, allowing for models of oils, gels, inks, charcoal, airbrush, and more. These settings are created in the Brushes Control Panel, which has several sub-tabs for the various properties. The first thing you'll need to do is make sure you have the correct tablet type selected in Corel's preferences. Go to the Edit menu and select Preferences , then select the Tablet panel. Make sure \"RTS-compatible Device\" is selected: Now you are ready to modify your brushes. Open the Brush control panel from the Window->Brushes Control Panels->General menu, or use CTL-b . As an example, you can quickly set up a brush for Morph's brush mode using: * Dab type: flat * Opacity Expression to Pressure * Size Expression to Tilt * Angle Expression to Bearing You may also want to refine the \"feel\" of your brush with the Brush Tracking curves. Go to Edit->Preferences->Brush Tracking and follow the instructions to make a brush feel natural. Adobe Photoshop Adobe Photoshop of course goes beyond photo editing and provides several options for modelling different art media - airbrush, oils, watercolors, and more. Select the Brush tool from Photoshop's tools pallete: Now you can open the Brush window from the Windows menu and use the Shape Dynamics and Transfer brush properties to apply the Morph's Pressure and Rotation to the brush: Depending on the desired effect, pressure can be applied to Opacity or Flow. Adobe Illustrator Adobe Illustrator Adobe Illustrator is a fully featured illustration program, with several different brush options and types. Depending on the chosen brush, there are different places to set up the Morph's Pressure, Rotation, and Tilt data. Below are screen caps of several places you can setup your Morph to interact directly with Brush properties. As you'll see, these options are generally found by double-clicking on the brush in the Brush Window.: First, be aware that there are a couple different types of brush in Illustrator: the Paintbrush and the Blob Brush. Brush selection happens in the Brush Library and Brushes windows. If the Paintbrush is selected (not Blob Brush), you can access the Brush Options from the Brush window hamburger menu: Adobe Illustrator Double clicking on the top brushes in the brush window opens up the Caligraphic Options: Double clicking on an Art Brush in the brush window opens up Art Brush Options: If the Blob Brush is selected in Illustrator's tools, double clicking on that will pull up some more options Sketchbook Pro For the most part, Sketchbook only responds to the Pressure and Tilt parameters from a tablet. You can create a new brush using the Circle menu in the Brush Library: Then, double-click on the new brush (or an existing one), and modify its properties. In this example, the minimum and maximum values for size, opacity, and flow have been modified to respond to pressure. Set min and max to the same value to have the parameter unaffected by pressure. Some brushes will respond to tilt, which the Morph uses to send stylus size in Brush Mode. You can use this parameter in some brushes to interesting effect:","title":"Software Setups"},{"location":"morph_software/#music-software-guides","text":"For the most part, when the Morph is used as a MIDI device, it shows up like any other MIDI keyboard or controller. However, there are some details worth documenting, since, with default mappings, each Overlay sends on a different channel. Before you proceed make sure you have a wired or wireless connection between your device and the Morph. The below screenshots show the Morph used as a Bluetooth MIDI device, but the general instructions do not change for the wired case or for different operating systems.","title":"Music Software Guides"},{"location":"morph_software/#ableton-live","text":"Open the Preferences window in Ableton Live and select the MIDI tab. If you just want to play the keyboard and drums, turn \"Track\" on for the input port. If you want to use controls and buttons for parameters and switches in Live, turn \"Remote\" on for the input port. At this time, there is no MIDI control of the Morph, so there is no need to activate \"Track\" or \"Remote\" for output. In Ableton Live, you can filter MIDI input on tracks according to Channel. You may want to do this to ensure different Overlays are dedicated to different tracks.","title":"Ableton Live"},{"location":"morph_software/#ableton-live-11-control-surface","text":"","title":"Ableton Live 11 Control Surface"},{"location":"morph_software/#mpe-in-ableton-live-11","text":"We set up a comprehensive site that shows how MPE works in Ableton Live at mpe.design","title":"MPE in Ableton Live 11"},{"location":"morph_software/#source-code","text":"If you need the source code, or want to install manually, our github repo has all the necessary files. If you are working with Ableton Live 11, you will need to install the scripts manually from the repository.","title":"Source Code"},{"location":"morph_software/#download-install-setup","text":"The script will work with Ableton Live version 11 only. You can download it from the Sensel store : The advantage of downloading from the store is that you will be notified of any updates. If you need a direct download: Mac Windows Run the installer for Mac or Windows. This will install: Example Live set with sounds and instruments: Mac: ~/Documents/Sensel Morph/Ableton Live 11 Script Project/Sensel Live Remote Script Demo.alp Windows: \\Users[username]\\Documents\\Sensel Morph\\Ableton Live 11 Script Project\\Project\\Sensel Live Remote Script Demo.alp Overlay maps for SenselApp: Mac: ~/Documents/Sensel Morph/Ableton Live 11 Overlay Guides Windows: \\Users[username]\\Documents\\Sensel Morph\\Ableton Live 11 Overlay Guides Remote Scripts for Live: Mac: ~/Music/Ableton/User Library/Remote Scripts/Sensel_Morph_MPE Windows: \\Users[username]\\Documents\\Ableton\\User Library/Remote Scripts/Sensel_Morph_MPE The installer has to assume that the User Library is in these locations. If you have your User Library installed elsewhere, you will have to move the installed script folder \"Sensel_Morph_MPE/\" and its contents to your \"User Libarary/Remote Scripts\" folder. If you are unsure where your User Library is located you can right click on \"User Library\" in the Live Browser and it will take you to the folder in your Finder (Mac) or Explorer (Windows): Open the Preferences window in Ableton Live and select the MIDI tab. Select the \"Sensel Morph MPE\" as your Control Script. Select the Morph as the input and output device for the Control Surface. You will also want to enable the Morph for Track, Remote, and MPE input:","title":"Download, Install, &amp; Setup"},{"location":"morph_software/#flash-the-morph-with-maps","text":"Use the guide below to program your Morph with the Overlay maps for Live 11.","title":"Flash The Morph with Maps"},{"location":"morph_software/#how-to-use-it","text":"We've re-mapped many of the top buttons on the Music Overlays to better match specific functions in Ableton Live. We've also added a \"Shift\" button - hold it down to access additional functions for the knobs, pads, and buttons. Top button functions: select (and auto-arm) track to left of current track select (and auto-arm) track to right of current track transpose piano keys down octave (piano overlay only) transpose piano keys up octave (piano overlay only) use pressure to control Send A dial on current track use pressure to control Send B dial on current track start playback stop playback enable overdub to record into MIDI clip shift - like \"shift\" on a typing keyboard - hold down to enable shift functions Top button shifted functions: move session view box left move session view box right -- -- release after pressing shift to set Send A value release after pressing shift to set Send B value -- stop clip on current track record track Additional shift functions launch clips transpose drum rack transpose small keys on music production overlay user-assign knobs and sliders on music production overlay Use the following illustrations as references for the functions in the script. The Innovator's overlay can be used, with the bonus feature that you can create controls that automatically map to macros and other features. It has many of the same capabilities of the Music Production Overlay, if you use the same MIDI assignments. See the graphic above for an example on how this works. The .senselmap file that you can load onto your Morph is included in the installer and in the github repo. Source code for this script is available on our GitHub site","title":"How to Use It"},{"location":"morph_software/#using-different-overlays","text":"Unlike the Live 10 and Bitwig scripts, it is not yet possible to have individual overlays dedicated to a specific track or instrument in your Live set.","title":"Using Different Overlays"},{"location":"morph_software/#mpe-in-live-11","text":"The Sensel Morph is setup to use MIDI Polyphonic Expression (MPE) for all the Music Overlays. This means you can use plugins designed for use with MPE, such as Audio Damage Quanta, Madrona Labs Aalto, Arturia Pigments, UVI Falcon, and many more. Ableton has some instruments that support MPE: Sampler, Simpler, and Wavetable. You can learn more at mpe.design .","title":"MPE in Live 11"},{"location":"morph_software/#ableton-live-10-control-surface","text":"Using our control surface script, the Morph and the music Overlays can provide automatic effect mappings and remote control over features in Live 10 to extend your productivity. Not only can you play instruments, but you can control effects on different tracks, use pressure to add send effects, launch clips, overdub, and more.","title":"Ableton Live 10 Control Surface"},{"location":"morph_software/#video-tutorial","text":"A complete video tutorial that covers all the below is available on our YouTube channel .","title":"Video Tutorial"},{"location":"morph_software/#source-code_1","text":"If you need the source code, or want to install manually, our github repo has all the necessary files. If you are working with Ableton Live 11, you will need to install the scripts manually from the repository.","title":"Source Code"},{"location":"morph_software/#download-install-setup_1","text":"The script will work with Ableton Live version 10 only. Live 9 is not supported. This script will not work with Live 11. You can download it from the Sensel store : The advantage of downloading from the store is that you will be notified of any updates. If you need a direct download: Mac Windows Run the installer for Mac or Windows. This will install: Example Live set with sounds and instruments: Mac: ~/Documents/Sensel Morph/Ableton Live Script Project/Sensel Live Remote Script Demo.alp Windows: {userdocs}\\Sensel Morph\\Ableton Live Script Project\\Project\\Sensel Live Remote Script Demo.alp Overlay maps for SenselApp: Mac: ~/Documents/Sensel Morph/Overlay Maps/ Windows: {userdocs}\\Sensel Morph\\Overlay Maps Remote Scripts for Live: Windows: C:\\ProgramData\\Ableton\\Live 10\\Resources\\MIDI Remote Scripts Mac: Applications/Live 10/Contents/App-Resources/MIDI Remote Scripts Notes: * if you want to verify the install for Mac, you can right click on the Live 10 application icon and \"Show Package Contents\" and navigate to the \"MIDI Remote Scripts\" folder.) * On Windows, make sure Ableton is installed in C:\\ProgramData\\Ableton. If you have it installed in a non-default location such as C:\\Program Files\\Ableton, the installer will fail. Open the Preferences window in Ableton Live and select the MIDI tab. Select the Sensel Morph as your Control Script. Select the Morph as the input and output device for the Control Surface. You will also want to enable the Morph for Track and Remote input.","title":"Download, Install, &amp; Setup"},{"location":"morph_software/#flash-the-morph-with-maps_1","text":"Use the guide below to program your Morph with the Overlay maps for Ableton Live 10.","title":"Flash The Morph with Maps"},{"location":"morph_software/#how-to-use-it_1","text":"We've re-mapped many of the top buttons on the Music Overlays to better match specific functions in Ableton Live. We've also added a \"Shift\" button - hold it down to access additional functions for the knobs, pads, and buttons. Top button functions: select (and auto-arm) track to left of current track select (and auto-arm) track to right of current track transpose piano keys down octave (piano overlay only) transpose piano keys up octave (piano overlay only) use pressure to control Send A dial on current track use pressure to control Send B dial on current track start playback stop playback enable overdub to record into MIDI clip shift - like \"shift\" on a typing keyboard - hold down to enable shift functions Top button shifted functions: move session view box left move session view box right -- -- release after pressing shift to set Send A value release after pressing shift to set Send B value -- stop clip on current track record track Additional shift functions launch clips transpose drum rack transpose small keys on music production overlay user-assign knobs and sliders on music production overlay Use the following illustrations as references for the functions in the script. Source code for this script is available on our GitHub site","title":"How to Use It"},{"location":"morph_software/#using-different-overlays_1","text":"You can dedicate an Overlay to a particular track or tracks in Live by restricting the channel. Each overlay sends its MIDI data on a different MIDI channel, so you can simply select the appropriate channel for a track:","title":"Using Different Overlays"},{"location":"morph_software/#bitwig-studio","text":"Open the Preferences window in Bitwig Studio and select the Settings, then Controllers tabs. Select \"Generic\" (though the Morph is anything but generic!), then choose either \"MIDI Keyboard\" or \"Keyboard + 8 Device Knobs\". The MIDI Keyboard option makes it easy to play notes in any of the instruments. If you want to map the extra CC controls of the Music Production Overlay to different parameters in Bitwig, you can use Bitwig's MIDI learn feature in the Mappings Browser Panel. The Keyboard + 8 Device Knobs will make the Music Production Overlay nicer to work with. You can use the Sensel App to remap the knobs to CC values 20-27, and Bitwig will automatically map the eight knobs to the currently selected Device Macros. In this setup, both options have been added as Controllers, though only one is active. Note that it is not possible to filter MIDI Channels in Bitwig tracks. If you want to do more advanced filtering and controls, you can use Bitwig's Controller Scripting API and create a control script.","title":"Bitwig Studio"},{"location":"morph_software/#bitwig-studio-control-surface","text":"Using our control surface script, the Morph and the music Overlays can provide automatic effect mappings and remote control over features in Bitwig Studio to extend your productivity. Not only can you play instruments, but you can control effects on different tracks, use pressure to add send effects, launch clips, overdub, and more. This script is fully compatible with MIDI Polyphonic Expression (MPE) and regular MIDI, making it easy to integrate expressive play into your Bitwig compositions.","title":"Bitwig Studio Control Surface"},{"location":"morph_software/#video-tutorial_1","text":"A complete video tutorial that covers all the below is available on our YouTube channel .","title":"Video Tutorial"},{"location":"morph_software/#download-install-setup_2","text":"The script will work with Bitwig Studio 2 and above, including Bitwig Studio 8-Track. The scripts are included in the Bitwig Studio distribution, and there is no need to install them. If there is an update, it can be found on the github site . You can get the maps and scripts from the Sensel web store . You'll need to checkout the digital download, which is available for free from the store: The advantage of downloading from the store is that you will be notified of any updates. If you need a direct download: Mac Windows \u201c Run the installer for Mac or Windows. This will install: Example Bitwig Studio set with sounds and instruments: Mac: ~/Documents/Sensel Morph/Bitwig Project/Sensel Bitwig Remote Script Demo.bw Windows: {userdocs}\\Sensel Morph\\Bitwig Project\\Project\\SSensel Bitwig Remote Script Demo.bw Overlay maps for SenselApp: Mac: ~/Documents/Sensel Morph/Overlay Maps/ Windows: {userdocs}\\Sensel Morph\\Overlay Maps Open the Preferences window in Bitwig Studio and select the Controllers panel. Select the Sensel Morph as your Control Script. The Morph will be automatically detected as the input and output device for the Control Surface.","title":"Download, Install, &amp; Setup"},{"location":"morph_software/#flash-the-morph-with-maps_2","text":"Use the guide below to program your Morph with the Overlay maps for Bitwig.","title":"Flash The Morph with Maps"},{"location":"morph_software/#how-to-use-it_2","text":"We've re-mapped many of the top buttons on the Music Overlays to better match specific functions in Bitwig Studio. We've also added a \"Shift\" button - hold it down to access additional functions for the knobs, pads, and buttons. Top button functions: select (and auto-arm) track to left of current track select (and auto-arm) track to right of current track transpose piano keys down octave (piano overlay only) transpose piano keys up octave (piano overlay only) use pressure to control Send A dial on current track use pressure to control Send B dial on current track start playback stop playback enable overdub to record into MIDI clip shift - like \"shift\" on a typing keyboard - hold down to enable shift functions Top button shifted functions: move session view box left move session view box right -- -- release after pressing shift to set Send A value release after pressing shift to set Send B value -- stop clip on current track record track Additional shift functions launch clips transpose drum machine transpose small keys on music production overlay user-assign knobs and sliders on music production overlay Use the following illustrations as references for the functions in the script. Source code for this script is available on our GitHub site","title":"How to Use It"},{"location":"morph_software/#using-different-overlays_2","text":"The Sensel Bitwig Studio controller script supports all the music overlays for the Morph: Piano, Drum Pad, Music Production, and the Buchla Thunder. It is possible to dedicate a particular overlay to a subset of the tracks in your project. This means you can swap overlays on the Morph, and have each overlay dedicated to a particular track or instrument. Of course, each track will need to be armed for recording. A complete guide is on our YouTube channel , or you can read below. First, you'll need to enable the exclusive port for the overlays you want to use for a dedicated track. This is done in the I/O panel , which is visible when you click the arrows in the bottom right of the Bitwig Studio window: Then, you can select the overlay from the track inputs to restrict that track to only listen to the selected overlay: IMPORTANT: If you do not have an exclusive port enabled for an overlay, and you assign a track that exclusive port, you will get no input from your Morph on that track. In other words, if you assign a track an overlay-specific port, make sure it is enabled in the Studio I/O panel!","title":"Using Different Overlays"},{"location":"morph_software/#pitch-bend-range","text":"Unfortunately, there is not a setting for Pitch Bend range for Bitwig's internal synths. If you want to adjust the bend range from the per-note bends on the Morph, you can use the I/O panel for the MPE Morph script. This is particularly important when using the \"Jump\" bend mode for MPE pitch rounding. For MPE plugins, you can often do this in the plugin itself.","title":"Pitch Bend Range"},{"location":"morph_software/#control-surface-script-flash-the-senselmap-files","text":"The music Overlays will need to flashed with the Overlay maps provided by the installer. The mappings for Ableton Live 11 MPE and Bitwig Studio are the same, so if you use both programs, you can easily move between the programs without reprogramming your Morph. You can use the Ableton Live 11 senselmap files for the Ableton Live 10 script, however, you will not be able to separate the overlays by channel, since the MPE mappings use all MIDI channels on all the overlays.","title":"Control Surface Script: Flash The .senselmap Files"},{"location":"morph_software/#how-to","text":"Open the SenselApp (available on our downloads page ) and import the maps from your Documents/Sensel Morph directory: For each Buchla Thunder, Drum Pad, Music Production, and Piano overlay map, select each map on the left hand panel of the SenselApp and press the top-right \"Send Map To Morph\" button.","title":"How to"},{"location":"morph_software/#fl-studio","text":"FL Studio works with both Windows and Mac operating systems. Open the MIDI Settings window from the Options menu. Select the Morph in the input panel. Click \"enable\" below the Input panel. Select a controller type \"(generic controller)\" from the menu. This enables basic MIDI input for the Morph. You can get more info on using MIDI in FL Studio 12 from their documentation.","title":"FL Studio"},{"location":"morph_software/#cycling-74-max","text":"Max will use any active MIDI device as an input. How you program your patch will affect what happens. The above screenshot illustrates the MIDI input selection menu that appears from double clicking on the MIDI input objects (midiin, ctlin, notein, pgmin, etc.).","title":"Cycling 74 Max"},{"location":"morph_software/#sensel-object-in-max","text":"You can integrate most of the API using objects in Max. This gives you a full dictionary of information about every contact on the Morph including ID, location, pressure, size, and more. The jit.sensel object provides a bitmap force image that you can use in the Jitter matrix processors or as a video input. It's easily installed via the Max package manager. Go to the File menu and select \"Show Package Manager.\" Search the remote packages for \"sensel\" to find the Sensel installer. Click install and read the helpfile.","title":"[sensel] object in Max"},{"location":"morph_software/#apple-logic-pro-x-garage-band-and-main-stage","text":"With Apple music applications, \"it just works\" is the general idea. If it shows up in AudioMIDI Setup, it will provide input to recording-armed tracks to play software synths, samplers, and drums. If you want to add more controls for effects and synths, you can use Logic's \"Learn Controls\" features.","title":"Apple Logic Pro X, Garage Band, and Main Stage"},{"location":"morph_software/#logic-tutorial-video","text":"We have a live-stream style video that goes into detail about setting up the Morph to get the most of it in Logic. This covers the topics of mapping knobs to instrument parameters (like filters) setting up mulitple MIDI map modes setting up the music overlays for playing instruments in Logic setting up Logic to commit overlays to specific tracks get the most out of MPE. Watch this video on our YouTube Channel . The description has a linked table of contents so you can jump to the topics you are interested in.","title":"Logic Tutorial Video"},{"location":"morph_software/#transport-controls","text":"The default messages for the play, stop, and record buttons on the Morph overlays use MIDI Machine Control (MMC). Logic does not respond to this by default. To make it work open the preferences panel, and click on the MIDI tab: and click on \"MIDI Sync Project Settings\" in the lower right. In the new window, make sure the \"Listen to MIDI Machine Control\" is on. Now your Transport buttons on the Morph will function.","title":"Transport Controls"},{"location":"morph_software/#oddities","text":"Logic has some quirks that might be frustrating. Here's some workarounds. These are covered in the tutorial video mentioned above.","title":"Oddities"},{"location":"morph_software/#midi-type","text":"You may need to edit some values in the Expert View, since sometimes Logic will guess incorrectly about the format of incoming data. The procedure is similar for Main Stage.","title":"MIDI type"},{"location":"morph_software/#cc-data","text":"In some cases, you may want to exclude Control Change data from the after-pressure on the Music Production pads. For example, some synths may respond in undesirable ways to the CC data from the Pads. This is particularly noticible on some synths such as Ultrabeat and the Electric Pianos, which automatically respond to CC 43 (Expression). If you want Logic to ignore the CC data, go to the File->Project Settings->MIDI window and select the Input Filter tab. Here, you can select \"Control Changes\" to filter out any CC data from the Morph to Logic. This is a somewhat temporary fix, since this will keep the \"dials\" and sliders on the Music Production Overlay from working. Future firmware updates for the Morph will address this problem more elegantly. Garage Band offers no remote control of parameters from MIDI devices. You can only play instruments with note and pitchbend input.","title":"CC Data"},{"location":"morph_software/#steinberg-cubase","text":"Cubase works well with the Morph. You'll want to load the MIDI Polyphonic Expression (MPE) maps for your Overlays, since Cubase works well with MPE. Open your Studio Setup panel from the Studio menu. Make sure the Morph is selected in the MIDI settings area. If you are using a plugin instrument, you'll want to make sure it is set to listen to MPE. For example, Audio Damage Quanta has a toggle to turn this on: For another example, Madrona Labs Aalto has a menu to set this: In your track settings Inspector, you'll want to make sure you have \"Sensel Morph (note exp)\" set as the input, and select \"Any\" as the MIDI Channel: If you are using Steinberg's built in instruments such as Retrologue, you'll want to make sure the Note Expression data is passed to the Instrument. Make sure the Inspector is showing the Note Expression panel which will look like: In this panel, you can select the basic expressions for X, Y, and Z that will pass through to the instrument: In the instrument, you can use the Modulation Matrix to select a note expression (N7 for Y directions, N8 for pressure) and use it to modulate a parameter in the synthesizer","title":"Steinberg Cubase"},{"location":"morph_software/#video-tutorial_2","text":"This is all detailed in a Live Stream tutorial we did. Cubase section starts here .","title":"Video Tutorial"},{"location":"morph_software/#presonus-studioone-2","text":"Open the Presonus preferences panel and select the External Devices tab. Press the \"Add...\" button to add a new MIDI controller. In the resulting Edit Device panel, you can add \"Sensel\" to the Manufacturer field and \"Morph\" to \"Device Name\" field. Press the All button to receive MIDI on all channels. Select the Morph in the \"Receive From\" menu (there is no need to select the Morph in the Send To menu, since there is currently no MIDI control of the Morph). Engage \"Split Channels\" if you would like to create a separate Instrument Track input for each MIDI channel from the Keyboard. You will probably want to enable Split Channels as pictured, since each Overlay sends on a different MIDI channel. You can choose to use this Keyboard as your \"Default Instrument Input\" by checking the appropriate box. If you are using only one Keyboard with Studio One, you should check this box.","title":"Presonus StudioOne 2"},{"location":"morph_software/#propellerheads-reason","text":"Reason has several ways of using a MIDI keyboard or controller. The most basic is to just add the Morph as a keyboard. Open Reason's Preferences panel, and select the Control Surfaces tab. Click the Add button, and select the \" \" from the Manufacturer menu and \"MIDI Control Keyboard\" from the Model menu. You can type \"Sensel Morph\" into the Name field. Finally, select the Morph from the MIDI Input menu. After you have set that up, you can make a more sophisticated setup to filter channels Select the \"Sync\" tab and add the Sensel Morph to at least one of the External Control Buses, as pictured above. Now you can use the Hardware device in the Reason Rack and click the ADVANCED MIDI button to expose the selectors. It is here that you can map MIDI channels (and thereby different Overlays) from the Morph to different devices in your rack.","title":"Propellerheads Reason"},{"location":"morph_software/#art-software-setups","text":"The basic strategy behind setting up your software to work with the Morph is to understand what parameters come from the Morph and how to apply them to brush properties. In general, there are three dimensions that come from a USB stylus tablet: Pressure , Tilt , and Rotation (or Bearing). In Morph's unique Brush Mode, you want your software brush to adapt to the size of the brush or stylus you are applying to the Morph. This is reported on the \"Tilt\" channel, since traditional tablets use tilt to affect brush size. Pressure is best mapped to the brush opacity to emulate paint or ink density. Rotation is ideally mapped to brush angle when using software brushes that are non-round. Using the Stylus Mode, you can map Pressure and Rotation to your brushes, however, there is no Tilt reported from the Morph. The Sensel Morph currently supports Adobe Photoshop CC, Adobe Illustrator CC, Corel Painter 2017, recent versions of Autodesk Sketchbook, and other art programs if they support Windows Ink or the Sensel macOS Driver.","title":"Art Software Setups"},{"location":"morph_software/#corel-painter","text":"Corel Painter offers a vast array of options for brushes, allowing for models of oils, gels, inks, charcoal, airbrush, and more. These settings are created in the Brushes Control Panel, which has several sub-tabs for the various properties. The first thing you'll need to do is make sure you have the correct tablet type selected in Corel's preferences. Go to the Edit menu and select Preferences , then select the Tablet panel. Make sure \"RTS-compatible Device\" is selected: Now you are ready to modify your brushes. Open the Brush control panel from the Window->Brushes Control Panels->General menu, or use CTL-b . As an example, you can quickly set up a brush for Morph's brush mode using: * Dab type: flat * Opacity Expression to Pressure * Size Expression to Tilt * Angle Expression to Bearing You may also want to refine the \"feel\" of your brush with the Brush Tracking curves. Go to Edit->Preferences->Brush Tracking and follow the instructions to make a brush feel natural.","title":"Corel Painter"},{"location":"morph_software/#adobe-photoshop","text":"Adobe Photoshop of course goes beyond photo editing and provides several options for modelling different art media - airbrush, oils, watercolors, and more. Select the Brush tool from Photoshop's tools pallete: Now you can open the Brush window from the Windows menu and use the Shape Dynamics and Transfer brush properties to apply the Morph's Pressure and Rotation to the brush: Depending on the desired effect, pressure can be applied to Opacity or Flow.","title":"Adobe Photoshop"},{"location":"morph_software/#adobe-illustrator","text":"Adobe Illustrator Adobe Illustrator is a fully featured illustration program, with several different brush options and types. Depending on the chosen brush, there are different places to set up the Morph's Pressure, Rotation, and Tilt data. Below are screen caps of several places you can setup your Morph to interact directly with Brush properties. As you'll see, these options are generally found by double-clicking on the brush in the Brush Window.: First, be aware that there are a couple different types of brush in Illustrator: the Paintbrush and the Blob Brush. Brush selection happens in the Brush Library and Brushes windows. If the Paintbrush is selected (not Blob Brush), you can access the Brush Options from the Brush window hamburger menu: Adobe Illustrator Double clicking on the top brushes in the brush window opens up the Caligraphic Options: Double clicking on an Art Brush in the brush window opens up Art Brush Options: If the Blob Brush is selected in Illustrator's tools, double clicking on that will pull up some more options","title":"Adobe Illustrator"},{"location":"morph_software/#sketchbook-pro","text":"For the most part, Sketchbook only responds to the Pressure and Tilt parameters from a tablet. You can create a new brush using the Circle menu in the Brush Library: Then, double-click on the new brush (or an existing one), and modify its properties. In this example, the minimum and maximum values for size, opacity, and flow have been modified to respond to pressure. Set min and max to the same value to have the parameter unaffected by pressure. Some brushes will respond to tilt, which the Morph uses to send stylus size in Brush Mode. You can use this parameter in some brushes to interesting effect:","title":"Sketchbook Pro"},{"location":"morph_soundpacks/","text":"Morph Soundpacks There are several soundpacks developed for the Morph. Below are some setup details for several of the packs we provide. Techtonics The Sensel Techtonics sound pack is designed for Ableton Live 11 and Bitwig Studio 3.3. It features nine multi-sample synths from the Moog Subharmonicon, Meeblip Geode, Buchla Music Easel, over 60 polyrhythmic loops, five drum racks of percussion and bass kits and a full kit of only kick drums. Beyond great sounds, this kit has many creative uses of MPE. For example, the vertical \"slide\" gesture on the \"Kits\" is used to create a \"rim\" at the top of all the pads, when played with a 4x4 grid. This rim adds a distortion, effect, filter, or other variation to the pad. This pack includes preset versions of all the tracks, so it's easy to incorporate into your own projects from the Live Browser. Techtonics can be purchased from the Sensel store Installation Live 11 Techtonics is delivered as a compressed Ableton Live Pack (.alp) file. Double click on the \"Sensel Techtonics Pack.alp\" file and Ableton Live will launch and ask where you want to install the files. We recommend creating a folder in your Ableton Live folder called \"External Packs\" and installing there: Mac: ~/Music/Ableton/External Packs/ Windows: \\Users[username]\\Documents\\Ableton\\External Packs In Ableton Live, you can click \"Add Folder...\" to your \"Places\" so the presets can be easily found and added to other projects: Bitwig Studio Techtonics is delivered as a Bitwig Project folder. Unzip the downloaded \"Sensel Techtonics Pack BW.zip\" and move the resulting folder to wherever you keep your Bitwig Projects. We'd recommend Mac: ~/Documents/Bitwig Studio/Projects/ Windows: \\Users[username]\\Documents\\Bitwig Studio\\Projects You can either create preset files from the Tracks or simply drag tracks from this project to your existing project. (One of the great things about Bitwig is you can have multiple projects open at the same time!) Instrument Details The different parts are arranged into Group tracks. Open the Groups to see the individual instruments on each track. Synths Vaalbarra, Kaapvaal, Kenora, Nuna, Geoda, Magma Turns out IKEA and supercontinent names have a lot in common! These synths sample the analog oscillators of a Moog Subharmonicon, which can achieve lovely, unusual harmonic relationships in one fat sound. Geoda samples a Buchla Music Easel Command for an atonal percussion style synth. Magma samples the unruly Meeblip Geode to ground it with polyphonic delight. MPE is implemented similarly for all: Low pass filter on Slide, minimal bend on side to side. Pressure controls the filter morph into bandpass and adds LFO pan modulation per-key for a rich stereo image. Ur The Ur synth is a one-shot monophonic bass synth. It uses MPE \"slide\" (up/down) to select from four layers of samples - each layer a different filter setting of the Moog subharmonicon. It is a simple but effective use of MPE. Drums Techtonics Kits 1-5, Kicks Kit 1 focuses on drums - kicks, hats, toms, and percussion sounds, all with a sonic variation at the top of the pad. The rest of the kits are filled with percussive sounds and basses, organized together in rows. Each row generally shares a similar effect at the top edge of the pad, and the right most pad often has a sustain when appropriate. The last kit is 16 custom kicks, each layered from several analog samples. Loops Organized around the Buchla Thunder overlay, the Loops are sampler instruments that let you blend and mix long loops for composing, or just finding the perfect foundation for your track. Press harder on the Morph to double the speed and stereo spread. Of course, you can just grab any loop from the sampler zone and drop it into a clip. Drift Loops A wild assembly of polyrhythmic loops recorded from the Moog Subharmonicon at 120BPM. Everything from the minimal to the maximal, you can find the loop you need by using the Piano or Buchla Thunder overlays on the Sensel Morph. Slide up and down for filter, and press down to \"push\" the sound into a different octave and a send effect. Crystalize Loops Developed by gradually changing a patch, these loops are more related to each other than the Drift set. Control with MPE's Slide and Pressure gestures to find the combination you need. Shift Loops Bassy and abrupt, these loops can provide a bass foundation for tweaking out minds on the dance floor. Credit Sound design by Peter Nyboer with assistance in Bitwig from Ralph Knobloch . express MPE The Sensel express MPE presets are delivered as a zip file. When you download the package, unzip to your Documents/ folder. In the Sensel express MPE Presets Collection folder, you'll find folders for each synthesizer. Most of these have a folder inside named 'Sensel express MPE' that can be put in the synthesizer's preset folder. Below is a complete guide to where and how to do this for each synth. The presets are delivered as a zip file. Simple unzip, and folders for each software instrument listed below will be inside. Xfer Records Serum Xfer Records Serum: There are a couple ways to import presets into Serum. One way is to copy the \"Sensel expresss MPE\" folder to the presets folder: Mac: /Library/Audio/Presets/Xfer Records/Serum Presets/Presets Windows: Documents\\Xfer\\Serum Presets\\Presets\\ If those paths are a headache, just open Serum, and visit the MENU to get to the Presets folder. You can also load individual presets using the \u2018Load Preset\u2019 feature Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. Bitwig Studio 3.3+: Put the Sensel express MPE folder into your Bitwig Library Mac: /Documents/Bitwig Studio/Library/Presets/ Windows: /Users/(username)/Documents/Bitwig Studio/Library/Presets/ You will be able to load them by adding an instrument in your track and finding the express presets by searching for the 'senselexpress' tag: Arturia Pigments v2.2+: Open Pigments either in your DAW or the standalone application. Select \"Import\" from the top left menu and select the 'Sensel express MPE.pgtx' file. Select presets by going to the \"Library button\" and use the \"Sensel express MPE\" bank. Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE on the bottom of the Pigments interface. If you need to know, presets for Pigments are stored in: Mac: /Library/Arturia/Presets/Pigments/User/ Windows: C:\\ProgramData\\Arturia\\Presets\\Pigments\\ Madrona Labs Aalto and Kaivo. Copy the Sensel express MPE folder from the Aalto or Kaivo folder into the plugin\u2019s preset folder. Aalto Presets: Mac: /Users/(username)/Music/Madrona Labs/Aalto Windows: Users(username)\\AppData\\Roaming\\Madrona Labs\\Aalto Kaivo Presets: Mac: /Users/(username)/Music/Madrona Labs/Kaivo Windows: Users(username)\\AppData\\Roaming\\Madrona Labs\\Kaivo Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. Audio Damage Continua, Phosphor, and Quanta:: From the plug-in's interface, click on \"PRESETS\" and click on \"Import Preset/Zip,\" found on the right. Select the zip file 'Sensel express MPE.zip' and import. This adds the presets to the synth. The interface and process for importing a collection of presets is pretty much the same for all Audio Damage synth products. Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. Use the \u201cSettings\u201d or wrench (Phosphor) button to open this interface to turn on MPE mode: If you need to know, presets for Quanta are stored here: Mac: /Users/(username)/Music/Audio Damage/Quanta/User Windows: C:\\ProgramData\\Audio Damage\\Quanta\\ Ableton Live 11 Double click on the .alp file in the Ableton folder of this preset collection. Ableton Live will ask where you want to install it, it's usually best to choose your Ableton Live Library. Presets are in the \"Presets\" folder of the installed project and should be accessible from the Live browser. If you try to use a Preset and Live alerts you that \u201cMedia Files are Missing\u201d, make sure you add the express MPE project folder to your Live search path in the Live Browser. Use the \"Add Folder\" button in the bottom left of the Live Browser. Ashun Sound Machines Hydrasynth Download the Hydrasynth Patch Manager from https://www.ashunsoundmachines.com/downloads Run the Hydrasynth Manager. If your Hydrasynth is connected by a USB cable, then it will automatically connect. Otherwise, use the \u201cOpen MIDI Device\u201d button. Import the \"Sensel express MPE pack.hydra\" from this collection's Hydrasynth folder. Select a bank on the Hydra side of the manager, then drag presets to Hydrasynth bank panel. Newfangled Audio Generate and Pendulate Before you load the plugin, copy the \"Generate (or Pendulate)/Sensel express MPE\" folder from the express collection to the presets folders for Generate and Pendulate. Mac: ~/Music/Newfangled Audio/Generate (or Pendulate)/Presets/ Windows: \\Documents\\Newfangled Audio\\Generate (or Pendulate)\\Presets The presets will be available in the preset selector: Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. sonicLAB Fundamental Open Fundamental as either a standalone or plugin version. Click the \"IM\" button to import the Sensel_express.xml You can then select presets from the bank: Presets are stored at: Mac: /Users/Shared/sonicLAB/Fundamental/PresetBanks Windows: Documents/sonicLAB/Fundamental/PresetBanks Vital From the Vital interface, use the function menu (three horizontal lines) to select \"Import Bank.\" Navigate to the \"Sensel express MPE.vitalbank\" file in the express MPE collection download, and select it. You can now load presets from this bank in Vital. Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. Preset files are stored in Mac: /Users/(username)/Music/Vital Windows: Documents\\Vital\\ Credits Many presets in the express MPE collection were designed by Matt Pike https://www.mattpikesounddesign.com/. Others by Peter Nyboer. Sarah Belle Reid Sound Worlds The Sound Worlds pack is a unique collection of Live Samplers and Effects that are designed to be played with the Buchla Thunder Overlay for the Sensel Morph. The pack is delivered as a zip file, and contains two Live Project folders - one for Live 10 and one for Live 11. The Live 11 version is designed to work with MIDI Polyphonic Expression (MPE) controls, and has some bonus Sampler instruments that work with MPE. Each version has its own .senselmap file that will need to be loaded onto the Morph using the Sensel App. Learn more about this pack at https://morph.sensel.com/pages/sbrbuchla Live 10 vs Live 11 The Live 10 version will not work in Live 11. The main reason is that the Expression Control device is significantly different in between the two versions. If you are working with Live 10 and the Sensel Morph, we recommend using the Live 10 Remote Script. You can get that setup using the instructions in our online guide: http://guide.sensel.com/morph_software/#ableton-live-control-surface There is also a Remote Script for Live 11 and MPE available on our github site: https://github.com/sensel/sensel-controller-scripts In the event you are already using the Remote Script for Live 10, you\u2019ll want to make sure you have the correct map loaded on the Sensel Morph for the Thunder Overlay. The Remote Script is not required to play with Sound Worlds. See the following pages on how to set this up. Live 10 Unzip the \u201cSound World\u201d archive Open the \u201cSound Worlds Live 10\u201d folder Open the SenselApp Import the \u201cAbleton Live 10 Thunder - Sound Worlds\u201d senselmap file from the \u201cSound Worlds Live 10\u201d folder and \u201cSend Map to Morph\u201d Open the \u201cSound Worlds\u201d Live project file Use the Thunder \u201cPreset Selector\u201d to select Preset 9 In Ableton Preferences, select the MIDI Tab and make sure the Sensel Morph is selected as a MIDI input device for Track and Remote. If you are using the Remote Script, make sure the Morph is selected as the the Input Live 11 Unzip the \u201cSound World\u201d archive Open the \u201cSound Worlds Live 11\u201d folder Open the SenselApp Import the \u201cThunder Ableton MPE.senselmap\u201d file from the \u201cSound Worlds Live 11\u201d folder and \u201cSend Map to Morph\u201d. This is the same map included in the github repo for the script, so if you have installed the Live 11 Script maps on your Morph, this is not needed. Open the \u201cSound Worlds\u201d Live project file Use the Thunder \u201cPreset Selector\u201d to select Preset 8 In Ableton Preferences, select the MIDI Tab and make sure the Sensel Morph is selected as a MIDI input device for Track, Remote, and MPE. If you are using the Remote Script, make sure the Morph is selected as the the Input Play and Explore The Sounds are grouped with different pads on the Thunder. Pressure and location often change the sound - usually filters, arpeggiation speed, pitch shift, and effects. It varies, and is up to you to discover. Enjoy! Credit Sound and Interaction Design: Sarah Belle Reid - website Technical Support and Documentation: Peter Nyboer - website","title":"Soundpack Setups"},{"location":"morph_soundpacks/#morph-soundpacks","text":"There are several soundpacks developed for the Morph. Below are some setup details for several of the packs we provide.","title":"Morph Soundpacks"},{"location":"morph_soundpacks/#techtonics","text":"The Sensel Techtonics sound pack is designed for Ableton Live 11 and Bitwig Studio 3.3. It features nine multi-sample synths from the Moog Subharmonicon, Meeblip Geode, Buchla Music Easel, over 60 polyrhythmic loops, five drum racks of percussion and bass kits and a full kit of only kick drums. Beyond great sounds, this kit has many creative uses of MPE. For example, the vertical \"slide\" gesture on the \"Kits\" is used to create a \"rim\" at the top of all the pads, when played with a 4x4 grid. This rim adds a distortion, effect, filter, or other variation to the pad. This pack includes preset versions of all the tracks, so it's easy to incorporate into your own projects from the Live Browser. Techtonics can be purchased from the Sensel store","title":"Techtonics"},{"location":"morph_soundpacks/#installation","text":"","title":"Installation"},{"location":"morph_soundpacks/#live-11","text":"Techtonics is delivered as a compressed Ableton Live Pack (.alp) file. Double click on the \"Sensel Techtonics Pack.alp\" file and Ableton Live will launch and ask where you want to install the files. We recommend creating a folder in your Ableton Live folder called \"External Packs\" and installing there: Mac: ~/Music/Ableton/External Packs/ Windows: \\Users[username]\\Documents\\Ableton\\External Packs In Ableton Live, you can click \"Add Folder...\" to your \"Places\" so the presets can be easily found and added to other projects:","title":"Live 11"},{"location":"morph_soundpacks/#bitwig-studio","text":"Techtonics is delivered as a Bitwig Project folder. Unzip the downloaded \"Sensel Techtonics Pack BW.zip\" and move the resulting folder to wherever you keep your Bitwig Projects. We'd recommend Mac: ~/Documents/Bitwig Studio/Projects/ Windows: \\Users[username]\\Documents\\Bitwig Studio\\Projects You can either create preset files from the Tracks or simply drag tracks from this project to your existing project. (One of the great things about Bitwig is you can have multiple projects open at the same time!)","title":"Bitwig Studio"},{"location":"morph_soundpacks/#instrument-details","text":"The different parts are arranged into Group tracks. Open the Groups to see the individual instruments on each track.","title":"Instrument Details"},{"location":"morph_soundpacks/#synths","text":"","title":"Synths"},{"location":"morph_soundpacks/#vaalbarra-kaapvaal-kenora-nuna-geoda-magma","text":"Turns out IKEA and supercontinent names have a lot in common! These synths sample the analog oscillators of a Moog Subharmonicon, which can achieve lovely, unusual harmonic relationships in one fat sound. Geoda samples a Buchla Music Easel Command for an atonal percussion style synth. Magma samples the unruly Meeblip Geode to ground it with polyphonic delight. MPE is implemented similarly for all: Low pass filter on Slide, minimal bend on side to side. Pressure controls the filter morph into bandpass and adds LFO pan modulation per-key for a rich stereo image.","title":"Vaalbarra, Kaapvaal, Kenora, Nuna, Geoda, Magma"},{"location":"morph_soundpacks/#ur","text":"The Ur synth is a one-shot monophonic bass synth. It uses MPE \"slide\" (up/down) to select from four layers of samples - each layer a different filter setting of the Moog subharmonicon. It is a simple but effective use of MPE.","title":"Ur"},{"location":"morph_soundpacks/#drums","text":"","title":"Drums"},{"location":"morph_soundpacks/#techtonics-kits-1-5-kicks","text":"Kit 1 focuses on drums - kicks, hats, toms, and percussion sounds, all with a sonic variation at the top of the pad. The rest of the kits are filled with percussive sounds and basses, organized together in rows. Each row generally shares a similar effect at the top edge of the pad, and the right most pad often has a sustain when appropriate. The last kit is 16 custom kicks, each layered from several analog samples.","title":"Techtonics Kits 1-5, Kicks"},{"location":"morph_soundpacks/#loops","text":"Organized around the Buchla Thunder overlay, the Loops are sampler instruments that let you blend and mix long loops for composing, or just finding the perfect foundation for your track. Press harder on the Morph to double the speed and stereo spread. Of course, you can just grab any loop from the sampler zone and drop it into a clip.","title":"Loops"},{"location":"morph_soundpacks/#drift-loops","text":"A wild assembly of polyrhythmic loops recorded from the Moog Subharmonicon at 120BPM. Everything from the minimal to the maximal, you can find the loop you need by using the Piano or Buchla Thunder overlays on the Sensel Morph. Slide up and down for filter, and press down to \"push\" the sound into a different octave and a send effect.","title":"Drift Loops"},{"location":"morph_soundpacks/#crystalize-loops","text":"Developed by gradually changing a patch, these loops are more related to each other than the Drift set. Control with MPE's Slide and Pressure gestures to find the combination you need.","title":"Crystalize Loops"},{"location":"morph_soundpacks/#shift-loops","text":"Bassy and abrupt, these loops can provide a bass foundation for tweaking out minds on the dance floor.","title":"Shift Loops"},{"location":"morph_soundpacks/#credit","text":"Sound design by Peter Nyboer with assistance in Bitwig from Ralph Knobloch .","title":"Credit"},{"location":"morph_soundpacks/#express-mpe","text":"The Sensel express MPE presets are delivered as a zip file. When you download the package, unzip to your Documents/ folder. In the Sensel express MPE Presets Collection folder, you'll find folders for each synthesizer. Most of these have a folder inside named 'Sensel express MPE' that can be put in the synthesizer's preset folder. Below is a complete guide to where and how to do this for each synth. The presets are delivered as a zip file. Simple unzip, and folders for each software instrument listed below will be inside.","title":"express MPE"},{"location":"morph_soundpacks/#xfer-records-serum","text":"Xfer Records Serum: There are a couple ways to import presets into Serum. One way is to copy the \"Sensel expresss MPE\" folder to the presets folder: Mac: /Library/Audio/Presets/Xfer Records/Serum Presets/Presets Windows: Documents\\Xfer\\Serum Presets\\Presets\\ If those paths are a headache, just open Serum, and visit the MENU to get to the Presets folder. You can also load individual presets using the \u2018Load Preset\u2019 feature Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE.","title":"Xfer Records Serum"},{"location":"morph_soundpacks/#bitwig-studio-33","text":"Put the Sensel express MPE folder into your Bitwig Library Mac: /Documents/Bitwig Studio/Library/Presets/ Windows: /Users/(username)/Documents/Bitwig Studio/Library/Presets/ You will be able to load them by adding an instrument in your track and finding the express presets by searching for the 'senselexpress' tag:","title":"Bitwig Studio 3.3+:"},{"location":"morph_soundpacks/#arturia-pigments-v22","text":"Open Pigments either in your DAW or the standalone application. Select \"Import\" from the top left menu and select the 'Sensel express MPE.pgtx' file. Select presets by going to the \"Library button\" and use the \"Sensel express MPE\" bank. Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE on the bottom of the Pigments interface. If you need to know, presets for Pigments are stored in: Mac: /Library/Arturia/Presets/Pigments/User/ Windows: C:\\ProgramData\\Arturia\\Presets\\Pigments\\","title":"Arturia Pigments v2.2+:"},{"location":"morph_soundpacks/#madrona-labs-aalto-and-kaivo","text":"Copy the Sensel express MPE folder from the Aalto or Kaivo folder into the plugin\u2019s preset folder. Aalto Presets: Mac: /Users/(username)/Music/Madrona Labs/Aalto Windows: Users(username)\\AppData\\Roaming\\Madrona Labs\\Aalto Kaivo Presets: Mac: /Users/(username)/Music/Madrona Labs/Kaivo Windows: Users(username)\\AppData\\Roaming\\Madrona Labs\\Kaivo Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE.","title":"Madrona Labs Aalto and Kaivo."},{"location":"morph_soundpacks/#audio-damage-continua-phosphor-and-quanta","text":"From the plug-in's interface, click on \"PRESETS\" and click on \"Import Preset/Zip,\" found on the right. Select the zip file 'Sensel express MPE.zip' and import. This adds the presets to the synth. The interface and process for importing a collection of presets is pretty much the same for all Audio Damage synth products. Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. Use the \u201cSettings\u201d or wrench (Phosphor) button to open this interface to turn on MPE mode: If you need to know, presets for Quanta are stored here: Mac: /Users/(username)/Music/Audio Damage/Quanta/User Windows: C:\\ProgramData\\Audio Damage\\Quanta\\","title":"Audio Damage Continua, Phosphor, and Quanta::"},{"location":"morph_soundpacks/#ableton-live-11","text":"Double click on the .alp file in the Ableton folder of this preset collection. Ableton Live will ask where you want to install it, it's usually best to choose your Ableton Live Library. Presets are in the \"Presets\" folder of the installed project and should be accessible from the Live browser. If you try to use a Preset and Live alerts you that \u201cMedia Files are Missing\u201d, make sure you add the express MPE project folder to your Live search path in the Live Browser. Use the \"Add Folder\" button in the bottom left of the Live Browser.","title":"Ableton Live 11"},{"location":"morph_soundpacks/#ashun-sound-machines-hydrasynth","text":"Download the Hydrasynth Patch Manager from https://www.ashunsoundmachines.com/downloads Run the Hydrasynth Manager. If your Hydrasynth is connected by a USB cable, then it will automatically connect. Otherwise, use the \u201cOpen MIDI Device\u201d button. Import the \"Sensel express MPE pack.hydra\" from this collection's Hydrasynth folder. Select a bank on the Hydra side of the manager, then drag presets to Hydrasynth bank panel.","title":"Ashun Sound Machines Hydrasynth"},{"location":"morph_soundpacks/#newfangled-audio-generate-and-pendulate","text":"Before you load the plugin, copy the \"Generate (or Pendulate)/Sensel express MPE\" folder from the express collection to the presets folders for Generate and Pendulate. Mac: ~/Music/Newfangled Audio/Generate (or Pendulate)/Presets/ Windows: \\Documents\\Newfangled Audio\\Generate (or Pendulate)\\Presets The presets will be available in the preset selector: Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE.","title":"Newfangled Audio Generate and Pendulate"},{"location":"morph_soundpacks/#soniclab-fundamental","text":"Open Fundamental as either a standalone or plugin version. Click the \"IM\" button to import the Sensel_express.xml You can then select presets from the bank: Presets are stored at: Mac: /Users/Shared/sonicLAB/Fundamental/PresetBanks Windows: Documents/sonicLAB/Fundamental/PresetBanks","title":"sonicLAB Fundamental"},{"location":"morph_soundpacks/#vital","text":"From the Vital interface, use the function menu (three horizontal lines) to select \"Import Bank.\" Navigate to the \"Sensel express MPE.vitalbank\" file in the express MPE collection download, and select it. You can now load presets from this bank in Vital. Make sure your DAW\u2019s instrument track is setup for MPE, and make sure the plugin is set to listen to MIDI MPE. Preset files are stored in Mac: /Users/(username)/Music/Vital Windows: Documents\\Vital\\","title":"Vital"},{"location":"morph_soundpacks/#credits","text":"Many presets in the express MPE collection were designed by Matt Pike https://www.mattpikesounddesign.com/. Others by Peter Nyboer.","title":"Credits"},{"location":"morph_soundpacks/#sarah-belle-reid-sound-worlds","text":"The Sound Worlds pack is a unique collection of Live Samplers and Effects that are designed to be played with the Buchla Thunder Overlay for the Sensel Morph. The pack is delivered as a zip file, and contains two Live Project folders - one for Live 10 and one for Live 11. The Live 11 version is designed to work with MIDI Polyphonic Expression (MPE) controls, and has some bonus Sampler instruments that work with MPE. Each version has its own .senselmap file that will need to be loaded onto the Morph using the Sensel App. Learn more about this pack at https://morph.sensel.com/pages/sbrbuchla","title":"Sarah Belle Reid Sound Worlds"},{"location":"morph_soundpacks/#live-10-vs-live-11","text":"The Live 10 version will not work in Live 11. The main reason is that the Expression Control device is significantly different in between the two versions. If you are working with Live 10 and the Sensel Morph, we recommend using the Live 10 Remote Script. You can get that setup using the instructions in our online guide: http://guide.sensel.com/morph_software/#ableton-live-control-surface There is also a Remote Script for Live 11 and MPE available on our github site: https://github.com/sensel/sensel-controller-scripts In the event you are already using the Remote Script for Live 10, you\u2019ll want to make sure you have the correct map loaded on the Sensel Morph for the Thunder Overlay. The Remote Script is not required to play with Sound Worlds. See the following pages on how to set this up.","title":"Live 10 vs Live 11"},{"location":"morph_soundpacks/#live-10","text":"Unzip the \u201cSound World\u201d archive Open the \u201cSound Worlds Live 10\u201d folder Open the SenselApp Import the \u201cAbleton Live 10 Thunder - Sound Worlds\u201d senselmap file from the \u201cSound Worlds Live 10\u201d folder and \u201cSend Map to Morph\u201d Open the \u201cSound Worlds\u201d Live project file Use the Thunder \u201cPreset Selector\u201d to select Preset 9 In Ableton Preferences, select the MIDI Tab and make sure the Sensel Morph is selected as a MIDI input device for Track and Remote. If you are using the Remote Script, make sure the Morph is selected as the the Input","title":"Live 10"},{"location":"morph_soundpacks/#live-11_1","text":"Unzip the \u201cSound World\u201d archive Open the \u201cSound Worlds Live 11\u201d folder Open the SenselApp Import the \u201cThunder Ableton MPE.senselmap\u201d file from the \u201cSound Worlds Live 11\u201d folder and \u201cSend Map to Morph\u201d. This is the same map included in the github repo for the script, so if you have installed the Live 11 Script maps on your Morph, this is not needed. Open the \u201cSound Worlds\u201d Live project file Use the Thunder \u201cPreset Selector\u201d to select Preset 8 In Ableton Preferences, select the MIDI Tab and make sure the Sensel Morph is selected as a MIDI input device for Track, Remote, and MPE. If you are using the Remote Script, make sure the Morph is selected as the the Input","title":"Live 11"},{"location":"morph_soundpacks/#play-and-explore","text":"The Sounds are grouped with different pads on the Thunder. Pressure and location often change the sound - usually filters, arpeggiation speed, pitch shift, and effects. It varies, and is up to you to discover. Enjoy!","title":"Play and Explore"},{"location":"morph_soundpacks/#credit_1","text":"Sound and Interaction Design: Sarah Belle Reid - website Technical Support and Documentation: Peter Nyboer - website","title":"Credit"}]}